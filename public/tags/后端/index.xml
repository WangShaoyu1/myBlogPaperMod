<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>后端 on PaperMod</title>
    <link>http://localhost:1313/tags/%E5%90%8E%E7%AB%AF/</link>
    <description>Recent content in 后端 on PaperMod</description>
    <image>
      <title>PaperMod</title>
      <url>http://localhost:1313/images/papermod-cover.png</url>
      <link>http://localhost:1313/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.134.1</generator>
    <language>zh</language>
    <copyright>粤ICP备2023039897号-1</copyright>
    <lastBuildDate>Sat, 12 Oct 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E5%90%8E%E7%AB%AF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubernetes：Seccomp、AppArmor、SELinux&amp;Pod安全性标准和准入</title>
      <link>http://localhost:1313/posts/juejin/kubernetesseccompapparmorselinuxpod%E5%AE%89%E5%85%A8%E6%80%A7%E6%A0%87%E5%87%86%E5%92%8C%E5%87%86%E5%85%A5/</link>
      <pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/juejin/kubernetesseccompapparmorselinuxpod%E5%AE%89%E5%85%A8%E6%80%A7%E6%A0%87%E5%87%86%E5%92%8C%E5%87%86%E5%85%A5/</guid>
      <description>在云原生环境中，为确保容器化应用的安全运行，Kubernetes利用了Linux内核的三大安全机制：Seccomp、AppArmor和SELinux，并引入了Pod安全性标准与准入控制来</description>
    </item>
    <item>
      <title>面试官：为什么忘记密码要重置而不是告诉你原密码？</title>
      <link>http://localhost:1313/posts/juejin/%E9%9D%A2%E8%AF%95%E5%AE%98%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81%E8%A6%81%E9%87%8D%E7%BD%AE%E8%80%8C%E4%B8%8D%E6%98%AF%E5%91%8A%E8%AF%89%E4%BD%A0%E5%8E%9F%E5%AF%86%E7%A0%81/</link>
      <pubDate>Tue, 16 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/juejin/%E9%9D%A2%E8%AF%95%E5%AE%98%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81%E8%A6%81%E9%87%8D%E7%BD%AE%E8%80%8C%E4%B8%8D%E6%98%AF%E5%91%8A%E8%AF%89%E4%BD%A0%E5%8E%9F%E5%AF%86%E7%A0%81/</guid>
      <description>这是一个挺有意思的面试题，挺简单的，不知道大家平时在重置密码的时候有没有想过这个问题。回答这个问题其实就一句话：因为服务端也不知道你的原密码是什么。如果知道的话，那就是严重的安全风险问题了。我们这里</description>
    </item>
    <item>
      <title>Python路由与视图函数：构建高效Web应用的秘密武器</title>
      <link>http://localhost:1313/posts/juejin/python%E8%B7%AF%E7%94%B1%E4%B8%8E%E8%A7%86%E5%9B%BE%E5%87%BD%E6%95%B0%E6%9E%84%E5%BB%BA%E9%AB%98%E6%95%88web%E5%BA%94%E7%94%A8%E7%9A%84%E7%A7%98%E5%AF%86%E6%AD%A6%E5%99%A8/</link>
      <pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/juejin/python%E8%B7%AF%E7%94%B1%E4%B8%8E%E8%A7%86%E5%9B%BE%E5%87%BD%E6%95%B0%E6%9E%84%E5%BB%BA%E9%AB%98%E6%95%88web%E5%BA%94%E7%94%A8%E7%9A%84%E7%A7%98%E5%AF%86%E6%AD%A6%E5%99%A8/</guid>
      <description>路由与视图函数是任何基于Python的Web框架（如Flask或Django）的基础组成部分。它们不仅决定了用户请求如何被处理，还影响着整个应用程序的架构设计。通过合理地设置路由规则，并编写高效的视图</description>
    </item>
    <item>
      <title>记一次JProfiler生产实战内存分析（三）</title>
      <link>http://localhost:1313/posts/juejin/%E8%AE%B0%E4%B8%80%E6%AC%A1jprofiler%E7%94%9F%E4%BA%A7%E5%AE%9E%E6%88%98%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90%E4%B8%89/</link>
      <pubDate>Sat, 12 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/juejin/%E8%AE%B0%E4%B8%80%E6%AC%A1jprofiler%E7%94%9F%E4%BA%A7%E5%AE%9E%E6%88%98%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90%E4%B8%89/</guid>
      <description>本篇文章是JProfiler生产实战分析第三篇，近期线上又有个服务频繁重启告警，本篇文章讲述了如何分析元空间溢出</description>
    </item>
    <item>
      <title>又一个好用的工具spring-smart-di(上)</title>
      <link>http://localhost:1313/posts/juejin/%E5%8F%88%E4%B8%80%E4%B8%AA%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7spring-smart-di%E4%B8%8A/</link>
      <pubDate>Sat, 12 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/juejin/%E5%8F%88%E4%B8%80%E4%B8%AA%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7spring-smart-di%E4%B8%8A/</guid>
      <description>又一个好用的工具spring-smart-dispring-smart-di是做什么的基于配置动态选择依赖的框架。假设接口有两个实现，可以基于配置动态选择注入哪一个实现。示例配置文件接口</description>
    </item>
    <item>
      <title>Redis客户端实现</title>
      <link>http://localhost:1313/posts/juejin/redis%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/juejin/redis%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%9E%E7%8E%B0/</guid>
      <description>前言要想实现客户端与服务端间通信，在传输层协议TCP或UDP的基础上，定义客户端与服务端都能识别信息的规则，俗称【协议】。在Redis中，定义了简单的RESP（REdisSeria</description>
    </item>
    <item>
      <title>trycatch和他表兄弟return</title>
      <link>http://localhost:1313/posts/juejin/trycatch%E5%92%8C%E4%BB%96%E8%A1%A8%E5%85%84%E5%BC%9Freturn/</link>
      <pubDate>Fri, 31 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/juejin/trycatch%E5%92%8C%E4%BB%96%E8%A1%A8%E5%85%84%E5%BC%9Freturn/</guid>
      <description>说一个之前面试的面试题，主题就是trycatch、finally和renturn以及如果有异常他们之间的执行顺序关系，面试官很和蔼可亲，问的问题看的也不是很难，就这一个点他拆成了5、6个小点问我，我</description>
    </item>
    <item>
      <title>我是DB搬运工，我哪会排查问题。。。</title>
      <link>http://localhost:1313/posts/juejin/%E6%88%91%E6%98%AFdb%E6%90%AC%E8%BF%90%E5%B7%A5%E6%88%91%E5%93%AA%E4%BC%9A%E6%8E%92%E6%9F%A5%E9%97%AE%E9%A2%98/</link>
      <pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/juejin/%E6%88%91%E6%98%AFdb%E6%90%AC%E8%BF%90%E5%B7%A5%E6%88%91%E5%93%AA%E4%BC%9A%E6%8E%92%E6%9F%A5%E9%97%AE%E9%A2%98/</guid>
      <description>今天说说如何排查线上问题，首先声明如果想看什么cpu优化。jvm优化的，我这不适合，我这属于广大底层人士的，纯纯的CRUD，没那么多的性能优化；开干报错信息的问题首先说一个报错信息的问题：对于线</description>
    </item>
    <item>
      <title>线上数据库死锁了！震惊</title>
      <link>http://localhost:1313/posts/juejin/%E7%BA%BF%E4%B8%8A%E6%95%B0%E6%8D%AE%E5%BA%93%E6%AD%BB%E9%94%81%E4%BA%86%E9%9C%87%E6%83%8A/</link>
      <pubDate>Tue, 28 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/juejin/%E7%BA%BF%E4%B8%8A%E6%95%B0%E6%8D%AE%E5%BA%93%E6%AD%BB%E9%94%81%E4%BA%86%E9%9C%87%E6%83%8A/</guid>
      <description>一、定位问题报错信息：Lockwaittimeoutexceeded；tryrestartingtransaction11代码流程问题果然，大哥实现数据的导入方式是先校验，完成</description>
    </item>
    <item>
      <title>听说你线程和对象八股很狂？saysaylook</title>
      <link>http://localhost:1313/posts/juejin/%E5%90%AC%E8%AF%B4%E4%BD%A0%E7%BA%BF%E7%A8%8B%E5%92%8C%E5%AF%B9%E8%B1%A1%E5%85%AB%E8%82%A1%E5%BE%88%E7%8B%82saysaylook/</link>
      <pubDate>Fri, 24 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/juejin/%E5%90%AC%E8%AF%B4%E4%BD%A0%E7%BA%BF%E7%A8%8B%E5%92%8C%E5%AF%B9%E8%B1%A1%E5%85%AB%E8%82%A1%E5%BE%88%E7%8B%82saysaylook/</guid>
      <description>首先线程是一个私有的东西，在JVM中呢我们的对象都是在堆这样的共享区，好了，接下来我们通过newThread()创建线程,以下是创建过程，前面还有一步就是如果我们不给</description>
    </item>
  </channel>
</rss>
