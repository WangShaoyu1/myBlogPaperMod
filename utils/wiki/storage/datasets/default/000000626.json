{
	"title": "养猪通用知识",
	"author": "王宇",
	"publishTime": "四月17,2024",
	"readTime": "12s",
	"tags": "[\"养猪专家\"]",
	"description": "养猪专家",
	"article": "*   1[1\\. 书本类数据](#id-养猪通用知识-书本类数据)\n    *   1.1[1.1. 文件目录初始化](#id-养猪通用知识-文件目录初始化)\n    *   1.2[1.2. 文件1：pdf转word](#id-养猪通用知识-文件1：pdf转word)\n    *   1.3[1.3. 文件1.1：手动加样式](#id-养猪通用知识-文件1.1：手动加样式)\n    *   1.4[1.4. 文件1.2：程序标记标题](#id-养猪通用知识-文件1.2：程序标记标题)\n        *   1.4.1[1.4.1. 将目录写入“目录.xlsx”文件](#id-养猪通用知识-将目录写入“目录.xlsx”文件)\n        *   1.4.2[1.4.2. 程序自动标记标题与处理LaTeX公式](#id-养猪通用知识-程序自动标记标题与处理LaTeX公式)\n    *   1.5[1.5. 文件2：人工审核1、2级标题](#id-养猪通用知识-文件2：人工审核1、2级标题)\n        *   1.5.1[1.5.1. 取消分栏（可选）](#id-养猪通用知识-取消分栏（可选）)\n        *   1.5.2[1.5.2. 取消超级链接](#id-养猪通用知识-取消超级链接)\n        *   1.5.3[1.5.3. 【人工】标记标题](#id-养猪通用知识-【人工】标记标题)\n    *   1.6[1.6. 文件3：程序自动清洗](#id-养猪通用知识-文件3：程序自动清洗)\n    *   1.7[1.7. 文件4：人工审核清洗](#id-养猪通用知识-文件4：人工审核清洗)\n    *   1.8[1.8. 文件5：最终版](#id-养猪通用知识-文件5：最终版)\n*   2[2\\. 网络表格类数据](#id-养猪通用知识-网络表格类数据)\n\n**最终目标：匹配要准，内容要精确无废话。**\n\n*   准确：注定不能太长，也不能太短。\n*   内容要精确无废话：内容不能有重复；要精炼，无废话；\n\n**文件内容：**\n\n文件1：文件拆分  \n文件1.1：手动加样式  \n文件1.2：程序标记标题  \n文件2：标记标题  \n文件3：程序自动清洗  \n文件4：人工审核清洗  \n文件5：最终版\n\n  \n\n![](/download/attachments/114685955/image2024-2-23_10-12-58.png?version=1&modificationDate=1708654376044&api=v2)\n\n1\\. 书本类数据\n=========\n\n1.1. 文件目录初始化\n------------\n\n打开main.py文件，输入书名，执行init\\_file函数。\n\n![](/download/attachments/114685955/image2024-4-8_17-45-2.png?version=1&modificationDate=1712569501051&api=v2)\n\n1.2. 文件1：pdf转word\n-----------------\n\n若文件是PDF，使用WPS对超过400页的PDF进行拆分，拆分成每个PDF只有400页以内的数量。因为WPS的PDF转WORD功能的性能上线是400页，超过400页，PDF转WORD可能会失败。\n\n使用WPS的PDF转word功能，对拆分后的PDF文件进行转换。\n\n1.3. 文件1.1：手动加样式\n----------------\n\n将文件1的文件复制一份到，文件1.1。并且在文件的开头加上“1.1.”。如文件1的word名为“猪生产学.docx”，复制到文件1.1后，需修改为“1.1.猪生产学.docx”。这样做是为了打开多个同名文件的时候，看word名就能识别文件所处的处理阶段，因为整个处理过程的word会被留存，如果名字一样，只根据名称就难以区分文件所处阶段。\n\n在word文件的最开头，插入一个分页符。然后粘贴以下的内容\n\nNormal\nHeading 1\nHeading 2\nHeading 3\nHeading 4\nHeading 5\nHeading 6\n$$$$结束$$$$\n\n分别将 Heading 设置相应的样式。修改样式的颜色为红色。保存。normal设正文就可以，正文不用改成红色。\n\n![](/download/attachments/114685955/image2024-3-6_10-43-58.png?version=1&modificationDate=1709693036678&api=v2)\n\n1.4. 文件1.2：程序标记标题\n-----------------\n\n### 1.4.1. 将目录写入“目录.xlsx”文件\n\n执行identify\\_title函数，可获得程序识别的标题，可查看“识别标题.xlsx”文件。人工审核 ，通过排序，将属于标题的文本，复制入“目录.xlsx”中。\n\n![](/download/thumbnails/114685955/image2024-4-8_17-52-28.png?version=1&modificationDate=1712569946652&api=v2)![](/download/attachments/114685955/image2024-4-8_17-53-40.png?version=1&modificationDate=1712570018545&api=v2)![](/download/attachments/114685955/image2024-4-8_17-55-21.png?version=1&modificationDate=1712570119529&api=v2)\n\n若是点序号的文档，可以使用=LEN(B17)-LEN(SUBSTITUTE(B17,\".\",\"\")) 公式判别层级。\n\n![](/download/attachments/114685955/image2024-4-8_18-13-56.png?version=1&modificationDate=1712571235087&api=v2)\n\n设置标题层级。部分可以设做标题，但意义不大，但是页码有这个标题，可以直接设为“Heading 1”\n\n![](/download/attachments/114685955/image2024-2-22_9-48-25.png?version=1&modificationDate=1708566503473&api=v2)\n\n### 1.4.2. 程序自动标记标题与处理LaTeX公式\n\npython编辑器，打开main.py文件，填入文件地址，执行mark\\_title\\_and\\_latex\\_transfrom函数。程序将会根据“目录.xlsx”的内容标记标题，同时会将LaTeX图片转换为文本。\n\n![](/download/attachments/114685955/image2024-4-8_17-56-17.png?version=1&modificationDate=1712570175678&api=v2)\n\n1.5. 文件2：人工审核1、2级标题\n-------------------\n\n手动标记1、2级标题。为节省时间，这个环节只需要检查1、2级标题是否被正确标注。其他级标题不需要在这个环节检查和修正，因为后续人工审核阶段可以在补充标注。\n\n同时需要关注\n\n  \n\n### 1.5.1. 取消分栏（可选）\n\n全选文本，选择布局中的分栏。选择一栏。这样设置能让表格和图片显示更规整，便于数据处理人员处理。\n\n![](/download/attachments/114685955/image2024-1-24_11-21-43.png?version=1&modificationDate=1706066503534&api=v2)\n\n### 1.5.2. 取消超级链接\n\n保留超级连接，python的docx库无法正常读取文字，超链在知识库里也不生效，故需取消。\n\n先全选文本。随后按 Ctrl+Shift+F9。\n\n### 1.5.3. 【人工】标记标题\n\n处理数据的顺序是从上往下。按照标题在书里的层级，选择相应的标题样式。标记1~4。\n\n**注意：标题的层次得标对**\n\n![](/download/attachments/114685955/image2024-1-24_10-20-2.png?version=1&modificationDate=1706062802845&api=v2)![](/download/attachments/114685955/image2024-1-24_10-23-45.png?version=1&modificationDate=1706063025479&api=v2)\n\n1.6. 文件3：程序自动清洗\n---------------\n\npython编辑器，打开main.py文件，填入文件地址，执行doc\\_clean函数\n\n![](/download/attachments/114685955/image2024-2-23_10-14-28.png?version=1&modificationDate=1708654465072&api=v2)\n\n1.7. 文件4：人工审核清洗\n---------------\n\n再过一遍word文件，有部分数据未清洗干净的，手动清洗。补充未被标注的标题，清洗过程中手动标注。\n\n**①删除未删干净的图表描述**。\n\n![](/download/attachments/114685955/image2024-3-6_10-21-32.png?version=1&modificationDate=1709691690641&api=v2)![](/download/thumbnails/114685955/image2024-3-6_10-23-58.png?version=1&modificationDate=1709691836990&api=v2)\n\n**②删除指向性的引用**。因为当前会去除图表、拆分知识，并且当前暂时没能在文内添加这些引用的信息，所以这样的引用，大模型并不能理解，应删掉。\n\n![](/download/attachments/114685955/image2024-3-6_10-25-46.png?version=1&modificationDate=1709691944627&api=v2)![](/download/attachments/114685955/image2024-3-6_10-28-22.png?version=1&modificationDate=1709692100239&api=v2)\n\n**③标注未标注的标题**。\n\n有2种方法。\n\n一种是借助标注标题的日志，在目录.xlsx中去重，就可以筛选出没有被标注的标题。然后通过word中的窗格导航，定位到附近位置，找到标题标注。\n\n另一种方法是，在清洗①②的过程中，从上往下滑，看到有未标的，就标一下。这种方式可能好一些，用时会更少。\n\n![](/download/attachments/114685955/image2024-3-6_10-35-21.png?version=1&modificationDate=1709692519427&api=v2)![](/download/attachments/114685955/image2024-3-6_10-36-27.png?version=1&modificationDate=1709692585210&api=v2)![](/download/attachments/114685955/image2024-3-6_10-38-30.png?version=1&modificationDate=1709692708430&api=v2)![](/download/attachments/114685955/image2024-3-6_10-38-16.png?version=1&modificationDate=1709692694233&api=v2)\n\n**④删除未删干净的图表内容**。部分表格因为格式比较特殊，未被程序删干净。需手动删除。如果对需删除的内容有疑惑，可以使用1.1的文件找到原位置，对比观察，以正确删除图表的内容。找到原位置的方法，可以复制附近的文本，在1.1的文件里搜索。即可快速定位。\n\n![](/download/attachments/114685955/image2024-3-6_10-48-18.png?version=1&modificationDate=1709693296457&api=v2)![](/download/attachments/114685955/image2024-3-6_10-53-18.png?version=1&modificationDate=1709693596421&api=v2)![](/download/attachments/114685955/image2024-3-6_10-53-34.png?version=1&modificationDate=1709693612181&api=v2)\n\n  \n\n1.8. 文件5：最终版\n------------\n\n最终清洗干净的版本\n\n  \n\n  \n\n2\\. 网络表格类数据\n===========\n\n![](/download/attachments/114685955/image2024-1-24_11-32-42.png?version=1&modificationDate=1706067162304&api=v2)\n\n使用function call？还是做成向量知识库？\n\n  \n\n  \n\n  \n\n参考文献：\n\n1.  [Word查找和替换通配符(完全版) - 静夜竹思 - 博客园 (cnblogs.com)](https://www.cnblogs.com/jingyezhusi/articles/10194369.html)\n2.  [python-docx 中文文档 (hellowac.github.io)](https://hellowac.github.io/docx-doc-zh/tutorial.html)\n3.  [Python顺序读取word文档中的文本与表格\\_python docx 读所有文本 包括表格中的-CSDN博客](https://blog.csdn.net/qq_39600166/article/details/101537368)\n\n  \n\n[Filter table data](#)[Create a pivot table](#)[Create a chart from data series](#)\n\n[Configure buttons visibility](/users/tfac-settings.action)"
}