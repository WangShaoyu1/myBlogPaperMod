{
	"title": "二进制和算数逻辑单元",
	"author": "王宇",
	"publishTime": "十二月21,2022",
	"readTime": "12s",
	"tags": "[\"计算机科学\"]",
	"description": "计算机科学",
	"article": "二进制：\n====\n\n二进制中每一个“1”或“0”叫做一个“bit”，8-bit=1个字节（byte）\n\n（Mega)兆字节是百万字节（MB），(Giga)千兆字节是GB,TB万亿。\n\n1\n\n0\n\n1\n\n1\n\n0\n\n1\n\n1\n\n1\n\n128'\n\n64'\n\n32'\n\n16'\n\n8'\n\n4'\n\n2'\n\n1'\n\n128\n\n  \n\n32\n\n16\n\n  \n\n4\n\n2\n\n1\n\n相加即为表示的数字183\n\n32-bit第一位表示数字正负，接下来八位存指数，剩下23位存有效数字\n\nASCII用7位表示字母和符号，但是一个字节8位。\n\n  \n\nALU:算术逻辑单元：\n===========\n\n有两个单元，1个算术单元，1个逻辑单元\n\n算术单元：\n-----\n\n负责计算机里的所有数字操作\n\n最简单加法电路，2个bit加在一起\n\n1是true,0是false\n\n![](/download/attachments/91149115/1671435192752_F45566EC-1FC9-4d72-9DC4-FD9FA6920917.png?version=1&modificationDate=1671607639170&api=v2)\n\nXRO门输出只对了一部分，1+1输出0，需要一根额外的线，只有输入是1和1时，进位才是“true”，\n\n![](/download/attachments/91149115/1671435401942_53AFDE0D-BF15-4904-9DB4-63914000C9C3.png?version=1&modificationDate=1671607658428&api=v2)\n\n这个电路叫“半加器”\n\n对于大于1+1的数，就要考虑全加器\n\n全加器表格\n\nA\n=\n\nB\n=\n\nC\n=\n\n进位\n==\n\n总和\n==\n\n0\n=\n\n0\n=\n\n0\n=\n\n0\n=\n\n0\n=\n\n0\n=\n\n0\n=\n\n1\n=\n\n0\n=\n\n1\n=\n\n0\n=\n\n1\n=\n\n0\n=\n\n0\n=\n\n1\n=\n\n1\n=\n\n0\n=\n\n0\n=\n\n0\n=\n\n1\n=\n\n0\n=\n\n1\n=\n\n1\n=\n\n1\n=\n\n0\n=\n\n1\n=\n\n1\n=\n\n0\n=\n\n1\n=\n\n0\n=\n\n1\n=\n\n1\n=\n\n1\n=\n\n1\n=\n\n1\n=\n\n  \n\n![](/download/attachments/91149115/1671436238407_F22CDCA6-D486-48e8-B072-F2A056794785.png?version=1&modificationDate=1671607672511&api=v2)\n\n处理8bit的数和，先用一个半加器，后面输出每个sum，进位传递给下一个全加器中，做运算，叫“8位行波进位加法器”，如果有第9位进位，则超过叫“溢出”，两个数和太大。\n\n每次进位会浪费一点时间，现在计算机使用的是“超前进位加法器”。\n\n简单的ALU没有乘法，只是通过多次相加进行运算，但是手机电脑有，通过更多的专门的乘法算术单元。乘法算数只是更多的逻辑门。\n\n逻辑单元\n----\n\n\"V\"表示。输入8bit的数两个，用4bits表示操作代码，例如：1000表示加法命令。\n\n输出flag,标志只有1一位，代表特定状态。\n\n零测试电路，会将零标志设为True(1)\n\n[Filter table data](#)[Create a pivot table](#)[Create a chart from data series](#)\n\n[Configure buttons visibility](/users/tfac-settings.action)"
}