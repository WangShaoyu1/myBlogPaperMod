{
	"title": "对话管理初步了解",
	"author": "王宇",
	"publishTime": "四月28,2023",
	"readTime": "12s",
	"tags": "[\"周引凤\"]",
	"description": "周引凤",
	"article": "1、对话管理背景\n========\n\n从人工智能研究的初期开始，人们就致力于开发高度智能化的人机对话系统。艾伦·图灵在 1950 年提出图灵测试 ，认为如果人类无法区分和他对话交谈的是机器还是人类，那么就可以说机器通过了图灵测试，拥有高度的智能。对话系统一般分为自然语言理解NLU、对话管理DM及自然语言生成NLG模块。\n\n![](/plugins/servlet/confluence/placeholder/error?i18nKey=editor.placeholder.broken.image&locale=zh_CN&version=2 \"com.atlassian.confluence.content.render.xhtml.XhtmlException: Missing required attribute: {http://atlassian.com/resource/identifier}value\")\n\n2、对话管理的发展\n=========\n\n2.1第一代对话系统\n----------\n\n第一代：基于符号规则、模板\n\n优点:\n\n*   优点是内部逻辑透明，易于分析调试\n\n局限性：\n\n*   依赖于专家。如果没有懂得编写这类应用的专家，开发会极其困难。\n*   跨领域的扩展性不足\n*   数据用来设计规则，而不是学习\n\n2.2第二代对话系统\n----------\n\n第二代：数据驱动、浅层学习\n\n优点：\n\n*   避免了对专家的高度依赖\n*   鲁棒性上显著地优于基于规则的对话系统（自然语言在输入的过程中，尤其是通过语音识别获得的文本，会存在多字、错字、少字、噪音等问题。）\n\n局限性：\n\n*   不容易理解和修补漏洞\n\n2.3第三代对话系统\n----------\n\n第三代：数据驱动的深度学习\n\n优点：\n\n*   神经模型和表示远远比前两代要强大，\n*   端到端的学习也变得可行\n\n局限性：\n\n*   解释、修补漏洞、更新系统仍然不容易。\n*   在神经网络学习和符号自然语言之间缺乏交互界面\n*   跨领域的扩展，但相当多的研究在想办法利用深度迁移学习和强化学习来实现\n\n3、对话系统的分类\n=========\n\n3.1聊天型\n------\n\n聊天型对话的目标是要产生有趣且富有信息量的自然回复使得人机对话可以持续进行下去。\n\n*   特点：不限定领域和话题\n*   应用实例：聊天机器人等\n\n3.2任务导向型\n--------\n\n任务导向型对话则是指由任务驱动的多轮对话，机器需要通过理解、主动询问、澄清等方式来确定用户的目标，调用相应的 API 查询后，返回正确结果，完成用户需求。\n\n*   特点：有明确任务目标，能够精确地定义用户的意图和动作\n*   应用实例：智能助手（订票，导航等）\n\n3.3问答型\n------\n\n当前的问答技术大都是检索式的，在这种方式下，需要预先提供一个知识库，答案即来自于知识库。\n\n*   特点：需要准确地回答用户的问题，满足用户需求\n*   应用实例：银行、电信运营商、电商店铺的语音客服系统等\n\n4、对话管理模型痛点\n==========\n\n4.1可拓展性差\n--------\n\n传统的对话管理模型在可拓展性方面仍需改进，具体在三个方面：\n\n*   如何处理变化的用户意图\n*   如何变化的槽位和槽值\n*   如何处理变化的系统动作\n\n一旦出现训练集未见的新用户意图时，传统模型由于输出的是表示旧意图类别的固定 one-hot 向量，若要包含新的意图类别，向量就需要进行改变，对应的新模型也需要进行完全的重训练，这种情况会降低模型的可维护性和可拓展性。\n\n在多领域或复杂领域的对话状态跟踪问题中，如何处理槽位与槽值的变化一直是一个难题。对于有的槽位而言，槽值可能是不可枚举的（这里的不可枚举指的是槽值没有限制，或可取值过多），例如，时间、地点和人名，甚至槽值集合是动态变化的，例如航班、电影院上映的电影。在传统的对话状态跟踪问题中，通常默认槽位和槽值的集合固定不变，这样就大大降低了系统的可拓展性。\n\n可拓展性问题的最后一个方面在于系统动作空间难以预定义。如下图，在设计一个电子产品推荐系统时，也许一开始并不会考虑到用户会问到如何升级产品操作系统这样的问题，但现实的情况是你无法限定用户只问系统能解决的问题。如果系统动作空间事先框定，在用户提出新问题时就会导致一连串的答非所问，导致极差的用户体验。\n\n![](/plugins/servlet/confluence/placeholder/error?i18nKey=editor.placeholder.broken.image&locale=zh_CN&version=2 \"com.atlassian.confluence.content.render.xhtml.XhtmlException: Missing required attribute: {http://atlassian.com/resource/identifier}value\")\n\n4.2标注数据少\n--------\n\n随着对话系统应用领域的多样化，对数据的需求也更加多样化，若想训好一个任务型对话系统，通常都需要尽可能多的该领域的数据，但一般来说，想要获取高质量的有标注数据的成本很高。\n\n为此学者们进行了各种研究尝试，主要可分为三种思路：\n\n*   用机器自动标注数据，降低数据标注的成本\n*   对话结构挖掘，尽可能高效利用无标注数据\n*   加强数据采集策略，高效获取优质的数据\n\n4.3训练效率低\n--------\n\n简单地套用增强学习算法并不能满足对话系统的实际应用。这主要是因为对话领域不像游戏围棋那样有清晰的规则、奖励函数，动作空间简单明确，还有完美的环境模拟器可以生成数以亿计的高质量交互数据。对话任务中，一般包括了多样变化的槽位槽值和动作意图，这使得对话系统的动作空间急剧增大且难以预定义。传统扁平的增强学习（flat reinforcement learning）方法由于对所有的系统动作进行 one-hot 编码，会存在维度灾难，因此不再适用于处理动作空间非常大的复杂对话问题\n\n[Filter table data](#)[Create a pivot table](#)[Create a chart from data series](#)\n\n[Configure buttons visibility](/users/tfac-settings.action)"
}