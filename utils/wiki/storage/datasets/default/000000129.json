{
	"title": "Fay数字人AIAgent版学习报告分析（一）",
	"author": "王宇",
	"publishTime": "十一月14,2023",
	"readTime": "12s",
	"tags": "[\"GPT相关\"]",
	"description": "GPT相关",
	"article": "*   1[1\\. 分析入口main.py文件](#Fay数字人AIAgent版学习报告分析（一）-分析入口main.py文件)\n*   2[2\\. 分析主体内容页面](#Fay数字人AIAgent版学习报告分析（一）-分析主体内容页面)\n    *   2.1[2.1. 调用图](#Fay数字人AIAgent版学习报告分析（一）-调用图)\n    *   2.2[2.2. 调用分析](#Fay数字人AIAgent版学习报告分析（一）-调用分析)\n\n1\\. 分析入口main.py文件\n=================\n\n 展开源码\n\n[expand source](#)[?](#)\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n14\n\n15\n\n16\n\n17\n\n18\n\n19\n\n20\n\n21\n\n22\n\n23\n\n24\n\n25\n\n26\n\n27\n\n28\n\n29\n\n30\n\n31\n\n32\n\n33\n\n34\n\n35\n\n36\n\n37\n\n38\n\n39\n\n40\n\n41\n\n42\n\n43\n\n44\n\n45\n\n46\n\n47\n\n48\n\n49\n\n50\n\n51\n\n52\n\n53\n\n54\n\n55\n\n56\n\n57\n\n58\n\n59\n\n60\n\n61\n\n62\n\n63\n\n64\n\n65\n\n`import` `os`\n\n`import` `sys`\n\n`from` `io` `import` `BytesIO`\n\n`from` `PyQt5` `import` `QtGui`\n\n`from` `PyQt5.QtWidgets` `import` `QApplication`\n\n`from` `ai_module` `import` `ali_nls`\n\n`from` `core` `import` `wsa_server`\n\n`from` `gui` `import` `flask_server`\n\n`from` `gui.window` `import` `MainWindow`\n\n`from` `utils` `import` `config_util`\n\n`from` `scheduler.thread_manager` `import` `MyThread`\n\n`from` `core.content_db` `import` `Content_Db`\n\n`import` `sys`\n\n`sys.setrecursionlimit(sys.getrecursionlimit()` `*` `5``)`\n\n`def` `__clear_samples():`\n\n    `if` `not` `os.path.exists(``\"./samples\"``):`\n\n        `os.mkdir(``\"./samples\"``)`\n\n    `for` `file_name` `in` `os.listdir(``'./samples'``):`\n\n        `if` `file_name.startswith(``'sample-'``):`\n\n            `os.remove(``'./samples/'` `+` `file_name)`\n\n`def` `__clear_songs():`\n\n    `if` `not` `os.path.exists(``\"./songs\"``):`\n\n        `os.mkdir(``\"./songs\"``)`\n\n    `for` `file_name` `in` `os.listdir(``'./songs'``):`\n\n        `if` `file_name.endswith(``'.mp3'``):`\n\n            `os.remove(``'./songs/'` `+` `file_name)`\n\n`def` `__clear_logs():`\n\n    `if` `not` `os.path.exists(``\"./logs\"``):`\n\n        `os.mkdir(``\"./logs\"``)`\n\n    `for` `file_name` `in` `os.listdir(``'./logs'``):`\n\n        `if` `file_name.endswith(``'.log'``):`\n\n            `os.remove(``'./logs/'` `+` `file_name)`\n\n`if` `__name__` `=``=` `'__main__'``:`\n\n    `__clear_samples()`\n\n    `__clear_songs()`\n\n    `__clear_logs()`\n\n    `config_util.load_config()`\n\n    `dbstatus` `=` `os.path.exists(``\"fay.db\"``)`\n\n    `if` `(dbstatus` `=``=` `False``):`\n\n        `contentdb` `=` `Content_Db()`\n\n        `contentdb.init_db()`\n\n    `ws_server` `=` `wsa_server.new_instance(port``=``10002``)`\n\n    `ws_server.start_server()`\n\n    `web_ws_server` `=` `wsa_server.new_web_instance(port``=``10003``)`\n\n    `web_ws_server.start_server()`\n\n    `# Edit by xszyou in 20230516:增加本地asr后，aliyun调成可选配置`\n\n    `if` `config_util.ASR_mode` `=``=` `\"ali\"``:`\n\n        `ali_nls.start()`\n\n    `flask_server.start()`\n\n    `app` `=` `QApplication(sys.argv)`\n\n    `app.setWindowIcon(QtGui.QIcon(``'icon.png'``))`\n\n    `win` `=` `MainWindow()`\n\n    `win.show()`\n\n    `app.exit(app.exec_())`\n\n  \n\n该入口文件实现了如下几个功能：\n\n1.  定义了3个清除示例、歌曲、日志的方法，\\_\\_clear\\_samples、\\_\\_clear\\_songs、\\_\\_clear\\_logs\n2.  line48加载配置\n3.  line49~line52检测是否存在数据库文件，没有的话创造一个db类，并初始化\n4.  line53~line56，开启数字人服务器、web服务器，里面的实现方法没有太多业务相关逻辑，不过里面的写法，从技术层面上看可以参考；\n5.  line58~line59，**如果ASR模式是“ali”，初始化阿里语音模块**\n6.  line60，启动（flask）Web服务器\n7.  line61~line64，创建一个图像界面库，详情见中文文档：[https://maicss.gitbook.io/pyqt-chinese-tutoral/](https://maicss.gitbook.io/pyqt-chinese-tutoral/)，主体内容是通过web页面实现（line60实现），图形界面加载已启动的Web服务（URL）；\n\n2\\. 分析主体内容页面\n============\n\n通过前面的分析得知：页面主体内容是通过Web服务器，回到line60，flask\\_server.start()，分析下该python文件：\n\n 展开源码\n\n[expand source](#)[?](#)\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n14\n\n15\n\n16\n\n17\n\n18\n\n19\n\n20\n\n21\n\n22\n\n23\n\n24\n\n25\n\n26\n\n27\n\n28\n\n29\n\n30\n\n31\n\n32\n\n33\n\n34\n\n35\n\n36\n\n37\n\n38\n\n39\n\n40\n\n41\n\n42\n\n43\n\n44\n\n45\n\n46\n\n47\n\n48\n\n49\n\n50\n\n51\n\n52\n\n53\n\n54\n\n55\n\n56\n\n57\n\n58\n\n59\n\n60\n\n61\n\n62\n\n63\n\n64\n\n65\n\n66\n\n67\n\n68\n\n69\n\n70\n\n71\n\n72\n\n73\n\n74\n\n75\n\n76\n\n77\n\n78\n\n79\n\n80\n\n81\n\n82\n\n83\n\n84\n\n85\n\n86\n\n87\n\n88\n\n89\n\n90\n\n91\n\n92\n\n93\n\n94\n\n95\n\n96\n\n97\n\n98\n\n99\n\n100\n\n101\n\n102\n\n103\n\n104\n\n105\n\n106\n\n107\n\n108\n\n109\n\n110\n\n111\n\n112\n\n113\n\n114\n\n115\n\n116\n\n117\n\n118\n\n119\n\n120\n\n121\n\n122\n\n123\n\n124\n\n125\n\n126\n\n127\n\n128\n\n129\n\n130\n\n131\n\n132\n\n`import` `imp`\n\n`import` `json`\n\n`import` `time`\n\n`import` `pyaudio`\n\n`from` `flask` `import` `Flask, render_template, request`\n\n`from` `flask_cors` `import` `CORS`\n\n`import` `fay_booter`\n\n`from` `core.tts_voice` `import` `EnumVoice`\n\n`from` `gevent` `import` `pywsgi`\n\n`from` `scheduler.thread_manager` `import` `MyThread`\n\n`from` `utils` `import` `config_util, util`\n\n`from` `core` `import` `wsa_server`\n\n`from` `core` `import` `fay_core`\n\n`from` `core.content_db` `import` `Content_Db`\n\n`from` `ai_module` `import` `yolov8`\n\n`__app` `=` `Flask(__name__)`\n\n`CORS(__app, supports_credentials``=``True``)`\n\n`def` `__get_template():`\n\n    `return` `render_template(``'index.html'``)`\n\n`def` `__get_device_list():`\n\n    `audio` `=` `pyaudio.PyAudio()`\n\n    `device_list` `=` `[]`\n\n    `for` `i` `in` `range``(audio.get_device_count()):`\n\n        `devInfo` `=` `audio.get_device_info_by_index(i)`\n\n        `if` `devInfo[``'hostApi'``]` `=``=` `0``:`\n\n            `device_list.append(devInfo[``\"name\"``])`\n\n    `return` `list``(``set``(device_list))`\n\n`@__app``.route(``'/api/submit'``, methods``=``[``'post'``])`\n\n`def` `api_submit():`\n\n    `data` `=` `request.values.get(``'data'``)`\n\n    `# print(data)`\n\n    `config_data` `=` `json.loads(data)`\n\n    `if``(config_data[``'config'``][``'source'``][``'record'``][``'enabled'``]):`\n\n        `config_data[``'config'``][``'source'``][``'record'``][``'channels'``]` `=` `0`\n\n        `audio` `=` `pyaudio.PyAudio()`\n\n        `for` `i` `in` `range``(audio.get_device_count()):`\n\n            `devInfo` `=` `audio.get_device_info_by_index(i)`\n\n            `if` `devInfo[``'name'``].find(config_data[``'config'``][``'source'``][``'record'``][``'device'``]) >``=` `0` `and` `devInfo[``'hostApi'``]` `=``=` `0``:`\n\n                 `config_data[``'config'``][``'source'``][``'record'``][``'channels'``]` `=` `devInfo[``'maxInputChannels'``]`\n\n    `config_util.save_config(config_data[``'config'``])`\n\n    `return` `'{\"result\":\"successful\"}'`\n\n`@__app``.route(``'/api/control-eyes'``, methods``=``[``'post'``])`\n\n`def` `control_eyes():`\n\n    `eyes` `=` `yolov8.new_instance()`\n\n    `if``(``not` `eyes.get_status()):`\n\n       `eyes.start()`\n\n       `util.log(``1``,` `\"YOLO v8正在启动...\"``)`\n\n    `else``:`\n\n       `eyes.stop()`\n\n       `util.log(``1``,` `\"YOLO v8正在关闭...\"``)`\n\n    `return` `'{\"result\":\"successful\"}'`\n\n`@__app``.route(``'/api/get-data'``, methods``=``[``'post'``])`\n\n`def` `api_get_data():`\n\n    `wsa_server.get_web_instance().add_cmd({`\n\n        `\"voiceList\"``: [`\n\n            `{``\"id\"``: EnumVoice.XIAO_XIAO.name,` `\"name\"``:` `\"晓晓\"``},`\n\n            `{``\"id\"``: EnumVoice.YUN_XI.name,` `\"name\"``:` `\"云溪\"``}`\n\n        `]`\n\n    `})`\n\n    `wsa_server.get_web_instance().add_cmd({``\"deviceList\"``: __get_device_list()})`\n\n    `return` `json.dumps({``'config'``: config_util.config})`\n\n`@__app``.route(``'/api/start-live'``, methods``=``[``'post'``])`\n\n`def` `api_start_live():`\n\n    `# time.sleep(5)`\n\n    `fay_booter.start()`\n\n    `time.sleep(``1``)`\n\n    `wsa_server.get_web_instance().add_cmd({``\"liveState\"``:` `1``})`\n\n    `return` `'{\"result\":\"successful\"}'`\n\n`@__app``.route(``'/api/stop-live'``, methods``=``[``'post'``])`\n\n`def` `api_stop_live():`\n\n    `# time.sleep(1)`\n\n    `fay_booter.stop()`\n\n    `time.sleep(``1``)`\n\n    `wsa_server.get_web_instance().add_cmd({``\"liveState\"``:` `0``})`\n\n    `return` `'{\"result\":\"successful\"}'`\n\n`@__app``.route(``'/api/send'``, methods``=``[``'post'``])`\n\n`def` `api_send():`\n\n    `data` `=` `request.values.get(``'data'``)`\n\n    `info` `=` `json.loads(data)`\n\n    `text` `=` `fay_core.send_for_answer(info[``'msg'``],info[``'sendto'``])`\n\n    `return` `'{\"result\":\"successful\",\"msg\":\"'``+``text``+``'\"}'`\n\n`@__app``.route(``'/api/get-msg'``, methods``=``[``'post'``])`\n\n`def` `api_get_Msg():`\n\n    `contentdb` `=` `Content_Db()`\n\n    `list` `=` `contentdb.get_list(``'all'``,``'desc'``,``1000``)`\n\n    `relist` `=` `[]`\n\n    `i` `=` `len``(``list``)``-``1`\n\n    `while` `i >``=` `0``:`\n\n        `relist.append(``dict``(``type``=``list``[i][``0``],way``=``list``[i][``1``],content``=``list``[i][``2``],createtime``=``list``[i][``3``],timetext``=``list``[i][``4``]))`\n\n        `i` `-``=` `1`\n\n    `return` `json.dumps({``'list'``: relist})`\n\n`@__app``.route(``'/'``, methods``=``[``'get'``])`\n\n`def` `home_get():`\n\n    `return` `__get_template()`\n\n`@__app``.route(``'/'``, methods``=``[``'post'``])`\n\n`def` `home_post():`\n\n    `return` `__get_template()`\n\n`def` `run():`\n\n    `server` `=` `pywsgi.WSGIServer((``'0.0.0.0'``,``5000``), __app)`\n\n    `server.serve_forever()`\n\n`def` `start():`\n\n    `MyThread(target``=``run).start()`\n\n该文件做了如下几件事情：\n\n1.  服务器跨域相关配置、静态模板文件配置；\n2.  使用跨平台音频I/O库，使用 PyAudio 你可以在 Python 程序中播放和录制音频。详细使用见如下两篇文档：[PyAudio Documentation官方文档](https://people.csail.mit.edu/hubert/pyaudio/docs/) 、 [PyAudio 音频 I/O 库](https://www.oschina.net/p/pyaudio?hmsr=aladdin1e1) 。\n3.  获取音频输入相关设备列表（麦克风）；\n4.  定义访问路径、接口，含有get、post请求，总结一下各个接口作用\n\n/api/submit\n\n点击保存配置\n\n  \n\n/api/get-data\n\n获取和虚拟人问答相关的属性默认配置：\n\n*   人设基础属性：例如：人物年龄、性别等；\n*   QA问答库配置，例如：QA问答库\n*   麦克风相关配置\n*   其他\n\n  \n\n...\n\n见调用图\n\n  \n\n  \n\n  \n\n  \n\n2.1. 调用图\n--------\n\n![](/download/attachments/109733889/yuque_diagram1.png?version=3&modificationDate=1699863030005&api=v2)\n\n  \n\n  \n\n2.2. 调用分析\n---------\n\n         整体上看，在system.conf文件中，进行chat\\_module的选择、更换，换言之，是利用不同公司、不同阶段对外发布的大模型为底座，据此做一个上层的AI应用。这些大模型的专业能力，基于聊天场景的话，大同小异，并不能体现出彼此之间的“聊天”专业性的差别。有一些大模型，也使用到了提示词“prompt”，但这些提示词并没有体现出“专业性”，都属于通用提示词，太泛了。\n\n         虚拟人形象选用的live2D（一个开源项目：[https://github.com/stevenjoezhang/live2d-widget](https://github.com/stevenjoezhang/live2d-widget)），这块目前在项目中是一个独立模块，没有口型匹配与动作匹配。\n\n  \n\n  \n\n  \n\n  \n\n[Filter table data](#)[Create a pivot table](#)[Create a chart from data series](#)\n\n[Configure buttons visibility](/users/tfac-settings.action)"
}