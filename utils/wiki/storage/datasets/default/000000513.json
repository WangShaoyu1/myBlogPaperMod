{
	"title": "Q因子",
	"author": "王宇",
	"publishTime": "九月24,2024",
	"readTime": "12s",
	"tags": "[\"双二阶滤波器相关\"]",
	"description": "双二阶滤波器相关",
	"article": "> **BiquadFilterNode.Q 类型为双精度浮点**\n\n[Q因子](https://zhida.zhihu.com/search?content_id=224171071&content_type=Article&match_order=1&q=Q%E5%9B%A0%E5%AD%90&zhida_source=entity)，或质量因子.默认值为 1,范围在 0.0001 至 1000.\n\nbiquadFilter.Q属性在Web Audio API的BiquadFilterNode中起到控制滤波器共振或尖锐度的作用。\n\nQ值（Quality factor）是一个无量纲的数值，用来描述滤波器的带宽相对于中心频率的宽度。\n\n具体影响如下：\n\n•低Q值：表示滤波器的带宽相对较宽，过渡平滑。对于带通和带阻滤波器，这会使得通过或阻断的频段范围更广；对于低通和高通滤波器，则意味着过渡区域更加平缓。\n\n•高Q值：表示滤波器的带宽相对较窄，有更尖锐的峰值或谷值。在带通和带阻滤波器中，它会让通过或阻断的频段非常狭窄；而在低通和高通滤波器中，会产生更急剧的截止效果。\n\n简而言之，调整Q值可以帮助你控制过滤效果的锐利度或是选择性，使得音频处理更加符合特定需求。\n\n**最小demo**\n\n[?](#)\n\n`<!DOCTYPE html>`\n\n`<``html` `lang``=``\"en\"``>`\n\n`<``head``>`\n\n    `<``meta` `charset``=``\"UTF-8\"``>`\n\n    `<``meta` `name``=``\"viewport\"` `content``=``\"width=device-width, initial-scale=1.0\"``>`\n\n    `<``title``>Document</``title``>`\n\n`</``head``>`\n\n`<``body``>`\n\n    `demo`\n\n    `<``button` `onclick``=``\"start()\"``>开始</``button``>`\n\n    `<``input` `type``=``\"range\"` `id``=``\"qSlider\"` `min``=``\"0.1\"` `max``=``\"20\"` `step``=``\"0.01\"` `value``=``\"1\"``>`\n\n`</``body``>`\n\n`<``script``>`\n\n`let audioContext`\n\n`function start () {`\n\n`audioContext = new (window.AudioContext || window.webkitAudioContext)();`\n\n    `function createNoise() {`\n\n        `const noiseBuffer = audioContext.createBuffer(1, audioContext.sampleRate * 5, audioContext.sampleRate);`\n\n            `const noiseBufferSource = noiseBuffer.getChannelData(0);`\n\n            `for (let i = 0; i <` `noiseBufferSource.length``; i++) {`\n\n                `noiseBufferSource[i] = Math.random() * 2 - 1;`\n\n            `}`\n\n            `const` `bufferSourceNode` `=` `audioContext``.createBufferSource();`\n\n            `bufferSourceNode.buffer` `=` `noiseBuffer``;`\n\n            `bufferSourceNode.loop` `=` `true``;`\n\n            `return bufferSourceNode;`\n\n    `}`\n\n    `const` `biquadFilter` `=` `audioContext``.createBiquadFilter();`\n\n    `biquadFilter.type` `=` `'bandpass'``; // 以带通滤波器为例，更明显地展示Q值变化效果`\n\n    `biquadFilter.frequency.value` `=` `1000``; // 中心频率`\n\n    `biquadFilter.Q.value` `=` `1``; // 初始Q值`\n\n    `const` `noiseSource` `=` `createNoise``();`\n\n    `noiseSource.connect(biquadFilter);`\n\n    `biquadFilter.connect(audioContext.destination);`\n\n    `const` `qSlider` `=` `document``.getElementById('qSlider');`\n\n    `qSlider.addEventListener('input', function() {`\n\n    `biquadFilter.Q.value` `=` `parseFloat``(this.value);`\n\n    `});`\n\n    `// 开始播放`\n\n    `noiseSource.start();`\n\n`}`\n\n`</script>`\n\n`</``html``>`\n\n[Filter table data](#)[Create a pivot table](#)[Create a chart from data series](#)\n\n[Configure buttons visibility](/users/tfac-settings.action)"
}