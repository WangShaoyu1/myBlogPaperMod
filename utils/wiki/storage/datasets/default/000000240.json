{
	"title": "炉子安装NVIDIA驱动和配置CUDA环境",
	"author": "王宇",
	"publishTime": "六月27,2024",
	"readTime": "12s",
	"tags": "[\"赵吉山\"]",
	"description": "赵吉山",
	"article": "以下是详细的步骤，记录了在 Ubuntu 22.04 上安装 NVIDIA JetPack、配置 CUDA 环境以及配置 Docker 以支持 GPU 的过程。\n\n#### 1\\. 安装 JetPack 开发工具包\n\n安装 JetPack 开发工具包：\n\n[?](#)\n\n`sudo apt install nvidia-jetpack`\n\n#### 2\\. 检查 CUDA 版本和驱动程序版本\n\n安装完成后，检查 CUDA 和驱动程序版本：\n\n[?](#)\n\n`# 检查 CUDA 版本`\n\n`nvcc --version`\n\n`# 检查驱动程序版本`\n\n`nvidia-smi`\n\n如果遇到 `nvcc: command not found` 错误，继续以下步骤。\n\n#### 3\\. 配置 CUDA 环境\n\n##### 3.1 验证 CUDA 是否已安装\n\n确认 CUDA 是否已安装在系统中。通常，JetPack 安装完成后，CUDA 会被安装在 `/usr/local/cuda` 目录中。\n\n[?](#)\n\n`ls /usr/local/cuda`\n\n如果该目录存在，则 CUDA 已安装。\n\n##### 3.2 添加 CUDA 路径到环境变量\n\n打开或编辑你的 shell 配置文件（例如 `.bashrc` 或 `.zshrc`），在文件末尾添加以下行：\n\n[?](#)\n\n`export PATH=/usr/local/cuda/bin:$PATH`\n\n`export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH`\n\n保存文件并使更改生效：\n\n[?](#)\n\n`source ~/.bashrc`\n\n##### 3.3 验证安装\n\n现在再运行 `nvcc --version` 命令以确认 CUDA 工具链是否已正确配置：\n\n[?](#)\n\n`nvcc --version`\n\n#### 4\\. 配置 Docker 使用 NVIDIA 运行时\n\n确保 Docker 配置文件正确设置为使用 NVIDIA 运行时。编辑或创建 `/etc/docker/daemon.json` 文件并添加以下内容：\n\n[?](#)\n\n`{`\n\n  `\"default-runtime\"``:` `\"nvidia\"``,`\n\n  `\"runtimes\"``: {`\n\n    `\"nvidia\"``: {`\n\n      `\"path\"``:` `\"nvidia-container-runtime\"``,`\n\n      `\"runtimeArgs\"``: []`\n\n    `}`\n\n  `}`\n\n`}`\n\n然后重启 Docker 服务：\n\n[?](#)\n\n`sudo systemctl restart docker`\n\n### 5\\. 运行带 GPU 支持的 Docker 容器\n\n使用以下命令运行你的 Docker 容器：\n\n[?](#)\n\n`sudo docker run --gpus all \\`\n\n   `--device /dev/snd:/dev/snd \\`\n\n   `--device /dev/video0:/dev/video0 \\`\n\n   `-v /run/user/``1000``/pulse:/run/user/``1000``/pulse \\`\n\n   `-v /tmp/.X11-unix:/tmp/.X11-unix \\`\n\n   `-v /usr/share/alsa/alsa.conf:/usr/share/alsa/alsa.conf \\`\n\n   `-v /etc/asound.conf:/etc/asound.conf \\`\n\n   `-v ~/.config/pulse/cookie:/root/.config/pulse/cookie \\`\n\n   `-e PULSE_SERVER=unix:/run/user/``1000``/pulse/``native` `\\`\n\n   `-e DISPLAY=$DISPLAY \\`\n\n   `--privileged -it \\`\n\n   `acrembeddedfttdeveastus2001.azurecr.io/avatarmodule:``0.0``.``1``-arm64v8`\n\n### 其他注意事项\n\n1.  **Docker 版本**: 确保你使用的是最新版本的 Docker。某些旧版本可能不完全支持 `--gpus` 参数。\n2.  **驱动兼容性**: 确保你的 NVIDIA 驱动与 CUDA 版本兼容。\n\n通过这些步骤，你应该能够解决 Docker 容器未能正确识别 GPU 的问题。如果问题依然存在，请检查系统日志以获取更多详细的错误信息。\n\n[Filter table data](#)[Create a pivot table](#)[Create a chart from data series](#)\n\n[Configure buttons visibility](/users/tfac-settings.action)"
}