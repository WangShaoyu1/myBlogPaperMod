{
	"title": "对话管理",
	"author": "王宇",
	"publishTime": "四月26,2023",
	"readTime": "12s",
	"tags": "[\"马冬颖\"]",
	"description": "马冬颖",
	"article": "*   1 [一、对话管理](#id-对话管理-一、对话管理)\n    *   1.1[1、对话系统的框架](#id-对话管理-1、对话系统的框架)\n    *   1.2 [2、对话管理的定义](#id-对话管理-2、对话管理的定义)\n    *   1.3[3、对话管理系统的主要任务](#id-对话管理-3、对话管理系统的主要任务)\n    *   1.4[4、对话管理的评价指标](#id-对话管理-4、对话管理的评价指标)\n        *   1.4.1[1）从用户需求满足的角度](#id-对话管理-1）从用户需求满足的角度)\n        *   1.4.2[2）从策略层面](#id-对话管理-2）从策略层面)\n*   2[二、Bot分发](#id-对话管理-二、Bot分发)\n    *   2.1[1、领域识别](#id-对话管理-1、领域识别)\n        *   2.1.1[1）数据&模型训练](#id-对话管理-1）数据&模型训练)\n        *   2.1.2[2）领域识别算法](#id-对话管理-2）领域识别算法)\n        *   2.1.3[3）在线使用](#id-对话管理-3）在线使用)\n    *   2.2[2、意图检测](#id-对话管理-2、意图检测)\n    *   2.3[3、分发](#id-对话管理-3、分发)\n*   3[三、技能/Bot处理](#id-对话管理-三、技能/Bot处理)\n    *   3.1[1、任务型Bot](#id-对话管理-1、任务型Bot)\n        *   3.1.1[1）DST对话状态追踪](#id-对话管理-1）DST对话状态追踪)\n        *   3.1.2[2）DP对话策略](#id-对话管理-2）DP对话策略)\n            *   3.1.2.1[①任务型bot中常见的系统动作](#id-对话管理-①任务型bot中常见的系统动作)\n            *   3.1.2.2[②对话策略](#id-对话管理-②对话策略)\n            *   3.1.2.3[③DP的算法](#id-对话管理-③DP的算法)\n    *   3.2[2、问答型bot](#id-对话管理-2、问答型bot)\n        *   3.2.1[1）基于文档的DBQA bot](#id-对话管理-1）基于文档的DBQAbot)\n            *   3.2.1.1[①处理逻辑](#id-对话管理-①处理逻辑)\n            *   3.2.1.2[②基于文档的问答 vs 基于阅读理解的问答](#id-对话管理-②基于文档的问答vs基于阅读理解的问答)\n        *   3.2.2[2）基于问答对的FAQ bot](#id-对话管理-2）基于问答对的FAQbot)\n            *   3.2.2.1[①适用场景](#id-对话管理-①适用场景)\n            *   3.2.2.2[②挑战](#id-对话管理-②挑战)\n            *   3.2.2.3[③处理流程 本体：即关键词，如：怎么查看订单，本体为“查看订单” ④知识库](#id-对话管理-③处理流程本体：即关键词，如：怎么查看订单，本体为“查看订单”④知识库)\n        *   3.2.3[3）基于知识图谱的KBQA Bot](#id-对话管理-3）基于知识图谱的KBQABot)\n            *   3.2.3.1[①知识图谱](#id-对话管理-①知识图谱)\n            *   3.2.3.2[②知识图谱问答的优势：](#id-对话管理-②知识图谱问答的优势：)\n            *   3.2.3.3[③知识图谱问答的难点：](#id-对话管理-③知识图谱问答的难点：)\n    *   3.3[3、闲聊型bot](#id-对话管理-3、闲聊型bot)\n    *   3.4[4、推荐型bot](#id-对话管理-4、推荐型bot)\n*   4 [四、回复融合/排序](#id-对话管理-四、回复融合/排序)\n*   5[五、小结](#id-对话管理-五、小结)\n    *   5.1[1、可借鉴内容](#id-对话管理-1、可借鉴内容)\n\n一、对话管理\nn\n### 1、对话系统的框架  \n![](/download/attachments/97903214/image2023-4-26_14-51-52.png?version=1&modificationDate=1682491912034&api=v2)\n\n*   ASR（语音识别）： 让机器听得见NLU（自然语言理解）：让机器听得懂\n*   DM（对话管理）：让机器对话交互流畅\n*   NLG（自然语言生成）：让机器回复自然\n*   TTS（文本转语音）：让机器说得出\n\n### ![](/download/attachments/97903214/image2023-4-26_14-52-9.png?version=1&modificationDate=1682491929609&api=v2)  \n2、对话管理的定义\n\n作为中控系统而存在，它是对话的决策者，决定了用户的对话交互体验。对话管理作出决策需要依赖于不同的bot（子机器人），也就是常说的“技能”，可以理解为对话系统提供的服务。\n\n### 3、对话管理系统的主要任务\n\n1）对于用户Query，根据对话系统每个bot的处理能力，分发给不同的bot进行处理。\n\n2）聚合每个bot返回的相应回复，然后进行去重、融合/排序，得到最终回复。\n\n![](/download/attachments/97903214/image2023-4-26_14-53-26.png?version=1&modificationDate=1682492006877&api=v2)**![](/download/attachments/97903214/image2023-4-26_14-53-36.png?version=1&modificationDate=1682492016613&api=v2)**\n\n### 4、对话管理的评价指标\n\n#### 1）从用户需求满足的角度\n\n*   用户任务达成率\n*   重复问同一问题的比例\n*   “没答案”的比例\n*   答案展示的完整度\n\n#### 2）从策略层面\n\n*   Query语义理解的准确率、召回率和F1值\n*   各模块、处理规则、策略的准确率、召回率\n*   知识内容的覆盖率、时效性\n\n二、Bot分发\n-------\n\n语音助手等对话机器人覆盖了较多的领域和场景，在解析用户Query的第一步是要去判断用户的意图，包括领域识别和意图检测。\n\n### 1、领域识别\n\n领域识别是将Query应用到对应垂类的知识上处理，如天气、高铁票、外卖等。\n\n#### 1）数据&模型训练\n\n*   数据收集：从不同的业务收集数据，作为训练数据\n*   数据处理：因为数据可能存在标签不准或领域重叠的问题，所以需要人工筛选和标注才可以使用\n*   机器主动学习：因为数据量太大，所以一般采用主动学习方法来训练模型\n\n![](/download/attachments/97903214/image2023-4-26_14-53-51.png?version=1&modificationDate=1682492031955&api=v2)\n\n#### 2）领域识别算法\n\n常见的分类模型：\n\n*   传统的学习方法：朴素贝叶斯、SVM、决策树等\n*   深度学习方法：基于CNN、RNN的TextCNN、LSTM，Fasttext、BERT等\n\n#### 3）在线使用\n\n实际使用中存在以下情况：\n\n*   无法识别时，一般采用”领域澄清“的对话策略\n*   机器正确识别用户的领域和意图，但没有bot可以提供此项服务，需要增加转人工服务\n\n### 2、意图检测\n\n意图检测是根据用户问题的类别，分发给不同的bot进行处理，如问答型、任务型等\n\n### 3、分发\n\n基于领域分类和意图检测的结果，对话管理系统可以对bot进行用户指令分发\n\n可能一个用户问题会分发到多个bot处理，比如问答型的对话，可以分发给FAQ bot、基于知识图谱的KBQA bot或者是文档/网页搜索的bot\n\n三、技能/Bot处理\n----------\n\nBot根据不同的领域和场景进行划分可分为：任务型、问答型、闲聊型。不类型的bot负责各自的对话逻辑和对话状态的维护管理，不同类型bot的对话管理也不太相同\n\n### 1、任务型Bot\n\n任务型是为了完成特定场景下的任务，这类用户问题通常是需要调用第三方接口返回结果\n\n任务型场景的三个要素是：领域、意图、参数\n\n任务型对话系统常见框架，包括了DST对话状态追踪和DP对话策略两个模块\n\n![](/download/attachments/97903214/image2023-4-26_14-54-8.png?version=1&modificationDate=1682492048842&api=v2)\n\n#### 1）DST对话状态追踪\n\n对话状态追踪就是根据领域、意图、槽值对、之前的状态、之前系统的动作来追踪当前的状态\n\n![](/download/attachments/97903214/image2023-4-26_14-54-20.png?version=1&modificationDate=1682492060059&api=v2)\n\n![](/download/attachments/97903214/image2023-4-26_14-54-31.png?version=1&modificationDate=1682492071345&api=v2)\n\n#### 2）DP对话策略\n\n经过DST模块追踪到最新状态后，DP的作用就是根据现在的状态选择最好的动作，以满足用户需求\n\n##### ①任务型bot中常见的系统动作\n\n*   意图澄清：意图比较模糊时需要进行澄清\n*   槽位询问：要满足用户的某个意图，需要收集必填的槽位信息才能执行时，会进行依次澄清的策略\n*   调用外部API：满足用户意图的对话过程中，可能需要一次或者多次调用外部接口进行查询\n*   调用bot：在对话过程中用户切换了意图，且新意图是当前bot无法处理的，对话管理系统会将新意图分发给新bot处理\n*   答复：系统向用户答复信息\n\n##### ②对话策略\n\n*   触发条件：达到什么条件会触发此策略，是否有优先级，按优先级依次遍历\n*   策略处理：命中策略后，采取何种方式处理。比如意图澄清，是隐式方式还是显式方式，多意图澄清还是单个意图按顺序澄清\n*   回复话术：即设置应答和回复的话述\n\n在语音对话机器人中，还会有“听不清”、“拉回对话”、“用户长时间不说话”等对话策略，这类对话机器人通常会事先设定好对话主流程、异常处理子流程以及对应的话术，是由话术和流程驱动的机器人。\n\n##### ③DP的算法\n\n*   基于规则：比如根据DST知道有哪些槽位没有填充，用规则的方法选取一个优先级最高的槽提问。\n*   分类算法：槽位或者候选动作Action少时，可看作是分类问题进行处理。\n*   增强学习方法：对话管理是对候选动作的选择，即采取何种策略达到最优效果，这是个典型的增强学习问题。\n\n###   \n2、问答型bot\n\n问答型bot在接收了用户的自然语言表达的Query，解析用户意图和进行问题预处理后，会获取相关知识，通过相关检索、知识库匹配和推理，最终形成自然语言表达的答案，返回给对话管理中控系统进行处理。\n\n**基于文档&基于问答对的处理逻辑：**预处理 → 召回 → 排序\n\n*   预处理：提取关键词、对Query进行扩展、检查和纠错\n*   召回：检索并召回若干个候选答案\n*   排序：根据计算模型计算用户问题与候选问题集的相似度，并排序\n\n**问答bot所依赖的知识**包括：文本文档、问答对、知识图谱、结构化数据库等\n\n**分类：**基于文档的问答 DBQA bot、基于问答对的问答 FAQ-Bot、基于知识图谱的问答 KBQA bot，根据阅读理解技术实现的问答bot\n\n#### 1）基于文档的DBQA bot\n\n##### ①处理逻辑\n\n基于文档类似于传统的搜索引擎常用的方法，搜索引擎将用户**Query转化成关键词**，基于关键词在大规模非结构化的文档中，**找到与用户意图最匹配的几个网页或者摘要**展示给用户。\n\n对用户查询，问答系统在**检索到相关文档中的段落**后，会根据答案类型，从段落中**抽取出答案**，得到**候选答案集**，然后经过**排序**后得到**最优答案**返回给\n\n![](/download/attachments/97903214/image2023-4-26_14-55-12.png?version=1&modificationDate=1682492112141&api=v2)\n\n##### ②基于文档的问答 vs 基于阅读理解的问答\n\n*   基于文档返回的是一句话的答案\n*   基于阅读理解则是返回一个实体\n\n####   \n2）基于问答对的FAQ bot\n\nFAQ bot核心的问题就是计算问题之间的语义相似度，即Q-Qmatch\n\n##### ①适用场景\n\n非个性化的问题，返回的是静态知识，无需调用接口返回答案。\n\n##### ②挑战\n\n泛化：相同的语义在自然语言中有多个不同的表示方式\n\n歧义：两个相近的自然语言表述，却可以有完全不同的语义。比如“教育部/长江学者”vs“教育部长/江学者”\n\n##### ③处理流程  \n![](/download/attachments/97903214/image2023-4-26_14-55-27.png?version=1&modificationDate=1682492127617&api=v2)  \n本体：即关键词，如：怎么查看订单，本体为“查看订单”  \n![](/download/attachments/97903214/image2023-4-26_14-55-36.png?version=1&modificationDate=1682492136483&api=v2)  \n④知识库\n\nFAQ-Bot是基于知识库匹配算法设计的，所以首先需要搭建本体知识库，通过新增和维护知识库，来提升机器人问答的准确率和用户体验\n\nFTT系统的问答库：\n\n![](/download/attachments/97903214/image2023-4-26_14-55-49.png?version=1&modificationDate=1682492149348&api=v2)\n\n**阈值：**如果阀值配得过高，会影响召回率;太低又会影响准确率。\n\n#### 3）基于知识图谱的KBQA Bot\n\n把知识图谱KG加入到了问答系统，是为了给机器构建人类知识，从而更好地理解用户的需求，当用户查询时，可以返回更为精准、结构化、直接的结果。\n\n基于知识图谱的子机器人，是基于结构化的数据进行查询，能处理更精准的问题理解和答案查询\n\n##### ①知识图谱\n\n知识图谱是一种基于图的数据结构，由节点和边组成，每个节点表示一个“实体”，每条边为实体与实体之间的“关系”\n\n![](/download/attachments/97903214/image2023-4-26_14-56-2.png?version=1&modificationDate=1682492163001&api=v2)\n\n知识图谱的数据层的表达方式存在两种**三元组**：\n\n*   **“实体—关系—实体”**：张三--父亲→李四、李四–拥有→电话\n*   **“实体—属性—值”**：电话--号码→13333333333\n\n![](/download/attachments/97903214/image2023-4-26_14-56-16.png?version=1&modificationDate=1682492177071&api=v2)\n\n##### ②知识图谱问答的优势：\n\n*   能对上下文进行会话识别和推理\n*   回复的准确率相对较高\n\n##### ③知识图谱问答的难点：\n\n*   知识图谱的构建：数据爬取—>数据解析（实体、关系、属性）—>数据插入—>关系建立\n*   把用户问题转化为知识图谱上的查询语言：意图识别—>实体识别—>属性识别—>问题分类\n\n### 3、闲聊型bot\n\n*   聊天型对话的目标是要产生有趣且富有信息量的自然回复使得人机对话可以持续进行下去\n*   闲聊型bot的风格是娱乐风趣，对答案的准确性要求较低，知识的数据来源也是全部领域。\n\n### 4、推荐型bot\n\n![](/download/attachments/97903214/image2023-4-26_14-56-29.png?version=1&modificationDate=1682492189603&api=v2)  \n四、回复融合/排序\n---------------------------------------------------------------------------------------------------------------------------\n\n问题分发给各个Bot后，每个bot都生成的回复，然后将在策略中心完成去重、融合和重排序等过程，最终产生一个或一组最优解。\n\n**步骤：**候选答案生成 → 候选答案评分 → 答案融合和排序\n\n*   候选答案生成：同一个Qeury，每个bot可能返回的是多个回复，答案会在对话管理系统聚合\n*   候选答案评分：对每个答案选取一些主要特征并对其进行打分\n*   答案融合和排序：先进行去成功，再通过算法计算每个答案的置信度，返回置信度最高的答案\n\n五、小结\n----\n\n### 1、可借鉴内容\n\n1）问答库可以增加关键词分类功能和相似问中标注同义词功能，以减少人工撰写相似问的工作量\n\n参考产品：云小蜜知识库，可以通过NLP手段扩充相似问：标注词语的同义词\n\n![](/download/attachments/97903214/image2023-4-26_15-11-45.png?version=1&modificationDate=1682493105266&api=v2)![](/download/thumbnails/97903214/image2023-4-26_15-11-50.png?version=1&modificationDate=1682493110305&api=v2)\n\n（待补充）"
}