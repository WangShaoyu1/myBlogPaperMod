{
	"title": "1、信号处理",
	"author": "王宇",
	"publishTime": "三月14,2023",
	"readTime": "12s",
	"tags": "[\"智能语音交互知识学习\"]",
	"description": "智能语音交互知识学习",
	"article": "*   1[1、语音空间](#id-1、信号处理-1、语音空间)\n    *   1.1[1.1、空间组成](#id-1、信号处理-1.1、空间组成)\n    *   1.2[1.2、空间中的影响因素](#id-1、信号处理-1.2、空间中的影响因素)\n*   2[2、麦克风阵列](#id-1、信号处理-2、麦克风阵列)\n    *   2.1[2.1、麦克风阵列分类](#id-1、信号处理-2.1、麦克风阵列分类)\n    *   2.2[2.2、麦克风阵列选型](#id-1、信号处理-2.2、麦克风阵列选型)\n    *   2.3[2.3、市售产品麦克风阵列方案情况](#id-1、信号处理-2.3、市售产品麦克风阵列方案情况)\n*   3[3、具体的信号处理操作](#id-1、信号处理-3、具体的信号处理操作)\n    *   3.1[3.1、降噪 Noice Suppression（NS）](#id-1、信号处理-3.1、降噪NoiceSuppression（NS）)\n    *   3.2[3.2、语音增强 Speech Enhancement（SE）](#id-1、信号处理-3.2、语音增强SpeechEnhancement（SE）)\n    *   3.3[3.3、去混响 Dereverberation（DER）](#id-1、信号处理-3.3、去混响Dereverberation（DER）)\n    *   3.4[3.4、回声消除 Acoustic Echo Cancellation（AEC）](#id-1、信号处理-3.4、回声消除AcousticEchoCancellation（AEC）)\n    *   3.5[3.5、语音活性检测 Voice Activity Detection（VAD）](#id-1、信号处理-3.5、语音活性检测VoiceActivityDetection（VAD）)\n    *   3.6[3.6、声源定位 Direction of Arrival（DOA）](#id-1、信号处理-3.6、声源定位DirectionofArrival（DOA）)\n    *   3.7[3.7、盲源分离 Blind Source Separation（BSS）](#id-1、信号处理-3.7、盲源分离BlindSourceSeparation（BSS）)\n    *   3.8[3.8、波束形成 Beamforming（BF）](#id-1、信号处理-3.8、波束形成Beamforming（BF）)\n    *   3.9[3.9、自动增益控制 Auto Gain Control（AGC）](#id-1、信号处理-3.9、自动增益控制AutoGainControl（AGC）)\n    *   3.10[3.10、信号处理流程参考](#id-1、信号处理-3.10、信号处理流程参考)\n*   4[4、天猫精灵Sound系列独家的“猫耳算法”](#id-1、信号处理-4、天猫精灵Sound系列独家的“猫耳算法”)\n    *   4.1[4.1、原理/名称由来](#id-1、信号处理-4.1、原理/名称由来)\n    *   4.2[4.2、技术实现](#id-1、信号处理-4.2、技术实现)\n\nSpeech Signal Processing，语音信号处理，通过麦克风阵列进行“声学场景”的信号处理。语音信号处理核心的作用就是**识别采集的信号，增强需要识别的声音，抑制不需要识别的声音**。\n\n1、语音空间\n------\n\n对于语音空间的理解便于我们更好的定义声学场景，提升语音交互入口体验。\n\n### 1.1、空间组成\n\n空间决定了声学场景，声学场景由需要识别的声音和不需要识别的声音组成。\n\n*   需要识别的声音：\n    *   声源-我要听谁的声音\n    *   拾音角度-我要听哪个方向的声音\n    *   拾音距离-我要听距离多远的声音\n*   不需要识别的声音：\n    *   多人声-哪些人的声音我不希望听\n    *   噪音-哪些是对语音产生干扰的声音\n    *   混响-哪些是多次反射、折射叠加的声音\n\n![](https://pic1.zhimg.com/80/v2-efec79941b766d7abd970b17d2e7e8cc_720w.webp)\n\n### 1.2、空间中的影响因素\n\n空间的影响因素是多元的，声源、噪音源、设备三者之间任何一个相对位置发生变化，都会导致设备采集的声音发生变化，影响语音信号处理。在不同的环境中，要重点围绕着**相对位置（距离、角度）和噪音类型**来探讨。\n\n*   相对位置：\n    *   以设备为中心，声源应该在设备的哪个位置才能被听到——距离多少，角度多少；\n    *   如果声源是多个人在同一角度、同一距离发出的，怎么区分；\n    *   噪音源来自哪几个方向，强度多少，是否需要抑制\n*   噪音类型：\n    *   人群噪音，人类的非语音声音、脚步声、咳嗽声、笑声、喝水声、呼吸、拍手、打喷嚏等；\n    *   环境噪音，门转动的声音、敲击声、行李箱拖动声、风声、雨声、汽车鸣笛声等；\n    *   空间变化对噪音的影响：面积、是否堆满杂物、是否空旷等；\n    *   设备的自噪音：散热器的声音（风扇）、电流声、关节转动声音、播报声等。\n\n  \n\n![](https://pic1.zhimg.com/80/v2-6a6743118ce2377ec75ae53f080670d0_720w.webp)\n\n2、麦克风阵列\n-------\n\n定义清楚声学场景之后，就要思考，怎么将我们定义好的空间、角度、距离、噪音等等信息告知我们的设备，以便设备对这些信号进行对应的处理。\n\n传统的单麦克风是无法获得声学信号的空间信息的，而多麦克风通过阵列的方式组合分布，由于不同的麦克风收到声波的差异性延时，就能够计算出整个音频的空间信息。\n\n麦克风阵列通过多个麦克风将空间对应的分割，理论上，麦克风越多，空间分割越细，信号处理的准确率和精度就越高。麦克风阵列除了看到的麦克风数量以外，还有一系列的前端算法，两者结合的系统才是完整的麦克风阵列。\n\n### 2.1、麦克风阵列分类\n\n对麦克风阵列的分类通常根据其数量和布局来分：\n\n麦克风阵列\n\n示例\n\n应用\n\n优点\n\n缺点\n\n线性阵列\n\n![](/download/thumbnails/97891220/image2023-3-14_15-19-33.png?version=1&modificationDate=1678778373730&api=v2)\n\n常应用于手机、耳机、智能音箱中\n\n是最常见的麦克风阵列类别\n\n成本低\n\n功耗低\n\n降噪效果有限\n\n远场景交互效果不好\n\n平面阵列\n\n![](/download/thumbnails/97891220/image2023-3-14_15-19-44.png?version=1&modificationDate=1678778384448&api=v2)\n\n常应用于智能音箱、语音交互机器人\n\n常见的有4麦阵列和6麦阵列，还有升级的4+1麦阵列和6+1麦阵列，甚至8+1麦阵列\n\n可以实现平面360度等效试音，远场景识别效果好\n\n功耗较高\n\nID设计复杂\n\n立体阵列\n\n![](/download/thumbnails/97891220/image2023-3-14_15-19-52.png?version=1&modificationDate=1678778392437&api=v2)\n\n在生活中应用较少，常用于专业领域\n\n多是球状或圆柱体阵列\n\n可以实现真正的全空间360度无损拾音，解决了平面阵高俯仰角信号响应差的问题，效果最好\n\n成本高\n\n### 2.2、麦克风阵列选型\n\n选择麦克风阵列一方面是考虑麦克风本身，另外也要关注前端算法的部分。\n\n（1）首先，从使用场景和ID设计出发进行选择。使用场景是近场多还是远场多；是需要定向拾音还是全向拾音（问诊时需要定向，会议时需要全向）（目前一些麦克风阵列可以支持至少两种不同的拾音模式）；产品的ID设计适合什么类型的麦克风阵列（比如腔体设计）。\n\n（2）其次，从产品定位和前端算法出发进行选择。最求性价比还是追求高端体验；麦克风阵列的前端算法效果**要结合ASR一起评估**。\n\n（3）最后，从参考成本和研发速度出发进行选择。预算如何；选择成熟的方案（研发速度快）还是选择定制化（研发速度慢）。\n\n### 2.3、[市售产品麦克风阵列方案情况](/pages/viewpage.action?pageId=97884225)\n\n3、具体的信号处理操作\n-----------\n\n了解了麦克风阵列的相关知识，以及如何根据需求选择响应的麦克风阵列之后，就需要进行具体的信号处理操作。\n\n处理操作大致可以分为两类：增强或抑制，核心逻辑是：**增强需要识别的声音，抑制不需要识别的声音**。\n\n### 3.1、降噪 Noice Suppression（NS）\n\n对声学场景中的非语音噪音信号进行抑制。\n\n详细内容请见李梦阳同学吐血整理：[关于声学模块成熟语音助手如何做到降噪](/pages/viewpage.action?pageId=97890712)\n\n### 3.2、语音增强 Speech Enhancement（SE）\n\n从含有噪音的的语音信号中提取纯净语音\n\n### 3.3、去混响 Dereverberation（DER）\n\n混响常指声波在室内传播时，被墙壁、天花板、地板等障碍物形成反射声，并和直达声形成叠加的现象。\n\n机器的感知比人敏感得多，因此需要弱化混响引起的不同步的语音相互叠加，从而提升语音识别效果。\n\n### 3.4、回声消除 Acoustic Echo Cancellation（AEC）\n\n去除语音交互设备自己发出的声音（播报、音乐等等），而只保留用户的人声。\n\n【回声与混响的区别】\n\n直达声与反射声的概念：\n\n*   直达声：由声源直接传播到听众的声音\n*   早期反射声（近次反射声）：发出的声音经周围界面反射1-2次后、比直达声晚到50m/s以内的全部反射声\n*   后期反射声：经过多次反射传播到听众的声音\n\n  \n\n概念\n\n处理方式\n\n  \n\n概念\n\n处理方式\n\n回声（Echo）\n\n当直达声与反射声之间的时间间隔超过十分之一秒（在15℃的空气中，距声源至少17m处反射），这时听者能清晰地分辨出反射回来的声音是回声\n\n回声会破坏音质，要想办法处理掉\n\n混响（Reverberation）\n\n当声波在室内传播，被墙壁、天花板、地板等障碍物反射时，每反射一次都要被障碍物吸收一些，因此当声源停止发声后，声波会在室内经过多次反射和吸收，逐渐衰减，最后才消失。这种室内声源停止发声后仍然存在的声延续现象叫做混响，这段时间叫做混响时间\n\n在一定的混响时间内，混响对音质时有利的\n\n### 3.5、语音活性检测 Voice Activity Detection（VAD）\n\n在语音输入时，一般需要长时监听，麦克风阵列一直在处理收到的音频信号，这些信号中有语音信号，也有各种各样的空白音频信号。\n\nVAD就是检测出一段音频中真正的语音部分。基本原理是判断一个区间内的音频（区间被称为一个“语音帧”），是有效语音，还是无效语音。通过连续的检测多帧，就能判断出语音的“开头”（从无效到有效）和“结尾”（从有效到无效），完成语音的切割。\n\n判断语音的结尾，需要经过一个等待时间，这个时间叫做**VAD超时**，行业一般情况下VAD超时时间为450-800ms，比如讯飞的VAD超时默认为800ms。VAD时间过长，会导致语音交互的时延变长，影响体验；相反VAD时间过短，会导致我们的语速稍慢时语音就被截断了，同样的影响交互体验。在不同的应用场景中，VAD超时可以根据具体业务进行设定。比如做导航、音乐控制等等快速简短的指令时，超时可以设置为600ms，而做语音听写，发送短信之类的业务，超时时间应当尽量长一些，800ms甚至以上。\n\n### 3.6、声源定位 Direction of Arrival（DOA）\n\n确定发声源的距离、角度，从而实现对目标声源方向的跟踪。\n\n声源定位是为后续的波束形成做技术铺垫。\n\n### 3.7、盲源分离 Blind Source Separation（BSS）\n\n从多个语音信号中分离出不同语音信号，例如不同的说话人声。\n\n盲源分离是指在不知道源信号和传输通道的参数的情况下，根据输入源信号的统计特性，仅有观测信号恢复出源信号各个独立成分的过程。盲信号处理问题可以表述为：当传输信道特性未知时，从一个传感器阵列或转换器的输出信号中分离或估计出源信号的波形。\n\n### 3.8、波束形成 Beamforming（BF）\n\n对多路麦克风信号进行合并处理，抑制非目标方向的干扰信号，增强目标方向的声音信号。\n\n### 3.9、自动增益控制 Auto Gain Control（AGC）\n\n根据输入音频信号水平自动动态调整。\n\n### 3.10、信号处理流程参考\n\n信号处理流程顺序参考：AEC- BF - DOA - DER - NS - AGC - BSS（如下图）。\n\nVAD通常是放到麦阵信号的处理之后【VAD的准确性和语音信噪比正相关，安静的环境准确性更高，因此需要放到降噪处理后面】。\n\n![](/download/attachments/97891220/image2023-3-14_15-16-24.png?version=1&modificationDate=1678778184240&api=v2)\n\n信息处理能力的表现需要经过大量的调试，一些常用的信号处理算法及其必要性：\n\n![](https://pic4.zhimg.com/80/v2-ade315f7d17f502a91d491113dd7ce5b_720w.webp)\n\n4、天猫精灵Sound系列独家的“猫耳算法”\n----------------------\n\n【先来看看使用猫耳算法的实际效果：即使是80%超大音量播放新晋的跳操神曲《本草纲目》，也可以用正常说话的音量和音箱交互；极限场景下，跑到厨房里打开抽油烟机再关上门，都能成功唤醒客厅里大声播放音乐的天猫精灵。】\n\n### 4.1、原理/名称由来\n\n根据猫耳朵能独立旋转180度并通过内部褶皱准确定位声音来源而得名，如下图。\n\n![](https://pic.rmb.bdstatic.com/bjh/down/228f5b3e378212cfe67330ebb746e80a.gif)\n\n### 4.2、技术实现\n\n要想用算法实现这一特性，需要做到一下三个部分：\n\n*   回声消除。回声一般分为线性和非线形两部分。对于线性回声主要通过线性滤波器的传统算法来解决，对于非线性回声天猫精灵增加了深度学习算法来解决。\n*   声源定位。增加使用了唤醒词的信息，包括唤醒词上每个频点人声的比例，综合利用声学信息和语音特征增加准确率。\n*   降噪。也是传统算法与深度学习结合，先用噪声识别模型区分出人声与非人声，再分别用不同的算法去处理。\n\n![](http://n1.itc.cn/img8/wb/sohulife/2022/06/01/165406280237890249.PNG)\n\n  \n\n  \n\n参考：\n\n[https://zhuanlan.zhihu.com/p/111516373](https://zhuanlan.zhihu.com/p/111516373)\n\n[https://zhuanlan.zhihu.com/p/430811547](https://zhuanlan.zhihu.com/p/430811547)\n\n[https://baijiahao.baidu.com/s?id=1669899693073386053&wfr=spider&for=pc](https://baijiahao.baidu.com/s?id=1669899693073386053&wfr=spider&for=pc)\n\n[https://www.cnblogs.com/LXP-Never/p/11703440.html](https://www.cnblogs.com/LXP-Never/p/11703440.html)\n\n  \n\n[Filter table data](#)[Create a pivot table](#)[Create a chart from data series](#)\n\n[Configure buttons visibility](/users/tfac-settings.action)"
}