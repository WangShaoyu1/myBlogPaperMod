{
	"title": "如何使用 Higress 快速构建 AI 应用",
	"author": "阿里云云原生",
	"publishTime": "2024-08-22",
	"readTime": "阅读6分钟",
	"tags": "[\"云原生中文技术社区\",\"前端开发社区\",\"前端技术交流\",\"前端框架教程\",\"JavaScript 学习资源\",\"CSS 技巧与最佳实践\",\"HTML5 最新动态\",\"前端工程师职业发展\",\"开源前端项目\",\"前端技术趋势\"]",
	"description": "随着 AI 时代到来，基于大模型的应用对网关提出了新的要求，例如在不同 LLM 提供商之间进行负载均衡、构建 AI 应用的可观测能力、基于 token 的限流保护与配额管理、AI 应用内容安全等等。H随着 AI 时代到来，基于大模型的应用对网关提出了新的要求，例如在不同 LLM 提供商之间进行负载均衡、构建 AI 应用",
	"article": "随着 AI 时代到来，基于大模型的应用对网关提出了新的要求，例如在不同 LLM 提供商之间进行负载均衡、构建 AI 应用的可观测能力、基于 token 的限流保护与配额管理、AI 应用内容安全等等。Higress 基于企业内外的丰富场景沉淀了众多面向AI的功能，推出了 AI 原生的 API 网关形态并且全部开源。\n\n![图片](/images/jueJin/d08f3a81798146d.png)\n\nChatGPT-Next-Web **\\[** **1\\]** 是一个开源的前端项目，用于提供大模型聊天窗口，支持接入多种大模型，本文基于Higress、通义千问以及 ChatGPT-Next-Web，演示 Higress 如何兼容 openai 协议，并逐步搭建一个体系完整的 LLM 应用，应用最终架构如图所示：\n\n![图片](/images/jueJin/051ce19d67af4f7.png)\n\nAI 代理\n-----\n\n官方文档：_[help.aliyun.com/zh/mse/user…](https://link.juejin.cn?target=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fmse%2Fuser-guide%2Fai-agent%3Fspm%3Da2c4g.11186623.0.0.2927178eciPER4 \"https://help.aliyun.com/zh/mse/user-guide/ai-agent?spm=a2c4g.11186623.0.0.2927178eciPER4\")_\n\n### 应用架构\n\n首先，我们先通过网关快速部署一个可以进行对话的聊天应用，其架构如下图所示：\n\n![图片](/images/jueJin/30ee550a898a442.png)\n\nLLM 服务使用通义千问，服务类型为 DNS。路由及服务创建完成后如下图所示：\n\n![图片](/images/jueJin/866fa9479dee4dc.png)\n\n![图片](/images/jueJin/50995598bb594a8.png)\n\n### 插件配置\n\n设置路由级插件规则，选择在 llm 路由下生效，配置如下：\n\n```yaml\nprovider:\ntype: qwen\napiTokens:\n- sk-xxxxxxxxxxxxxxxxxxxxxx\ntimeout: 1200000\nmodelMapping:\n'gpt-3.5-turbo': qwen-turbo\n'gpt-4': qwen-max\n'*': qwen-max\n```\n\n### 插件效果\n\n![图片](/images/jueJin/173d7b7e25c248a.png)\n\nAI 可观测\n------\n\n官方文档：_[help.aliyun.com/zh/mse/user…](https://link.juejin.cn?target=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fmse%2Fuser-guide%2Fai-observable%3Fspm%3Da2c4g.11186623.0.0.42b4d95f14d39z \"https://help.aliyun.com/zh/mse/user-guide/ai-observable?spm=a2c4g.11186623.0.0.42b4d95f14d39z\")_\n\n### 应用架构\n\n现在，我们已经有了基础的对话功能，作为一款网关产品，我们希望在网关这个统一的入口处对各个服务、路由的请求情况进行观测。考虑到 LLM 请求主要以 token 为观测目标，网关提供了对 token 的观测机制，包含路由级、服务级、模型级的 token 用量观测。\n\n现在，我们改变上文的应用架构，插入可观测插件，改造后如下图所示：\n\n![图片](/images/jueJin/701fd007a35c48c.png)\n\n### 插件配置\n\n依然是选择在 llm 这条路由上生效，插件配置如下：\n\n```bash\nenable: true\n```\n\n### 插件效果\n\n![图片](/images/jueJin/abb6a1c1170549a.png)\n\nAI 内容安全\n-------\n\n官方文档：_[help.aliyun.com/zh/mse/user…](https://link.juejin.cn?target=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fmse%2Fuser-guide%2Fai-content-security%3Fspm%3Da2c4g.11186623.0.0.4408488dYGAm2X \"https://help.aliyun.com/zh/mse/user-guide/ai-content-security?spm=a2c4g.11186623.0.0.4408488dYGAm2X\")_\n\n### 应用架构\n\n大模型通常是通过学习互联网上广泛可用的数据来训练的，它们有可能在过程中学习到并复现有害内容或不良言论，因此，当大模型未经过适当的过滤和监控就生成回应时，它们可能产生包含有害语言、误导信息、歧视性言论甚至是违反法律法规的内容。正是因为这种潜在的风险，大模型中的内容安全就显得异常重要。\n\n基于 AI 内容安全插件，通过简单的配置即可对接阿里云内容安全 **\\[** **2\\]** ，为大模型问答的合规性保驾护航。\n\n![图片](/images/jueJin/ab574f43138a4fc.png)\n\n配置 AI 内容安全插件后，应用架构如下图所示：\n\n![图片](/images/jueJin/2ffe4933a339408.png)\n\n### 插件配置\n\n首先需要在网关配置内容安全的服务：\n\n![图片](/images/jueJin/ac96870709f14e8.png)\n\n配置服务后，开启内容安全插件，选择对 llm 路由生效：\n\n```makefile\nserviceSource: dns\nserviceName: green-cip\nservicePort: 443\ndomain: green-cip.cn-hangzhou.aliyuncs.com\nak: xxxxxxxxxxxxxxxxx\nsk: xxxxxxxxxxxxxxxxx\n```\n\n### 插件效果\n\n![图片](/images/jueJin/d879fc7c155a4a0.png)\n\n登录阿里云内容安全控制台，可以查看每条请求的审计记录：\n\n![图片](/images/jueJin/268b30a07f3c44b.png)\n\nAI Token 限流\n-----------\n\n官方文档：_[help.aliyun.com/zh/mse/user…](https://link.juejin.cn?target=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fmse%2Fuser-guide%2Fai-token-current-limiting%3Fspm%3Da2c4g.11186623.0.i4 \"https://help.aliyun.com/zh/mse/user-guide/ai-token-current-limiting?spm=a2c4g.11186623.0.i4\")_\n\n### 应用架构\n\nai-token-ratelimit 插件实现了基于特定键值实现 token 限流，键值来源可以是 URL 参数、HTTP 请求头、客户端 IP 地址、consumer 名称、cookie 中 key 名称。其借助 redis 实现全局的 token 限流。\n\n![图片](/images/jueJin/a60a82c6aa46400.png)\n\n创建一个 redis 服务并且在网关进行配置：\n\n![图片](/images/jueJin/3d125d1aa920487.png)\n\n之后添加 AI Token 限流插件，应用架构为：\n\n![图片](/images/jueJin/991c980aefe943e.png)\n\n### 插件配置\n\n```yaml\nrule_name: default_rule\nrule_items:\n- limit_by_per_ip: from-remote-addr\nlimit_keys:\n- key: 0.0.0.0/0\ntoken_per_minute: 100\nredis:\nservice_name: redis.static\nservice_port: 6379\nusername: xxxxxx\npassword: xxxxxx\nrejected_code: 429\nrejected_msg: 您的请求频率过高，请稍后再试。\n```\n\n以上插件配置效果为每个 ip 地址每分钟内只能使用 100 个 token，当超过 token 限制时，返回 429，响应 body 为“您的请求频率过高，请稍后再试。”\n\n### 插件效果\n\n![图片](/images/jueJin/1e3f34166bf64d4.png)\n\nAI 缓存\n-----\n\n官方文档：_[help.aliyun.com/zh/mse/user…](https://link.juejin.cn?target=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fmse%2Fuser-guide%2Fai-cache%3Fspm%3Da2c4g.11186623.0.0.3cdf306bbJSWdn \"https://help.aliyun.com/zh/mse/user-guide/ai-cache?spm=a2c4g.11186623.0.0.3cdf306bbJSWdn\")_\n\n### 应用架构\n\nAI 缓存插件能够缓存每个请求的响应，当有相同请求到来时，可以直接返回存储在 redis 中的大模型的生成内容，添加 AI 缓存插件后，应用架构为：\n\n![图片](/images/jueJin/2abf39fdc34b4e0.png)\n\n### 插件配置\n\n```yaml\nredis:\nserviceName: redis.static\nservicePort: 6379\ntimeout: 2000\nusername: xxxxxx\npassword: xxxxxx\n```\n\n### 插件效果\n\n![图片](/images/jueJin/eb5aefb1a7d44b1.png)\n\nAI RAG\n------\n\n官方文档：_[help.aliyun.com/zh/mse/user…](https://link.juejin.cn?target=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fmse%2Fuser-guide%2Fai-rag%3Fspm%3Da2c4g.11186623.0.0.24c77267ImcfGS \"https://help.aliyun.com/zh/mse/user-guide/ai-rag?spm=a2c4g.11186623.0.0.24c77267ImcfGS\")_\n\n### 应用架构\n\n大模型具有一个显著的局限性，那就是它们的知识截止到模型被训练的数据。一旦训练完成，模型就无法获取或学习新的信息。此外，大型语言模型的训练数据虽然浩如烟海，但仍然有可能缺少某些领域的信息，或者对某些主题的覆盖不够深入，针对这些细领域的查询可能会产生不够精确或缺乏深度的结果。检索增强生成（RAG）技术能够利用检索系统从大规模的数据库中找到相关信息，然后将这些信息提供给文本生成模型以帮助生成更精确、更丰富、更符合实际情况的文本。\n\nHigress 通过对接阿里云向量检索服务能够快速实现 RAG 功能：\n\n![图片](/images/jueJin/e74edd5be7f046f.png)\n\n添加 RAG 插件后，应用架构如下图所示：\n\n![图片](/images/jueJin/9ce4c050822141d.png)\n\n### 插件配置\n\n插件需要配置 dashscope 和 dashvector 两个云服务的相关信息：\n\n```yaml\ndashscope:\napiKey: sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxx\nserviceName: qwen\nservicePort: 443\ndomain: dashscope.aliyuncs.com\ndashvector:\napiKey: sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxx\nserviceName: dashvector\nservicePort: 443\ndomain: vrs-cn-xxxxxxxxxxxxxx.dashvector.cn-hangzhou.aliyuncs.com\ncollection: xxxxxxxxxxxxxx\n```\n\n### 插件效果\n\n![图片](/images/jueJin/704a0d013c18419.png)\n\n其他\n--\n\n除了以上插件，我们还提供了对 prompt 进行修改的插件以及对请求/响应进行智能转换的插件。\n\n### Prompt 工程相关插件\n\nPrompt 插件包括 prompt 模板以及 prompt 装饰器：\n\n*   prompt 模板 **\\[** **3\\]**\n*   prompt 装饰器 **\\[** **4\\]**\n\nPrompt 模板允许用户在网关定义一系列 LLM 请求的模板，使用者通过指定模板中的参数对 LLM 进行访问，配置示例如下：\n\n```yaml\ntemplates:\n- name: \"developer-chat\"\ntemplate:\nmodel: gpt-3.5-turbo\nmessages:\n- role: system\ncontent: \"你是一个 {{program}} 专家, 你平时使用的编程语言为 {{language}}\"\n- role: user\ncontent: \"帮我写一个 {{program}} 程序, 你的返回结果里面应该只包含python代码\"\n```\n\n请求 body 示例如下：\n\n```json\n    {\n    \"template\": \"developer-chat\",\n        \"properties\": {\n        \"program\": \"冒泡排序\",\n        \"language\": \"python\"\n    }\n}\n```\n\nPrompt 装饰器允许用户在网关定义对 prompt 的修改操作，包括在原始请求之前和之后插入 message，配置示例如下，请求 body 与 openai 的请求一致。\n\n```less\nprepend:\n- role: system\ncontent: \"请使用英语回答问题.\"\nappend:\n- role: user\ncontent: \"每次回答完问题，尝试进行反问\"\n```\n\n### AI 请求/响应智能转换\n\n官方文档：_[help.aliyun.com/zh/mse/user…](https://link.juejin.cn?target=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fmse%2Fuser-guide%2Fai-request-response-intelligent-transformation%3Fspm%3Da2c4g.11186623.0.0.4f6f63beBCZCAU \"https://help.aliyun.com/zh/mse/user-guide/ai-request-response-intelligent-transformation?spm=a2c4g.11186623.0.0.4f6f63beBCZCAU\")_\n\n请求响应转换插件支持对请求/响应进行智能转换，其工作流程如下图所示（示例中后端服务为 httpbin）：\n\n![图片](/images/jueJin/2813027e653448b.png)\n\n此插件可用于修改经过网关的请求/响应内容，例如将 xml 格式的响应修改为 json 格式。\n\n### 插件配置\n\n```yaml\nresponse:\nenable: true\nprompt: \"帮我修改以下HTTP应答信息，要求：1. content-type修改为application/json；2. body由xml转化为json；3. 移除content-length。\"\nprovider:\nserviceName: qwen\ndomain: dashscope.aliyuncs.com\napiKey: sk-xxxxxxxxxxxxxxxxxxxxxxxxxxx\n```\n\n### 插件效果\n\n访问原始的 httpbin 的 /xml 接口，结果为：\n\n```xml\n<?xml version='1.0' encoding='us-ascii'?>\n\n<!--  A SAMPLE set of slides  -->\n\n<slideshow\ntitle=\"Sample Slide Show\"\ndate=\"Date of publication\"\nauthor=\"Yours Truly\"\n>\n\n<!-- TITLE SLIDE -->\n<slide type=\"all\">\n<title>Wake up to WonderWidgets!</title>\n\n</slide>\n\n\n<!-- OVERVIEW -->\n<slide type=\"all\">\n<title>Overview</title>\n\n<item>Why <em>WonderWidgets</em> are great</item>\n\n<item/>\n<item>Who <em>buys</em> WonderWidgets</item>\n\n</slide>\n\n\n</slideshow>\n```\n\n使用以上配置，通过网关访问 httpbin 的 /xml 接口，结果为：\n\n```json\n    {\n        \"slideshow\": {\n        \"title\": \"Sample Slide Show\",\n        \"date\": \"Date of publication\",\n        \"author\": \"Yours Truly\",\n            \"slides\": [\n                {\n                \"type\": \"all\",\n                \"title\": \"Wake up to WonderWidgets!\"\n                },\n                    {\n                    \"type\": \"all\",\n                    \"title\": \"Overview\",\n                        \"items\": [\n                        \"Why <em>WonderWidgets</em> are great\",\n                        \"\",\n                        \"Who <em>buys</em> WonderWidgets\"\n                    ]\n                }\n            ]\n        }\n    }\n```\n\n**相关链接：**\n\n\\[1\\] ChatGPT-Next-Web\n\n_[github.com/ChatGPTNext…](https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2FChatGPTNextWeb%2FChatGPT-Next-Web \"https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web\")_\n\n\\[2\\] 阿里云内容安全\n\n_[help.aliyun.com/document\\_de…](https://link.juejin.cn?target=https%3A%2F%2Fhelp.aliyun.com%2Fdocument_detail%2F28417.html%3Fspm%3Da2c4g.28415.0.0.1dab1f55pipQr9 \"https://help.aliyun.com/document_detail/28417.html?spm=a2c4g.28415.0.0.1dab1f55pipQr9\")_\n\n\\[3\\] prompt 模板\n\n_[help.aliyun.com/zh/mse/user…](https://link.juejin.cn?target=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fmse%2Fuser-guide%2Fai-cue-template%3Fspm%3Da2c4g.11186623.0.0.768b184f1WdsVb \"https://help.aliyun.com/zh/mse/user-guide/ai-cue-template?spm=a2c4g.11186623.0.0.768b184f1WdsVb\")_\n\n\\[4\\] prompt 装饰器\n\n_[help.aliyun.com/zh/mse/user…](https://link.juejin.cn?target=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fmse%2Fuser-guide%2Fai-cue-decorator%3Fspm%3Da2c4g.11186623.0.0.124548a79q3fyU \"https://help.aliyun.com/zh/mse/user-guide/ai-cue-decorator?spm=a2c4g.11186623.0.0.124548a79q3fyU\")_",
	"selfDefined": "likes:1,comments:0,collects:1,likes:59"
}