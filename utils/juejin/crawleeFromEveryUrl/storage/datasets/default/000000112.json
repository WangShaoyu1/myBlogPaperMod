{
	"title": "春节走亲戚不知道该怎么称呼？”亲戚关系计算器“你值得拥有！",
	"author": "Sunshine_Lin",
	"publishTime": "2022-01-10",
	"readTime": "阅读5分钟",
	"tags": "[\"前端\",\"Vue.js\",\"JavaScript中文技术社区\",\"前端开发社区\",\"前端技术交流\",\"前端框架教程\",\"JavaScript 学习资源\",\"CSS 技巧与最佳实践\",\"HTML5 最新动态\",\"前端工程师职业发展\",\"开源前端项目\",\"前端技术趋势\"]",
	"description": "PK创意闹新春，我正在参加「春节创意投稿大赛」，详情请看：春节创意投稿大赛 前言 大家好我是林三心，用最通俗易懂的话讲最难的知识点是我的座右铭，基础是进阶的前提是我的初心，通知大家一个好消息：快过年啦",
	"article": "PK创意闹新春，我正在参加「春节创意投稿大赛」，详情请看：[春节创意投稿大赛](https://juejin.cn/post/7049181546682515464 \"https://juejin.cn/post/7049181546682515464\")\n\n前言\n--\n\n大家好我是林三心，**用最通俗易懂的话讲最难的知识点**是我的座右铭，**基础是进阶的前提**是我的初心，通知大家一个**好消息**：快过年啦！！！快过年啦！！！\n\n![image.png](/images/jueJin/2e2d2e89fed2414.png)\n\n但是通知大家一个**坏消息**：过年了，你去走亲戚，你知道应该怎么称呼你的亲戚们吗？比如你爸爸的哥哥的弟弟的儿子，你知道该怎么称呼吗？？？哈哈哈哈，开个玩笑。但是，确实很多人去走亲戚时，确实不知道怎么称呼自己的亲戚，这时候就体现了**编程**的魅力了，毕竟著名的程序员「沃夏编德斯基」说过**融入生活的编程才是好编程**\n\n![image.png](/images/jueJin/fc53741c8a7e42c.png)\n\n普遍做法\n----\n\n### 做法\n\n现在其实网上很多的做法都是这么做的：**称谓 -> 直接关系 -> 称谓**，而所用的数据结构类似于下面这种：\n\n```js\n    {\n        \"爸爸\": {\n        \"爸爸\": \"爷爷\",\n        \"妈妈\": \"奶奶\",\n        \"哥哥\": \"伯父\",\n        \"弟弟\": \"叔叔\",\n        \"姐姐\": \"姑妈\",\n        \"妹妹\": \"姑妈\",\n        \"丈夫\": \"未知\",\n        \"妻子\": \"妈妈\",\n        \"儿子\": { \"older\": \"哥哥\", \"middle\": \"我\", \"younger\": \"弟弟\" },\n    \"女儿\": { \"older\": \"姐姐\", \"middle\": \"我\", \"younger\": \"妹妹\" }\n}\n}\n```\n\n![截屏2022-01-09 下午7.36.17.png](/images/jueJin/d44e9cca465944c.png)\n\n### 缺点\n\n其实上面的这种做法，是有很多缺点的：\n\n*   1、无法直接查询比如“舅妈的婆婆”这样的复合关系\n\n![截屏2022-01-09 下午7.47.32.png](/images/jueJin/1996d8dcd2414e5.png)\n\n*   2、称谓无法逆向查询，比如：“表哥的妈妈”是“舅妈”、“姨妈”、还是“姑妈”？\n\n![截屏2022-01-09 下午7.51.09.png](/images/jueJin/076d41fbd8da4f6.png)\n\n*   3、数据结构臃肿，出现很多“未知” 正如上面的数据结构所见。。。“爸爸的丈夫”应该叫啥？？？？”未知“。。。\n\n![截屏2022-01-09 下午7.53.23.png](/images/jueJin/ac2e07662e34406.png)\n\n*   4、无法兼容多种称呼，如“爸爸”也可以称为“父亲”、“爹地”\n\n![截屏2022-01-09 下午7.54.43.png](/images/jueJin/e1fd548165d6473.png)\n\n*   5、无法进行关系链的推理，比如：“舅妈”和我之间的关系链是什么？\n\n![截屏2022-01-09 下午7.57.34.png](/images/jueJin/ff58c44dfb52452.png)\n\n高级做法\n----\n\n### 语法\n\n首先制定一套标准，推理亲戚关系时都要以这套标准\n\n#### 关系\n\n字母\n\n关系\n\nf\n\n父\n\nm\n\n母\n\nh\n\n夫\n\nw\n\n妻\n\ns\n\n子\n\nd\n\n女\n\nxb\n\n兄弟\n\nob\n\n兄\n\nlb\n\n弟\n\nxs\n\n姐妹\n\nos\n\n姐\n\nls\n\n妹\n\n#### 修饰符\n\n修饰符\n\n含义\n\n1\n\n男性\n\n0\n\n女性\n\n&o\n\n年长\n\n&l\n\n年幼\n\n#\n\n隔断\n\n\\[a|b\\]\n\n并列\n\n### 数据结构\n\n数据结构是这样的键值对：**直接关系链 -> 称谓集合**\n\n举个例子\n\n*   'h'：\\['老公','丈夫','先生','官人','男人','汉子','夫','夫君','相公','夫婿','爱人','老伴'\\] 因为`h`代表了`夫`，而`夫`的称谓有以上几种\n*   'h,f'：\\['公公','翁亲','老公公'\\] 因为`h,f`代表了`夫的父`，称谓有以上几种\n*   '\\[h,f|h,m\\]':\\['公婆'\\] 因为`[h,f|h,m]`意思是`老公的爸爸和老公的妈妈`，那就是`公婆`\n*   '\\[f,xb,s&o|f,xb,s&l\\]':\\['堂兄弟'\\] 因为`[f,xb,s&o|f,xb,s&l]`意思是`爸爸的兄弟的年长儿子和爸爸的兄弟的年幼儿子`，那就是`堂兄弟`\n\n这样在查询关系的时候，只需要对直接关系链进行计算就好了，而不是对称谓进行字典查找\n\n开搞\n--\n\n### 思路\n\n举个例子\n\n*   1、当用户输入”舅妈的婆婆“，可以分解成”舅妈“和”婆婆“（前者的婆婆）\n*   2、分解成的”舅妈“和”婆婆“，关系链分别是`m,xb,w`和`h,m`，合并一起是`m,xb,w,h,m`\n*   3、合并后的关系链出现冗余，`w,h`是`老婆的老公`，也就是自己，可简化成`m,xb,m`，且`xb,m`是`兄弟的妈妈`，也就是自己的妈妈，于是最后简化成`m,m`\n*   4、简化后的关系链是一个`直接关系链`，可以通过`键值对`去匹配查询即可\n\n![截屏2022-01-10 上午6.45.08.png](/images/jueJin/0117157f94f94f9.png)\n\n### 实现\n\n*   1、`键值对`，使用`JSON`格式保存，键值对形式查询速度快\n*   2、关系链简化使用`正则表达式`，一次简化两层关系，直到不能简化，但是简化过程需考虑性别，比如：”儿子的妈妈“，当你是男性时代表了你的妻子，当你是女性的时候代表了你自己。这些都需要使用`正则表达式`进行匹配，并且替换掉，这也是为什么需要`修饰符`的原因\n\nrelationship.js\n---------------\n\n### 使用方式\n\n安装\n\n```js\nnpm install relationship.js\n```\n\n使用\n\n```js\nconst relationship = require(\"relationship.js\")\n\n// 自定义模式\n// 【关系链】f:父,m:母,h:夫,w:妻,s:子,d:女,xb:兄弟,ob:兄,lb:弟,xs:姐妹,os:姐,ls:妹\n// 【修饰符】 1:男性,0:女性,&o:年长,&l:年幼,#:隔断,[a|b]:并列\n    relationship.setMode('northern',{\n    'm,f': ['姥爷'],\n    'm,m': ['姥姥'],\n    'm,xb,s&o': ['表哥'],\n    'm,xb,s&l': ['表弟'],\n    })\n    \n        var options = {\n        text: '',\t\t//输入文本(称谓的汉字表达，称谓间用‘的’字分隔)\n        target: '',\t    \t//针对对象：空表示自己\n        sex: 1,\t\t\t//自己的性别：0女性,1男性\n        type: 'default',\t//转换类型：'default'计算称谓,'chain'计算关系\n        reverse: false,\t\t//称呼方式：true对方称呼我,false我称呼对方\n        mode: 'default'\t\t//模式选择，可由用户自定义\n        };\n        \n        \n        // 如：我应该叫外婆的哥哥什么？\n    console.log(relationship({ text: '妈妈的妈妈的哥哥' })) // [ '外舅公' ]\n    \n    // 如：七舅姥爷应该叫我什么？\nconsole.log(relationship({ text: '七舅姥爷', reverse: true, sex: 1 })) // [ '甥外孙' ]\n\n// 如：舅公和我是什么关系？\nconsole.log(relationship({ text: '舅公', sex: 0, type: 'chain' }))\n// [ '爸爸的妈妈的兄弟', '妈妈的妈妈的兄弟', '老公的妈妈的兄弟' ]\n\n// 如：舅妈如何称呼外婆？\nconsole.log(relationship({ text: '外婆', target: '舅妈', sex: 1 })) // [ '婆婆' ]\n```\n\n### 亲戚关系计算器-简易版\n\n配合`input、select、button`便可以简单实现`亲戚关系计算器-简易版`了\n\n![简易版亲戚.gif](/images/jueJin/26b775045e9b4e7.png)\n\n```js\n// template\n<div class=\"m-l-10 m-t-20\">\n<input v-model=\"options.text\" />\n<input v-model=\"options.target\" />\n<br />\n<select v-model=\"options.sex\">\n<option :value=\"1\">男</option>\n<option :value=\"0\">女</option>\n</select>\n<select v-model=\"options.type\">\n<option value=\"default\">称谓</option>\n<option value=\"chain\">关系</option>\n</select>\n<select v-model=\"options.reverse\">\n<option :value=\"false\">正向</option>\n<option :value=\"true\">反向</option>\n</select>\n<br />\n<button @click=\"computedRelationship\">计算</button>\n<span>{{result}}</span>\n</div>\n\n// data\n    options: {\n    text: \"\",\n    target: \"\",\n    sex: 1,\n    type: \"default\",\n    reverse: false,\n    mode: \"default\",\n    },\n    result: ''\n    \n    import relationship from './relationship'\n    // methods\n        computedRelationship() {\n        console.log(this.options)\n        this.result = relationship(this.options)\n        },\n```\n\n### 亲戚关系计算器-复杂版\n\n[亲戚关系计算器](https://link.juejin.cn?target=https%3A%2F%2Fpasser-by.com%2Frelationship%2F \"https://passer-by.com/relationship/\")\n\n参考文章\n----\n\n*   [\"亲戚关系计算器\" 算法实现](https://juejin.cn/post/6844903462581305352 \"https://juejin.cn/post/6844903462581305352\")\n*   [\"亲戚关系计算器\"算法实现](https://link.juejin.cn?target=https%3A%2F%2Fwww.jianshu.com%2Fp%2F74290f1ae838 \"https://www.jianshu.com/p/74290f1ae838\")\n*   [relationship.js 的 github地址](https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fmumuy%2Frelationship \"https://github.com/mumuy/relationship\")",
	"selfDefined": "likes:134,comments:63,collects:46,likes:13748"
}