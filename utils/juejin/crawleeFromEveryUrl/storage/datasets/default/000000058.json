{
	"title": "晚上12点，帮组员解决Vue3异步引发的线上BUG",
	"author": "Sunshine_Lin",
	"publishTime": "2023-11-28",
	"readTime": "阅读4分钟",
	"tags": "[\"前端中文技术社区\",\"前端开发社区\",\"前端技术交流\",\"前端框架教程\",\"JavaScript 学习资源\",\"CSS 技巧与最佳实践\",\"HTML5 最新动态\",\"前端工程师职业发展\",\"开源前端项目\",\"前端技术趋势\"]",
	"description": "前言 大家好，我是林三心，用最通俗易懂的话讲最难的知识点是我的座右铭，基础是进阶的前提是我的初心~ 背景 事情是这样的，我的组员在写一个项目，项目里有一个 Homevue 页面，大概结构是这样，Ho",
	"article": "前言\n--\n\n大家好，我是林三心，用最通俗易懂的话讲最难的知识点是我的座右铭，基础是进阶的前提是我的初心~\n\n背景\n--\n\n事情是这样的，我的组员在写一个项目，项目里有一个 Home.vue 页面，大概结构是这样，Home.vue 就是本项目的首页，项目初始化后加载的顺序是 App.vue -> Home.vue\n\n![](/images/jueJin/2f8b6129a919401.png)\n\n在 App.vue 加载的时候，项目需要去请求本项目所需要使用到的字典，这部分逻辑写在了 Pinia 中，大概代码如下\n\n![](/images/jueJin/7cb830dba49f40d.png)\n\n接着会在 App.vue 的 onMounted 中去执行 setup 方法，去请求所有字典，这应该也是很多项目中初始化数据的方式~\n\n![](/images/jueJin/be360a2fff174f8.png)\n\n接着，在 Home.vue 初始化的时候，需要去使用这些字典去完成某些操作，**且只是初始化时需要完成这个操作**\n\n![](/images/jueJin/de3115ccad5846d.png)\n\n我们到控制台中看到，确实能获取到所有字典，那就说明没问题了吗？？？？？\n\n![](/images/jueJin/30984c81512f4cc.png)\n\n生产事故\n----\n\n问题来了，昨天服务器不知道咋的，字典接口响应很慢，差不多有2秒，我们可以来模拟一下，看看什么效果，我这里使用 setTimeout 来模拟请求2秒\n\n![](/images/jueJin/39f8ccccf6384db.png)\n\n好，现在来看看 Home.vue 里输出了什么\n\n![](/images/jueJin/872249e7db49407.png)\n\n完蛋，Home.vue 初始化时拿不到数据，做不了对应操作，在发版日的晚上12点的时候，测试那边反馈了这个 BUG，我马上赶过去看了一下，马上就看出了问题所在，其实很多人也能看出来\n\n因为请求太久了，导致 Home.vue 在 onMounted 时拿不到数据，执行不了后续操作，导致页面 BUG\n\n解决问题\n----\n\n我并没有急，我让我的组员自己想想应该怎么解决，锻炼一下他解决问题的能力，他觉得加个 watch 是不是就可以了！！！\n\n![](/images/jueJin/2b93e96960834f6.png)\n\n但是可惜的是，并不会触发监听，只能换一种办法，他查了一下百度，说可以用 Pinia 的 $subscribe 方法，就可以监听 Pinia 数据的变化了~\n\n![](/images/jueJin/98751ac906354f1.png)\n\n看看效果，确实能监听到变化，但是变化了几次就会执行几次啊，他说那就用防抖去做。。。。\n\n![](/images/jueJin/78d5a65ca5a94c1.png)\n\n我说防抖也有问题啊。。比如我们只需要 setup 执行后引起的变化监听，而不需要其他，就比如这个 otherSetup 也会引起变化监听，但我们并不想要这次变化\n\n![](/images/jueJin/9a31999c96a04f1.png)\n\n这种写法的不确定性太大了，而且不太合理，肯定不能这么写啊！！！\n\n![](/images/jueJin/6dfc8af00a524d0.png)\n\n巧用 Promise\n----------\n\n最后还是我帮他解决的，我觉得问题有两个：\n\n*   1、组员在做项目的时候没考虑兜底\n*   2、组件的基础不够扎实\n\n在做这种需求的时候肯定要考虑到请求响应慢的时候的兜底啊，不能想当然。再有就是基础不够扎实，这种场景一看就可以使用 Promise 去兜底\n\n我先封装一个函数，这函数返回两个东西\n\n*   **readyResolve：** 一个resolve函数\n*   **onReady：** 接收回调函数，只有在readyResolve执行后才会执行\n\n![](/images/jueJin/746abddf69bf480.png)\n\n接着回到 Pinia 文件中，首先将 onReady 暴露出去\n\n![](/images/jueJin/f3efbc81e1354a8.png)\n\n接着在 setup 执行完的时候去执行 readyResolve 函数，为了提高可读性，我这里使用 Promise.all 代替之前的写法\n\n![](/images/jueJin/ef41ccc48bd140f.png)\n\n然后到 Home.vue 页面中，只需要往 onTestStoreSteuped 中传回调函数即可\n\n![](/images/jueJin/62ac561c20c6470.png)\n\n最终达到了想要的效果，无论请求多久，Home.vue 中的操作始终能在请求之后去执行\n\n![](/images/jueJin/5cd431649e1f4ac.png)\n\n而且这样做的好处就是，无论你有多少页面需要使用请求后的数据，都可以往 onTestStoreSteuped 中传回调，请求完都会一一执行的~\n\n通过这次的生产事故，我告诫组员们，平时学的东西要在开发项目中想一下怎么应用，而不是只是死记硬背，没有实践，那么这样只会是纸上谈兵罢了，没啥卵用，应付应付面试可能可以，做项目写的代码质量不会高的~\n\n结语 & 加学习群 & 摸鱼群\n---------------\n\n我是林三心\n\n*   一个待过**小型toG型外包公司、大型外包公司、小公司、潜力型创业公司、大公司**的作死型前端选手；\n*   一个偏前端的全干工程师；\n*   一个不正经的掘金作者；\n*   一个逗比的B站up主；\n*   一个不帅的小红书博主；\n*   一个喜欢打铁的篮球菜鸟；\n*   一个喜欢历史的乏味少年；\n*   一个喜欢rap的五音不全弱鸡\n\n如果你想一起学习前端，一起摸鱼，一起研究简历优化，一起研究面试进步，一起交流历史音乐篮球rap，可以来俺的摸鱼学习群哈哈，点这个，有7000多名前端小伙伴在等着一起学习哦 --> [摸鱼沸点](https://juejin.cn/pin/7035153948126216206 \"https://juejin.cn/pin/7035153948126216206\")",
	"selfDefined": "likes:176,comments:0,collects:240,likes:12723"
}