{
	"title": "工作中提高CSS的编写效率，可以多用这三个CSS伪类",
	"author": "Sunshine_Lin",
	"publishTime": "2023-08-01",
	"readTime": "阅读3分钟",
	"tags": "[\"前端中文技术社区\",\"前端开发社区\",\"前端技术交流\",\"前端框架教程\",\"JavaScript 学习资源\",\"CSS 技巧与最佳实践\",\"HTML5 最新动态\",\"前端工程师职业发展\",\"开源前端项目\",\"前端技术趋势\"]",
	"description": "前言 大家好，我是林三心，用最通俗易懂的话讲最难的知识点是我的座右铭，基础是进阶的前提是我的初心。 where 基本使用 where()  CSS 伪类函数接受选择器列表作为它的参数，将会选择所有",
	"article": "前言\n--\n\n大家好，我是林三心，用最通俗易懂的话讲最难的知识点是我的座右铭，基础是进阶的前提是我的初心。\n\n![](/images/jueJin/84d7bde5f63e489.png)\n\n:where\n------\n\n### 基本使用\n\n**`:where()`**  [CSS 伪类](https://link.juejin.cn?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FCSS%2FPseudo-classes \"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-classes\")函数接受[选择器列表](https://link.juejin.cn?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FCSS%2FSelector_list \"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Selector_list\")作为它的参数，将会选择所有能被该选择器列表中任何一条规则选中的元素。\n\n以下代码，文本都会变成 yellow 颜色\n\n```html\n    :where(div p) span {\n    color: yellow;\n}\n\n<div class=\"test-div\">\n<span>哈哈</span>\n</div>\n<p class=\"test-p\">\n<span>哈哈</span>\n</p>\n```\n\n### 使用场景\n\n其实 `:where()` 的功能本来就有，只不过有了它之后，实现起这些功能来就更加方便快捷~接下来就来讲讲它的组合/叠加功能\n\n我们来看下面的这段 css 代码\n\n```css\ndiv a:hover,\nli a:hover,\n.cla a:hover,\n.aa .bb a:hover,\n    [class^='bold'] a:hover{\n    color: yellow;\n}\n```\n\n我们可以使用 `:where()`来简化这个写法，使用它找出 div li .cla 这三种选择器，选择器可以是标签，也可以是类名，也可以是选择器表达式\n\n```css\n    :where(div, li, .cla, .a .b, [class^='bold']) a:hover {\n    color: yellow;\n}\n```\n\n再来看看使用 `:where()` 的组合，完成一些功能，我们看以下的代码\n\n```css\n.dark-theme button,\n.dark-theme a,\n.light-theme button,\n    .light-theme a{\n    color: pink;\n}\n```\n\n我们完全可以使用 `:where()` 简化这个写法\n\n```css\n    :where(.dark-theme, light-theme) :where(button, a) {\n    color: pink;\n}\n```\n\n### 优先级\n\n`:where()`的优先级是 0，我们可以看下面代码\n\n```css\n    .test {\n    color: yellow;\n}\n    :where(.test) {\n    color: pink\n}\n```\n\n最后字体颜色是 yellow\n\n### 兼容性\n\n全绿~\n\n![image.png](/images/jueJin/39644a7f417d443.png)\n\n:is\n---\n\n`:is()`跟`:where()`可以说一模一样，区别就是 `:is()`的优先级不是0，而是由传入的选择器来决定的，拿刚刚的代码来举个例子\n\n```css\n    div {\n    color: yellow;\n}\n    :where(.test) {\n    color: pink\n}\n\n<div class=\"test\">哈哈</div>\n```\n\n这要是 `:where()`，那么字体颜色会是 yellow，因为它的优先级是 0\n\n但是如果是 `:is()`的话，字体颜色会是 pink，因为 类选择器 优先级比 标签选择器 优先级高~\n\n```css\n    :is(.test) {\n    color: pink\n}\n    div {\n    color: yellow;\n}\n\n<div class=\"test\">哈哈</div>\n```\n\n### 兼容性\n\n全绿~\n\n![image.png](/images/jueJin/7784e1be0bae4e0.png)\n\n:has\n----\n\n### 基本使用\n\n举一个场景例子，我们看以下代码，一个容器中，图片是可以显隐的，我想要实现：\n\n*   图片显示时，字体大小为 12px\n*   图片隐藏时，字体大小为 20px\n\n```html\n<div class=\"container\">\n哈哈哈哈哈\n<img class=\"test-img\" v-if=\"showImg\"></img>\n</div>\n```\n\n如果按照以前的做法，就是使用 动态class 的方式去玩完成这个功能，但是现在有 `:has()`可以通过 css 的方式去完成这件事~\n\n```css\n    .container {\n    font-size: 20px;\n}\n    .container:has(img) {\n    font-size: 12px;\n}\n\n或者\n    .container:has(.test-img) {\n    font-size: 12px;\n}\n```\n\n### 组合使用\n\n现在又有两个场景\n\n*   判断容器有没有**子img**，有的话字体设置为 12px（上面的例子是后代选择器，不是子选择器）\n*   判断容器有没有一个小相邻的img，有的话设置字体颜色为 red\n\n我们可以这么去实现：\n\n```css\n    .container:has(>img) {\n    font-size: 12px;\n}\n\n    .container:has(+img) {\n    color: red;\n}\n```\n\n再来一个场景，当我 hover 到 子img 上时，我想要让 container 的字体变粗，可以这么去使用~\n\n```css\n    .container:has(>img:hover) {\n    color: red;\n}\n```\n\n### 兼容性\n\n还是有一些浏览器不支持\n\n![image.png](/images/jueJin/5e1b3c16f03249b.png)\n\n结语 & 加学习群 & 摸鱼群\n---------------\n\n我是林三心\n\n*   一个待过**小型toG型外包公司、大型外包公司、小公司、潜力型创业公司、大公司**的作死型前端选手；\n*   一个偏前端的全干工程师；\n*   一个不正经的掘金作者；\n*   一个逗比的B站up主；\n*   一个不帅的小红书博主；\n*   一个喜欢打铁的篮球菜鸟；\n*   一个喜欢历史的乏味少年；\n*   一个喜欢rap的五音不全弱鸡\n\n如果你想一起学习前端，一起摸鱼，一起研究简历优化，一起研究面试进步，一起交流历史音乐篮球rap，可以来俺的摸鱼学习群哈哈，点这个，有7000多名前端小伙伴在等着一起学习哦 --> [摸鱼沸点](https://juejin.cn/pin/7035153948126216206 \"https://juejin.cn/pin/7035153948126216206\")\n\n![image.png](/images/jueJin/f4329c0999644b1.png)",
	"selfDefined": "likes:29,comments:0,collects:46,likes:2655"
}