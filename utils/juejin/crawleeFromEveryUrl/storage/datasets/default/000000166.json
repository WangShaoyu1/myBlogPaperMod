{
	"title": "「百毒不侵(二)」戏说 “浏览器渲染”",
	"author": "Sunshine_Lin",
	"publishTime": "2021-04-26",
	"readTime": "阅读10分钟",
	"tags": "[\"前端\",\"面试中文技术社区\",\"前端开发社区\",\"前端技术交流\",\"前端框架教程\",\"JavaScript 学习资源\",\"CSS 技巧与最佳实践\",\"HTML5 最新动态\",\"前端工程师职业发展\",\"开源前端项目\",\"前端技术趋势\"]",
	"description": "主角介绍（模块介绍） 康熙（浏览器） 说起咱们的康熙大帝啊，那可就牛逼了，擒鳌拜，平三番，远征葛尔丹。但是也不耽误他风流啊。“九子夺嫡”，说白了就是九个臭小子互相干架争自己老子的皇位，那也怪不得这些臭",
	"article": "> ![image.png](/images/jueJin/087522b8cee549a.png)\n\n> 大家好，林三心又来了。看了十几遍`《康熙王朝》`和`《雍正王朝》`，今天，就给大家讲讲`“九龙夺嫡”`的那些事，顺便讲讲`浏览器渲染`（其实是讲`浏览器渲染`，顺便讲讲`“九龙夺嫡”`，嘿嘿），觉得讲得好记得给个`赞`哦。\n\n> 毕竟，我也是一个有梦想的作者呢！\n\n![image.png](/images/jueJin/1e2bc201ae554a2.png)\n\n主角介绍（模块介绍）\n----------\n\n> 请记住对应的关系哦，有利于后面更好地理解模块之间的关系\n\n### 康熙（浏览器）\n\n说起咱们的康熙大帝啊，那可就牛逼了，擒鳌拜，平三番，远征葛尔丹。但是也不耽误他风流啊。“九子夺嫡”，说白了就是九个臭小子互相干架争自己老子的皇位，那也怪不得这些臭小子啊，谁叫康熙大帝生那么多呢？当然，九子中最突出的那几个分别是`大阿哥胤禔(HTML解析器)，老三胤祉（绘图模块），老四胤禛（JS引擎），老八胤禩（CSS解析器），老十三（布局Layout模块）`\n\n![image.png](/images/jueJin/b50ad2cff3544aa.png)\n\n### 大阿哥（HTML解析器）\n\n*   性格：康熙的大儿子，身强力壮，喜欢打仗，就是没啥脑子（打仗还被俘虏过，丢人啊）\n*   技能：只解析`HTML标签`，顺便解析内联`style标签`里的样式，构建`DOM树`\n\n### 八阿哥（CSS解析器）\n\n*   性格：康熙的八儿子，表面工作做得很漂亮（每天都在学他老爸，却学的最不像）\n*   技能：解析`link`标签里的外联漂亮样式，构建`CSS树`\n\n### 四阿哥（JS引擎）\n\n*   性格：康熙的四儿子，最有脑子的儿子，是个腹黑男（后来的雍正帝）\n*   技能：暗地里操纵各种`样式`和`DOM节点`（增删改查或者绑定事件）\n\n### 十三阿哥（布局Layout模块）\n\n*   性格：直来直去，豪爽，对各位兄弟都很仗义（这么仗义，不适合做皇帝）\n*   技能：把`DOM树`和`CSS树`合并，并制成一张`布局图纸`（不负责渲染，只提供图纸）\n\n### 三阿哥（绘图模块）\n\n*   性格：文人一个，好书画，画的一手好画啊（满人是马背上的民族，能将皇位传给你这个文人才怪）\n*   技能：接过老十三手中的`图纸`，并`绘制`出来给大伙看\n\n大致渲染过程\n------\n\n![image.png](/images/jueJin/c7336ff8cf704a2.png)\n\n1.  大阿哥（HTML解析器）遇到HTML标签就解析，并构造出DOM树\n2.  八阿哥（CSS解析器）将link标签里的CSS样式解析，并构建CSS树\n3.  大阿哥和八阿哥把各自的DOM树和CSS树交给四阿哥（JS引擎）\n4.  四阿哥（JS引擎）处理script里的js代码，并根据js代码，完成绑定事件，修改CSS树和DOM树等操作\n5.  十三阿哥（布局Layout模块）将修改后的CSS树和DOM树合成一个渲染树，并设计出布局图纸，交给三阿哥（绘图模块）\n6.  康熙（浏览器）请求各种图片资源，音频资源等等，一齐交给三阿哥\n7.  三阿哥（绘图模块）可是画画高手啊，马上根据这张图纸并且皇阿玛给的素材，画出整个页面给大伙看\n\n各位阿哥们之间的关系（模块之间的关系）\n-------------------\n\n> 看以下内容之前，大家要先明白一个道理：`解析`和`渲染`是两个过程，`解析`了不一定会`渲染`（也就是你还看不到页面效果），`渲染`了说明`解析`完了，这就好比：你有了钱（`解析`）不一定会去买别墅（`渲染`），但是如果你买了别墅（`渲染`）那说明你是真的有钱（`解析`）\n\n### HTML解析器\n\n```js\n<style>\n// 6万行css样式\n.box { background: red } // 最后一行\n</style>\n<div class=\"box\"></div>\n<div></div>\n<div></div>\n<div></div>\n```\n\n> *   问： HTML解析器负责解析`HTML标签`，顺便解析内联`style标签`里的样式，那么问题来了：style标签里有6万多行样式，会因为解析得太慢，而导致后面的div标签都无法解析并且渲染吗？\n\n> *   答： `不会`，HTML解析器是`异步解析`的，并且`不`阻塞`渲染`。大阿哥（HTML解析器）从上往下走，碰到了style标签，发现里面实在是太多样式了，判断需要解析很久，便派了四个小兵，先去解析下面的四个div标签并先渲染出来，提高效率。\n\n> *   造成的问题： 由于style里太多样式，所以小兵们解析渲染div标签完，大阿哥却还未解析完style里的样式，所以class=\"box\"的div标签先渲染出来（无样式），等大阿哥解析完style标签，才会把.box的样式赋给这个渲染出来的div标签，这就导致了这个div标签在页面上出现了`无样式 -> 有样式`的效果，也就是所谓的`闪屏现象`\n\n> *   如何解决问题： 少用style内联标签，大阿哥要带兵解析HTML已经够累了，你还让他去解析style标签，不造成'闪屏现象'才怪\n\n### HTML解析器和CSS解析器\n\n```js\n// index.css里\n// 6万行css样式\n.box { background: red } // 最后一行\n\n\n// html代码\n<link href=\"index.css\"></link> // 引入\n<div class=\"box\"></div>\n<div></div>\n<div></div>\n<div></div>\n```\n\n> *   问： CSS解析器负责解析`link`标签里的外联样式，那么问题来了：link标签外联样式有6万多行，会因为解析得太慢，而导致后面的div标签都无法解析并且渲染吗？\n\n> *   答： `不会`阻塞后面div标签的`解析`，但是`会`阻塞后边div标签的`渲染`，也就是说，`CSS解析器`在解析link标签里这6万行样式的同时，`HTML解析器`已经带了几个小兵去把下面的div标签全解析了，但只是解析了，并未渲染出来，等到`CSS解析器`把6万行样式解析完，再一次性合并`CSS树`和`DOM树`并渲染到页面上去\n\n> *   为什么： 因为这么做可以避免`闪屏现象`并`提高渲染性能`。上面说了`闪屏现象`就是页面上出现了`无样式 -> 有样式`的效果，体验很差，所以如何避免呢？最好的办法就是等到`最终的DOM树`与`最终的CSS树`结合完，再一次性渲染上去，这样页面就不会出现`无样式 -> 有样式`这样的问题了。多次的渲染现在变成了一次性渲染，那自然是提高了渲染的性能。\n\n> *   造成的问题： 如果CSS解析器解析的太慢，那么页面就一直无法完成最终渲染，也就会出现一小段时间`白屏现象`\n\n> *   如何解决问题： 核心就是加快外联样式的加载速度：\n> \n> 1.  使用CDN节点进行外部资源加速\n> 2.  对外部样式文件进行压缩（使用打包工具，例如webpack，gulp等）\n> 3.  优化你的样式文件的代码\n\n### HTML解析器和JS引擎\n\n```js\n// index.js文件\n// 6万多行代码，对dom进行了一系列操作\n\n// html页面\n<script src=\"index.js\"></script> // 引入\n<div id=\"box\"></div>\n<div></div>\n<div></div>\n<div></div>\n```\n\n> *   问： JS引擎暗地里操纵各种`样式`和`DOM节点`（增删改查或者绑定事件），会因为执行script标签的引用代码太慢，而导致后面的div标签都无法解析并且渲染吗？\n\n> *   答： `会`阻塞后面div标签的解析和渲染，等到`JS引擎`把所有JS代码`加载`并`执行`完成，才会放`HTML解析器`往下解析DOM，并且一次性渲染出来\n\n> *   为什么： 举个反例，在四阿哥（JS引擎）缓慢地执行这6万行代码同时，康熙命令大阿哥（HTML解析器）不要管四阿哥，大胆地往下解析HTML，大阿哥马上带着自己的小兵们马上解析完所有div标签，然后满怀成就感地想跑去康熙面前请功领赏，而此时四阿哥还未执行完他的JS代码，大阿哥跑啊跑啊，跑到康熙面前的一瞬间，四阿哥刚好执行完JS代码，并把大阿哥刚刚解析完的所有标签都删了（毕竟四阿哥拥有操控DOM的能力啊），康熙一看，雷霆大怒：“WDNMD!!!老大，你不是说都解析好了吗？在哪呢？？敢骗老子？”对着大阿哥一顿臭骂。大阿哥心想：“老四，WDNMD，敢把老子解析的成功给删了！”后来康熙得知后，便制定了一套规则：以后四阿哥先执行代码，然后再派大阿哥去解析HTML，这样大阿哥就不会做无用功啦！\n\n> *   问题： 如果JS代码执行报错或者执行过慢，那么后面的HTML就会永远无法解析了，那么页面有可能就一直是一片空白。\n\n> *   如何解决问题： 核心就是改变JS代码的执行顺序，或者优化JS执行速度：\n> \n> 1.  `<script async></script>` 加上`async`属性，JS代码会异步加载并执行（多script标签情况下，并不会按着script在页面中的顺序来执行，而是谁先加载完谁执行）\n> 2.  `<script defer></script>` 加上`defer`属性，JS代码会异步加载（如果有多个设置了defer的script标签存在，则会按照顺序执行所有的script，会在`DOMCotentLoaded`前执行）\n> 3.  把script标签放在页面尾部\n> 4.  优化JS代码，加快执行速度\n\n### CSS解析器和JS引擎\n\n> 跟上面`HTML解析器和JS引擎`同理，只不过是`DOM树`和`CSS树`的区别\n\n### JS引擎和JS引擎\n\n```js\n<script src=\"jquery.js\"></script>\n<script src=\"bootstrap.js\"></script>\n```\n\n> 会先执行完上边script再执行下边script，因为有可能下边的script依赖于上边的script代码（上方例子，bootstrap依赖于jquery）\n\n```js\n<script src=\"index1.js\"></script>\n<script src=\"index2.js\"></script>\n<div></div>\n```\n\n> 会先执行完上边script再执行下边script，因为上方script可能修改dom，下方也修改dom，那肯定是排队一个一个来，不然就乱套了\n\n```js\n<script src=\"index1.js\" defer></script>\n<script src=\"index2.js\" defer></script>\n```\n\n> 会异步加载，也就是下方可能比上方加载更快，但是最终代码执行还是会按顺序由上往下，并且在DOMContentLoaded之前执行\n\n```js\n<script src=\"index1.js\" async></script>\n<script src=\"index2.js\" async></script>\n```\n\n> 会异步加载并异步执行，也就是谁先加载完谁就先执行，不按顺序\n\n### 一点点疑问\n\n> 问：为什么CSS解析器只能阻塞HTML渲染但不能阻塞HTML解析，但JS引擎却能同时阻塞HTML的解析和渲染呢？\n\n> 答：因为CSS并不能操作DOM啊，所以也没必要阻塞HTML解析。但是JS引擎就不一样了，能随意操作DOM，所以需要阻塞HTML解析，避免HTML解析器做无用功。\n\nDOMContentLoaded和onload\n-----------------------\n\n> 再来看看渲染大致过程:\n\n1.  大阿哥（HTML解析器）遇到HTML标签就解析，并构造出DOM树\n2.  八阿哥（CSS解析器）将link标签里的CSS样式解析，并构建CSS树\n3.  大阿哥和八阿哥把各自的DOM树和CSS树交给四阿哥（JS引擎）// `DOMContentLoaded`发生在这\n4.  四阿哥（JS引擎）处理script里的js代码，并根据js代码，完成绑定事件，修改CSS树和DOM树等操作\n5.  十三阿哥（布局Layout模块）将修改后的CSS树和DOM树合成一个渲染树，并设计出布局图纸，交给三阿哥（绘图模块）\n6.  康熙（浏览器）请求各种图片资源，音频资源等等，一齐交给三阿哥\n7.  三阿哥（绘图模块）可是画画高手啊，马上根据这张图纸并且皇阿玛给的素材，画出整个页面给大伙看 // `onload`发生在这\n\n结语\n--\n\n> `JavaScript`是浏览器中运行的大脑，最能得到浏览器（康熙）青睐的肯定是JavaScript（四阿哥），所以最后肯定是`四阿哥胤禛`胜出啦，恭喜`雍正帝`！\n\n> 雍正也是我很喜欢的一位，`推行新政`，`火耗归公`，`摊丁入亩`，`士绅一体当差一体纳粮`，`派年羹尧平定罗布赞旦增阿拉布坦叛乱`等等，都很出色！\n\n> 感兴趣的可以去看看`《雍正王朝》`，和`《大明王朝》`并列为中国古装剧的巅峰之作！",
	"selfDefined": "likes:105,comments:0,collects:32,likes:5979"
}