{
	"title": "✨突发奇想！Vue3 的上下无限滚动可以这么实现？✨",
	"author": "Sunshine_Lin",
	"publishTime": "2024-06-19",
	"readTime": "阅读4分钟",
	"tags": "[\"前端\",\"Vue.js中文技术社区\",\"前端开发社区\",\"前端技术交流\",\"前端框架教程\",\"JavaScript 学习资源\",\"CSS 技巧与最佳实践\",\"HTML5 最新动态\",\"前端工程师职业发展\",\"开源前端项目\",\"前端技术趋势\"]",
	"description": "大家好，我是林三心，用最通俗易懂的话讲最难的知识点是我的座右铭，基础是进阶的前提是我的初心~ 最近有一个需求，需要在页面中做一个垂直方向的无限滚动，效果基本为如下，这个滚动是一直在持续的，不断循",
	"article": "前言\n--\n\n大家好，我是林三心，用最通俗易懂的话讲最难的知识点是我的座右铭，基础是进阶的前提是我的初心~\n\n最近有一个需求，需要在页面中做一个垂直方向的**无限滚动**，效果基本为如下，这个滚动是一直在持续的，不断循环\n\n![wxgd-2.gif](/images/jueJin/03a7099bf35f4b4.png)\n\n这个效果挺有意思的，实现起来不难，所以分享一下~\n\n实现\n--\n\n### 基础页面\n\n首先准备一下基础的页面，之所以给容器设置 `overflow:hidden` 是为了把滚动条给去掉，因为我们并不需要滚动条\n\n![image-2.png](/images/jueJin/46e409734ede4cc.png)\n\n可以看出有些项是不在容器可视范围内的，且每一项的高度是 `22px`（每一项的高度可以自己定，我这里就用 `22px` 来进行示范）\n\n![image-1.png](/images/jueJin/6d56998c641f4b5.png)\n\n### 滚动起来\n\n接下来得让这个容器滚动起来，那要怎么滚动呢？可以使用 `scrollTo` 这个方法来进行滚动~并且为了持续保持滚动，可以使用 `requestAnimationFrame` 来不断进行\n\n每次都对 `top` 进行递增，保证容器不断向上滚动\n\n![image-3.png](/images/jueJin/bb5d5252e86d4cc.png)\n\n但是我们可以看到，虽然`top` 一直在递增，但是滚动到最后就不动了！这是因为这个时候已经滚动到最底部了，那么自然就滚动不了了\n\n![wxgd-3.gif](/images/jueJin/ab11f2018e184ef.png)\n\n### 永远滚动不完？\n\n上面为啥滚到底部就滚不动了呢？因为到最底部了，所以滚不动了呀~\n\n那么想要**永远滚不完**应该怎么办呢？其实有一种办法，那就是**永远到不了底**，那要怎么实现呢？其实很简单，只要让**数据不断增加**就行~\n\n怎么让**数据不断增加**呢，并且增加的规则是什么呢？其实很简单，我们每次滚上去一项，就拷贝这一项`push` 到列表数据末端，这样就能做到数据**永远滚不完**\n\n![image-4.png](/images/jueJin/f8bd1c2fb7d8424.png)\n\n下面是代码实现，为什么是除以`22` 呢？因为每一项的高度是 `22px`\n\n![image-5.png](/images/jueJin/b856ffc9ac3a4e2.png)\n\n现在可以达到想要的无限滚动效果\n\n![wxgd-2.gif](/images/jueJin/1cb6675b105c4fa.png)\n\n### 数据不断增长？\n\n但是其实上面的做法还是有缺点的，因为数据不断地`push`也就是不断地增加，如果页面保持一段时间的话，会大大占用内存，导致页面卡顿！！\n\n所以我们可以在适当的时间点，去**初始化数据**，也就是把数据恢复到一开始样子，这样就能避免数据不断增加了~\n\n那么应该在什么时机去初始化数据呢？并且要怎么初始化才能让用户察觉不出来呢？**怎么做到无缝衔接进行初始化呢？**\n\n通过一个图告诉大家~其实最好的时机就是在**刚好滚动完一轮的时候**\n\n![image-7.png](/images/jueJin/0f126388aaff49c.png)\n\n最终代码实现如下~\n\n![image-8.png](/images/jueJin/34db3f0271e246e.png)\n\n最终实现效果\n\n![wxgd-2.gif](/images/jueJin/8bf93ead2eca453.png)\n\n结语 & 加学习群 & 摸鱼群\n---------------\n\n我是林三心\n\n*   一个待过**小型toG型外包公司、大型外包公司、小公司、潜力型创业公司、大公司**的作死型前端选手；\n*   一个偏前端的全干工程师；\n*   一个不正经的掘金作者；\n*   一个逗比的B站up主；\n*   一个不帅的小红书博主；\n*   一个喜欢打铁的篮球菜鸟；\n*   一个喜欢历史的乏味少年；\n*   一个喜欢rap的五音不全弱鸡\n\n如果你想一起学习前端，一起摸鱼，一起研究简历优化，一起研究面试进步，一起交流历史音乐篮球rap，可以来俺的摸鱼学习群哈哈，点这个，有7000多名前端小伙伴在等着一起学习哦 --> [摸鱼沸点](https://juejin.cn/pin/7035153948126216206 \"https://juejin.cn/pin/7035153948126216206\")\n\n完整代码\n----\n\n```html\n<template>\n<div class=\"scroll-container\" ref=\"scrollRef\">\n<h1 v-for=\"(item, index) in list\" :key=\"index\">{{ item.title }}</h1>\n</div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, onMounted } from 'vue';\n\n// 容器的 dom 节点\nconst scrollRef = ref<HTMLDivElement | null>(null);\n// 模拟列表数据\n    const dataSource = new Array(10).fill(0).map((_, index) => ({\n    title: `这是一条信息${index}`,\n    }));\n    const list = ref([...dataSource]);\n    \n    // 记录原始数据的长度\n    const len = dataSource.length;\n        onMounted(() => {\n        // 滚动的距离\n        let top = 0;\n        // 索引\n        let index = 0;\n        \n            const scroll = () => {\n            // 垂直方向滚动\n                scrollRef.value?.scrollTo({\n                top: top++,\n                });\n                    if (top % 22 === 0) {\n                    // 哪一项滚不见了，就拿这一项 push 到列表中\n                    const target = list.value[index];\n                    list.value.push(target!);\n                    \n                        if (index < len - 1) {\n                        // 不断递增\n                        index++;\n                            } else {\n                            // 刚好滚动完一轮，重新来过，初始化数据\n                            top = 0;\n                            index = 0;\n                                scrollRef.value?.scrollTo({\n                                top: 0,\n                                });\n                                list.value = [...dataSource];\n                            }\n                        }\n                        // 不断滚动\n                        requestAnimationFrame(scroll);\n                        };\n                        \n                        scroll();\n                        });\n                        </script>\n                        \n                        <style lang=\"less\">\n                            .scroll-container {\n                            //   防止有滚动条出现\n                            overflow: hidden;\n                            height: 150px;\n                        }\n                        </style>\n```",
	"selfDefined": "likes:28,comments:5,collects:53,likes:2016"
}