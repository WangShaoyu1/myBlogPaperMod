{
	"title": "总结 Vue3 组件管理 12 种高级写法，灵活使用才能提高效率",
	"author": "Sunshine_Lin",
	"publishTime": "2024-08-20",
	"readTime": "阅读4分钟",
	"tags": "[\"前端\",\"Vue.js中文技术社区\",\"前端开发社区\",\"前端技术交流\",\"前端框架教程\",\"JavaScript 学习资源\",\"CSS 技巧与最佳实践\",\"HTML5 最新动态\",\"前端工程师职业发展\",\"开源前端项目\",\"前端技术趋势\"]",
	"description": "前言 大家好，我是林三心，用最通俗易懂的话讲最难的知识点是我的座右铭，基础是进阶的前提是我的初心~ SFC 单文件组件 顾名思义，就是一个vue文件只写一个组件 模板写法 如果这个组件想要在别的组件",
	"article": "前言\n--\n\n大家好，我是林三心，用最通俗易懂的话讲最难的知识点是我的座右铭，基础是进阶的前提是我的初心~\n\nSFC 单文件组件\n---------\n\n顾名思义，就是一个`.vue`文件只写一个组件\n\n### 模板写法\n\n![image.png](/images/jueJin/3b047f1067ff4bc.png)\n\n如果这个组件想要在别的组件里使用，就需要在另一个`.vue`中引入和使用、复用\n\n### h函数写法\n\n使用 `defineComponent + h` 去进行组件编写\n\n![image-18.png](/images/jueJin/d9babec4cd0e431.png)\n\n### JSX/TSX写法\n\n使用 `defineComponent + JSX/TSX` 去进行组件编写\n\n```ts\npnpm i @vitejs/plugin-vue-jsx -D\n```\n\n安装完毕后，需要在 `vite.config.ts` 中去进行插件配置\n\n![](/images/jueJin/9e31580c891e405.png)\n\n![](/images/jueJin/d42a4d7a775c478.png)\n\n![image-19.png](/images/jueJin/1d2c2a66d14947f.png)\n\n### 引入使用\n\n![image-17.png](/images/jueJin/142bd5c64fe04f8.png)\n\n单文件多复用模板\n--------\n\n如果你想要在一个单文件组件中，定义一些可复用的模板代码的话，可以试试以下的方法\n\n### createReusableTemplate\n\n![image-4.png](/images/jueJin/f2ed57601624459.png)\n\n这是 `VueUse` 提供的一个 Hooks\n\n> 文档地址：[vueuse.org/core/create…](https://link.juejin.cn?target=https%3A%2F%2Fvueuse.org%2Fcore%2FcreateReusableTemplate%2F \"https://vueuse.org/core/createReusableTemplate/\")\n\n使用方式如下：\n\n![image-2.png](/images/jueJin/33612bf8f2bf4c7.png)\n\n### namedTemplate\n\n![image-3.png](/images/jueJin/09afc17f308e493.png)\n\n`namedTemplate` 是 `Vue Macros` 推出的一个前瞻性的 Vue3 特性\n\n虽然`Vue Macros`里的特性暂时还不是正式版特性，但是以后有很大概率会成为正式版特性\n\n我们也可以对 Vue3 项目进行配置，使得项目可以使用 `Vue Macros`的特性\n\n> 文档地址：[vue-macros.dev/zh-CN/featu…](https://link.juejin.cn?target=https%3A%2F%2Fvue-macros.dev%2Fzh-CN%2Ffeatures%2Fnamed-template.html \"https://vue-macros.dev/zh-CN/features/named-template.html\")\n\n使用方式如下：\n\n![image-5.png](/images/jueJin/c636c5fd4f8a4a5.png)\n\n通用的多组件管理\n--------\n\n你可以将多个逻辑紧密或者类型相似的组件，放置在同一个`ts`文件或`Hooks`中去管理，在使用到这些组件的地方去引入即可使用~\n\n### FunctionalComponent + h\n\n在某一个页面中，如果你有一些组件，它们逻辑比较紧密联系，那你可以使用`FunctionalComponent + h`将他们封装在同一个 Hooks 中，比如下面的例子\n\n![vue-comp-1.gif](/images/jueJin/14b5937cc2e8437.png)\n\n![image-6.png](/images/jueJin/bf895e426587415.png)\n\n![image-7.png](/images/jueJin/a9726eda6cd44a2.png)\n\n或者你不想写在`Hooks`中，你也完全可以写在最外层\n\n![image-8.png](/images/jueJin/0004d8a3a7ec455.png)\n\n只不过引入方式就要做一些改变\n\n![image-9.png](/images/jueJin/3ae972e9096b4c3.png)\n\n### defineComponent + h\n\n`defineComponent + h` 的写法也是差不多的道理\n\n你可以使用 `Hooks` 去封装，如下：\n\n![image-10.png](/images/jueJin/315bc55829ee428.png)\n\n或者你也可以直接放在`ts`文件最外层\n\n![image-11.png](/images/jueJin/c6a5f92706ab45e.png)\n\n也是同样的效果：\n\n![vue-comp-1.gif](/images/jueJin/5c3154668aec468.png)\n\n### defineComponent + JSX/TSX\n\n可能会有人觉得 `h` 写起来很麻烦，嵌套太多的话写起来会很难受，那我们其实也可以用`JSX/TSX`去替代它\n\n同样你也可以将多个组件以`JSX/TSX`的形式，维护在同一个`tsx`文件中\n\n```ts\npnpm i @vitejs/plugin-vue-jsx -D\n```\n\n安装完毕后，需要在 `vite.config.ts` 中去进行插件配置\n\n![](/images/jueJin/2fe19267c2374a3.png)\n\n![](/images/jueJin/bd70b5a90fc047e.png)\n\n配置完就可以写 TSX 啦！！！\n\n![image-12.png](/images/jueJin/10a4fc7788174cf.png)\n\n同样你也可以写在外层（这里就不写了，同理）\n\n也是同样的效果：\n\n![vue-comp-1.gif](/images/jueJin/39666aa77d2c416.png)\n\nVue Macros 组件 API\n-----------------\n\n`Vue Macros`里的特性暂时还不是正式版特性，但是以后有很大概率会成为正式版特性\n\n> 文档：[vue-macros.dev/zh-CN/](https://link.juejin.cn?target=https%3A%2F%2Fvue-macros.dev%2Fzh-CN%2F \"https://vue-macros.dev/zh-CN/\")\n\n### defineRender + JSX/TSX\n\n> 文档地址：[vue-macros.dev/zh-CN/macro…](https://link.juejin.cn?target=https%3A%2F%2Fvue-macros.dev%2Fzh-CN%2Fmacros%2Fdefine-render.html%23definerender \"https://vue-macros.dev/zh-CN/macros/define-render.html#definerender\")\n\n`defineRender`跟 `defineComponent` 的区别在于，`defineRender`只需要关心最终的DOM结构，不需要管状态的维护\n\n![image-13.png](/images/jueJin/f6afd8cd3c3c4a3.png)\n\n### setupSFC + JSX/TSX\n\n> 文档地址：[vue-macros.dev/zh-CN/macro…](https://link.juejin.cn?target=https%3A%2F%2Fvue-macros.dev%2Fzh-CN%2Fmacros%2Fsetup-sfc.html%23setupsfc \"https://vue-macros.dev/zh-CN/macros/setup-sfc.html#setupsfc\")\n\n想使用 `setupSFC` 的特性，需要建一个`.setup.tsx/.setup.jsx` 文件，跟普通的 `tsx/jsx` 文件相比，每次引入`.setup.tsx/.setup.jsx`这个文件，都是一个新的组件实例，状态并不会共享\n\n![image-14.png](/images/jueJin/4c48879dacae4e9.png)\n\n### setupComponent + JSX/TSX\n\n> 文档地址：[vue-macros.dev/zh-CN/macro…](https://link.juejin.cn?target=https%3A%2F%2Fvue-macros.dev%2Fzh-CN%2Fmacros%2Fsetup-component.html%23setupcomponent \"https://vue-macros.dev/zh-CN/macros/setup-component.html#setupcomponent\")\n\n`setupComponent` 适合用来管理多组件，可以把多个紧密联系或共用的组件，通过`setupComponent`写在同一个文件或 Hooks 里\n\n`setupComponent`中可以使用`setup`的语法去写逻辑，写起来比`defineComponent`简洁很多\n\n![image-15.png](/images/jueJin/d91e11b39d70401.png)\n\n同理，你想写在文件外层也行~这里就不具体写了\n\nVine\n----\n\n![image-16.png](/images/jueJin/003e7aec62a64ca.png)\n\n> 文档：[vue-vine.dev/](https://link.juejin.cn?target=https%3A%2F%2Fvue-vine.dev%2F \"https://vue-vine.dev/\")\n\n这个库的作用就是：**让 Vue 组件能通过函数式来定义**\n\n举个例子，我们在平时写一个组件的时候，会通过模板的方式去定义\n\n![image-copy.png](/images/jueJin/31b0fe48e8e749d.png)\n\n但是在使用了 `Vue-Vine`这个库之后，可以使用函数式的方式去定义\n\n![image-11-copy.png](/images/jueJin/6ce94e1e7fd748c.png)\n\n翻看了一下`Vue-Vine`的官方文档，总结出`Vue-Vine`这个库的初衷是：\n\n*   想要做到像 React JSX 那样的组件定义方式\n*   可以在同个文件里定义多个组件\n*   使得逻辑更加聚合，提高开发效率\n\n总结\n--\n\nVue 的组件有很多写法，合适的场景选择合适的写法，才能更好地提高开发效率~而不是死定硬背\n\n结语 & 加学习群 & 摸鱼群\n---------------\n\n我是林三心\n\n*   一个待过**小型toG型外包公司、大型外包公司、小公司、潜力型创业公司、大公司**的作死型前端选手；\n*   一个偏前端的全干工程师；\n*   一个不正经的掘金作者；\n*   一个逗比的B站up主；\n*   一个不帅的小红书博主；\n*   一个喜欢打铁的篮球菜鸟；\n*   一个喜欢历史的乏味少年；\n*   一个喜欢rap的五音不全弱鸡\n\n如果你想一起学习前端，一起摸鱼，一起研究简历优化，一起研究面试进步，一起交流历史音乐篮球rap，可以来俺的摸鱼学习群哈哈，点这个，有10000多名前端小伙伴在等着一起学习哦 --> [摸鱼沸点](https://juejin.cn/pin/7035153948126216206 \"https://juejin.cn/pin/7035153948126216206\")",
	"selfDefined": "likes:133,comments:24,collects:228,likes:7599"
}