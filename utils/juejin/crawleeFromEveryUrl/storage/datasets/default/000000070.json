{
	"title": "领导：你做的网页真难看，能不能让网页直接【朗读】给我听？",
	"author": "Sunshine_Lin",
	"publishTime": "2023-08-15",
	"readTime": "阅读3分钟",
	"tags": "[\"前端中文技术社区\",\"前端开发社区\",\"前端技术交流\",\"前端框架教程\",\"JavaScript 学习资源\",\"CSS 技巧与最佳实践\",\"HTML5 最新动态\",\"前端工程师职业发展\",\"开源前端项目\",\"前端技术趋势\"]",
	"description": "前言 大家好，我是林三心，用最通俗易懂的话讲最难的知识点是我的座右铭，基础是进阶的前提是我的初心。 领导想听网页内容~ 这几天，领导找到了我们，说能不能在现阶段公司内部的一些资讯类网页系统，加一个“朗",
	"article": "前言\n--\n\n大家好，我是林三心，用最通俗易懂的话讲最难的知识点是我的座右铭，基础是进阶的前提是我的初心。\n\n![](/images/jueJin/4e816831440945f.png)\n\n领导想听网页内容~\n---------\n\n这几天，领导找到了我们，说能不能在现阶段公司内部的一些资讯类网页系统，加一个“朗读”功能，把这些网页上的咨询朗读给他们听，我觉得这个要求很合理，毕竟现阶段很多的大平台也都设置了朗读功能，所以我们马上进行了开发~\n\n![](/images/jueJin/811a9a22c1b042e.png)\n\n微信也有类似功能\n--------\n\n前几天我在微信公众号的文章那里，发现了一个东西，点进去之后，能把整篇文章朗读给你听~~ 所以我想现阶段JavaScript应该有提供这样的 API 来完成这个功能吧~~\n\n![](/images/jueJin/b6206d80f6dd47a.png)\n\nspeechSynthesis & SpeechSynthesisUtterance\n------------------------------------------\n\n于是我去 MDN 上查了一下，还真有，我查到了两个东西 `speechSynthesis、SpeechSynthesisUtterance`，我们可以简单理解这两个东西：\n\n*   \\*\\*SpeechSynthesisUtterance：\\*\\*生成朗读的配置信息，比如语言、内容、语速等\n*   \\*\\*speechSynthesis：\\*\\*根据上面生成的配置，进行朗读\n\n他们的用法也是非常的简单，简直就是无脑上手！！！\n\n![](/images/jueJin/861bf57b60504d1.png)\n\n![](/images/jueJin/5719fa83db35439.png)\n\n### 朗读 & 取消朗读\n\n我们先来看看应该如何去播放一个文本，首先我们需要创建一个 `SpeechSynthesisUtterance` 的实例，并且设置一些属性，比如：\n\n*   \\*\\*text：\\*\\*朗读的文本\n*   \\*\\*lang：\\*\\*朗读的语言\n*   \\*\\*rate：\\*\\*朗读的语速\n\n接着，我们需要把这个实例，也就是准备好的朗读配置，传入`speechSynthesis`的方法中：\n\n*   \\*\\*speak：\\*\\*开始朗读\n*   \\*\\*cancel：\\*\\*取消朗读\n\n```html\n<template>\n<div style=\"width: 300px; margin-left: 100px; margin-top: 100px\">\n<div></div>\n<el-button @click=\"startSpeech\" type=\"primary\"> 朗读 </el-button>\n<el-button @click=\"cancel\"> 取消朗读 </el-button>\n</div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, onMounted } from 'vue'\n\nconst text = `我是林三心，React一个待过小型toG型外包公司、大型外包公司、小公司、潜力型创业公司、大公司的作死型前端选手；\n一个偏前端的全干工程师；\n一个不正经的掘金作者；\n逗比的B站up主；\n不帅的小红书博主；\n喜欢打铁的篮球菜鸟；\n喜欢历史的乏味少年；\n喜欢rap的五音不全弱鸡\n`\n\n    onMounted(() => {\n    initSpeechMessage()\n    })\n    \n    const speechMessage = ref<null | SpeechSynthesisUtterance>(null)\n    const synth = window.speechSynthesis\n    \n        const initSpeechMessage = () => {\n        const utterance = new SpeechSynthesisUtterance()\n        utterance.text = text // 内容\n        utterance.lang = 'zh-CN' // 设置语言为中文\n        utterance.rate = 1.0 // 设置语速\n        speechMessage.value = utterance\n    }\n    \n        const startSpeech = () => {\n        if (!speechMessage.value) return\n        synth.speak(speechMessage.value)\n    }\n    \n        const cancel = () => {\n        synth.cancel()\n    }\n    </script>\n```\n\n### 暂停朗读 & 继续朗读\n\n同时他也支持暂停、继续的功能，需要用到`speechSynthesis`的两个方法：\n\n*   \\*\\*pause：\\*\\*暂停朗读\n*   \\*\\*resume：\\*\\*继续朗读\n\n```js\n<el-button @click=\"pauseSpeech\"> 暂停 </el-button>\n<el-button @click=\"resumeSpeech\"> 继续 </el-button>\n\n    const pauseSpeech = () => {\n    synth.pause()\n}\n\n    const resumeSpeech = () => {\n    synth.resume()\n}\n```\n\n### 播放进度\n\n我们可以使用监听 `SpeechSynthesisUtterance` 实例身上的 `boundary` 事件，来监听播放进度\n\n![](/images/jueJin/553a364ed30847e.png)\n\n```js\n<el-progress :percentage=\"progress\" />\n\nconst progress = ref(0)\n\n    const initSpeechMessage = () => {\n    const utterance = new SpeechSynthesisUtterance()\n    utterance.text = text\n    utterance.lang = 'zh-CN' // 设置语言为中文\n    utterance.rate = 1.0 // 设置语速\n    // 添加 onboundary 事件监听器以获取播放进度\n    +    utterance.addEventListener('boundary', onBoundary)\n    speechMessage.value = utterance\n}\n\n    const onBoundary = (event) => {\n    if (!speechMessage.value) return\n    const charIndex = event.charIndex\n    const charLength = speechMessage.value.text.length\n    const percentage = Math.round((charIndex / charLength) * 1000) / 10\n    \n    // 更新播放进度展示\n    progress.value = percentage\n}\n```\n\n### 记得 cancel\n\n当你播放之后，刷新页面，你会发现依旧还在朗读，并没有自动取消，所以，在组件销毁的时候，记得手动执行一次`cancel`\n\n```js\n    const initSpeechMessage = () => {\n    const utterance = new SpeechSynthesisUtterance()\n    utterance.text = text\n    utterance.lang = 'zh-CN' // 设置语言为中文\n    utterance.rate = 1.0 // 设置语速\n    // 添加 onboundary 事件监听器以获取播放进度\n    utterance.addEventListener('boundary', onBoundary)\n    +  window.addEventListener('beforeunload', cancel)\n    speechMessage.value = utterance\n}\n```\n\n### 属性 & 方法\n\n`speechSynthesis、SpeechSynthesisUtterance` 身上的一些有用的方法或者属性，我总的介绍一下\n\n**SpeechSynthesisUtterance**\n\n*   **lang：** 属性，语言\n*   **text：** 属性，内容\n*   **rate：** 属性，语速\n*   **voice：** 属性，声音风格\n*   **volume：** 属性，音量\n*   **boundary：** 播放中监听\n*   **start：** 开始播放监听\n*   **end：** 结束播放监听\n*   **pause：** 暂停播放监听\n*   **resume：** 继续播放监听\n*   **mark：** 触发标记监听\n*   **error：** 报错监听\n\n**speechSynthesis**\n\n*   **paused：** 属性值，暂停时为 true\n*   **pending：** 属性值，语音还没说完时为 true\n*   **speaking：** 属性值，播放时为 true\n*   **speak：** 方法，播放\n*   **pause：** 方法，暂停\n*   **resume：** 方法，继续\n*   **getVoices：** 方法，获取声音风格\n\n结语 & 加学习群 & 摸鱼群\n---------------\n\n我是林三心\n\n*   一个待过**小型toG型外包公司、大型外包公司、小公司、潜力型创业公司、大公司**的作死型前端选手；\n*   一个偏前端的全干工程师；\n*   一个不正经的掘金作者；\n*   一个逗比的B站up主；\n*   一个不帅的小红书博主；\n*   一个喜欢打铁的篮球菜鸟；\n*   一个喜欢历史的乏味少年；\n*   一个喜欢rap的五音不全弱鸡\n\n如果你想一起学习前端，一起摸鱼，一起研究简历优化，一起研究面试进步，一起交流历史音乐篮球rap，可以来俺的摸鱼学习群哈哈，点这个，有7000多名前端小伙伴在等着一起学习哦 --> [摸鱼沸点](https://juejin.cn/pin/7035153948126216206 \"https://juejin.cn/pin/7035153948126216206\")\n\n![image.png](/images/jueJin/0bba35046beb448.png)",
	"selfDefined": "likes:39,comments:0,collects:54,likes:3579"
}