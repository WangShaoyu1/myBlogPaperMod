{
	"title": "有了这25个正则表达式，代码效率提高80%",
	"author": "Sunshine_Lin",
	"publishTime": "2021-10-09",
	"readTime": "阅读3分钟",
	"tags": "[\"前端\",\"JavaScript\",\"正则表达式中文技术社区\",\"前端开发社区\",\"前端技术交流\",\"前端框架教程\",\"JavaScript 学习资源\",\"CSS 技巧与最佳实践\",\"HTML5 最新动态\",\"前端工程师职业发展\",\"开源前端项目\",\"前端技术趋势\"]",
	"description": "本文已参与「掘力星计划」，赢取创作大礼包，挑战创作激励金。 前言 大家好，我是林三心，在日常开发中，正则表达式是非常有用的，正则表达式在每个语言中都是可以使用的，他就跟JSON一样，是通用的。在日常开",
	"article": "本文已参与「[掘力星计划](https://juejin.cn/post/7012210233804079141/ \"https://juejin.cn/post/7012210233804079141/\")」，赢取创作大礼包，挑战创作激励金。\n\n![image.png](/images/jueJin/41ac96018b1248d.png)\n\n前言\n--\n\n大家好，我是林三心，在日常开发中，`正则表达式`是非常有用的，`正则表达式`在每个语言中都是可以使用的，他就跟`JSON`一样，是通用的。在日常开发中，了解一些常用的`正则表达式`，能大大提高你的工作效率，例如\n\n*   字符串的匹配\n*   表单项的格式校验\n\n今天就给大家分享25个开发中常用的正则表达式吧！！！希望大家能提高代码效率！！！\n\n![image.png](/images/jueJin/4f02f525c82b40b.png)\n\n1、手机号码的校验\n---------\n\n```js\nconst phoneReg = /^[1][3,4,5,6,7,8,9][0-9]{9}$/\n\nconst phoneStr1 = '18886233487'\nconsole.log(phoneReg.test(phoneStr1)) // true\n\nconst phoneStr2 = '17283017203897'\nconsole.log(phoneReg.test(phoneStr2)) // false\n```\n\n2、身份证的校验\n--------\n\n```js\nconst sfzReg = /^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/\n\nconst sfzStr1 = '415106199801012130'\nconsole.log(sfzReg.test(sfzStr1)) // true\n\nconst sfzStr2 = '718381298381212183'\nconsole.log(sfzReg.test(sfzStr2)) // false\n```\n\n3、邮箱的校验\n-------\n\n```js\nconst emailReg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\n\nconst emailStrWY = '956666@163.com' // 163邮箱\nconst emailStrQQ = '956666@qq.com' // qq邮箱\nconsole.log(emailReg.test(emailStrWY)) // true\nconsole.log(emailReg.test(emailStrQQ)) // true\n\nconst noEmail = '72873213.com'\nconsole.log(emailReg.test(noEmail)) // false\n```\n\n4、URL的校验\n--------\n\n```js\nconst urlReg = /^((https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/\n\nconst urlStr1 = 'https://haha.sunshine.com/xxx/xxx'\nconsole.log(urlReg.test(urlStr1)) // true\n\nconst urlStr2 = 'sss://haha.sunshine.com/xxx/xxx'\nconsole.log(urlReg.test(urlStr2)) // false\n```\n\n5、IPv4的校验\n---------\n\n```js\nconst ipv4Reg = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/\n\nconst ipv4Str1 = '122.12.56.65'\nconsole.log(ipv4Reg.test(ipv4Str1)) // true\n\nconst ipv4Str2 = '122.12.56.655'\nconsole.log(ipv4Reg.test(ipv4Str2)) // false\n```\n\n6、16进制颜色的校验\n-----------\n\n```js\nconst color16Reg = /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/\n\nconst color16Str1 = '#fff'\nconsole.log(color16Reg.test(color16Str1)) // true\n\nconst color16Str2 = '#1234567'\nconsole.log(color16Reg.test(color16Str2)) // false\n```\n\n7、日期 YYYY-MM-DD\n---------------\n\n```js\nconst dateReg = /^\\d{4}(\\-)\\d{1,2}\\1\\d{1,2}$/\n\nconst dateStr1 = '2021-10-10'\nconsole.log(dateReg.test(dateStr1)) // true\n\nconst dateStr2 = '2021-01-01 1'\nconsole.log(dateReg.test(dateStr2)) // false\n```\n\n8、日期 YYYY-MM-DD hh:mm:ss\n------------------------\n\n```js\nconst dateReg = /^(\\d{1,4})(-|\\/)(\\d{1,2})\\2(\\d{1,2}) (\\d{1,2}):(\\d{1,2}):(\\d{1,2})$/\n\nconst dateStr1 = '2021-10-10 16:16:16'\nconsole.log(dateReg.test(dateStr1)) // true\n\nconst dateStr2 = '2021-10-10 16:'\nconsole.log(dateReg.test(dateStr2)) // false\n```\n\n9、整数的校验\n-------\n\n```js\nconst intReg = /^[-+]?\\d*$/\n\nconst intNum1 = 12345\nconsole.log(intReg.test(intNum1)) // true\n\nconst intNum2 = 12345.1\nconsole.log(intReg.test(intNum2)) // false\n```\n\n10、小数的校验\n--------\n\n```js\nconst floatReg = /^[-\\+]?\\d+(\\.\\d+)?$/\n\nconst floatNum = 1234.5\nconsole.log(floatReg.test(floatNum)) // true\n```\n\n11、保留n位小数\n---------\n\n```js\n    function checkFloat(n) {\n    return new RegExp(`^([1-9]+[\\d]*(.[0-9]{1,${n}})?)$`)\n}\n// 保留2位小数\nconst floatReg = checkFloat(2)\n\nconst floatNum1 = 1234.5\nconsole.log(floatReg.test(floatNum1)) // true\n\nconst floatNum2 = 1234.55\nconsole.log(floatReg.test(floatNum2)) // true\n\nconst floatNum3 = 1234.555\nconsole.log(floatReg.test(floatNum3)) // false\n```\n\n12、邮政编号的校验\n----------\n\n```js\nconst postalNoReg = /^\\d{6}$/\n\nconst postalNoStr1 = '522000'\nconsole.log(postalNoReg.test(postalNoStr1)) // true\n\nconst postalNoStr2 = '5220000'\nconsole.log(postalNoReg.test(postalNoStr2)) // false\n```\n\n13、QQ号的校验\n---------\n\n说明：5-11位数字\n\n```js\nconst qqReg = /^[1-9][0-9]{4,10}$/\n\nconst qqStr1 = '1915801633'\nconsole.log(qqReg.test(qqStr1)) // true\n\nconst qqStr2 = '191580163333'\nconsole.log(qqReg.test(qqStr2)) // false\n```\n\n14、微信号的校验\n---------\n\n说明：6至20位，以字母开头，字母，数字，减号，下划线\n\n```js\nconst wxReg = /^[a-zA-Z]([-_a-zA-Z0-9]{5,19})+$/\n\nconst wxStr1 = 'linsanxin885577'\nconsole.log(wxReg.test(wxStr1)) // true\n\nconst wxStr2 = '厉害了我的vx'\nconsole.log(wxReg.test(wxStr2)) // false\n```\n\n15、车牌号的校验\n---------\n\n```js\nconst carNoReg = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$/\n\nconst carNoStr1 = '粤A12345'\nconsole.log(carNoReg.test(carNoStr1)) // true\n\nconst carNoStr2 = '广东A12345'\nconsole.log(carNoReg.test(carNoStr2)) // false\n```\n\n16、只含字母的字符串\n-----------\n\n```js\nconst letterReg = /^[a-zA-Z]+$/\n\nconst letterStr1 = 'sunshineLin'\nconsole.log(letterReg.test(letterStr1)) // true\n\nconst letterStr2 = 'sunshine_Lin'\nconsole.log(letterReg.test(letterStr2)) // false\n```\n\n17、包含中文的字符串\n-----------\n\n```js\nconst cnReg = /[\\u4E00-\\u9FA5]/\n\nconst cnStr1 = '我是sunshine_Lin，林三心'\nconsole.log(cnReg.test(cnStr1)) // true\n\nconst cnStr2 = 'sunshine_Lin'\nconsole.log(cnReg.test(cnStr2)) // false\n```\n\n18、密码强度的校验\n----------\n\n说明：密码中必须包含字母、数字、特称字符，至少8个字符，最多30个字符\n\n```js\nconst passwordReg = /(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[^a-zA-Z0-9]).{8,30}/\n\nconst password1 = 'sunshine_Lin12345..'\nconsole.log(passwordReg.test(password1)) // true\n\nconst password2 = 'sunshineLin12345'\nconsole.log(passwordReg.test(password2)) // false\n```\n\n19、字符串长度n的校验\n------------\n\n```js\n    function checkStrLength(n) {\n    return new RegExp(`^.{${n}}$`)\n}\n\n// 校验长度为3的字符串\nconst lengthReg = checkStrLength(3)\n\nconst str1 = 'hhh'\nconsole.log(lengthReg.test(str1)) // true\n\nconst str2 = 'hhhhh'\nconsole.log(lengthReg.test(str2)) // false\n```\n\n20、文件拓展名的校验\n-----------\n\n```js\n    function checkFileName (arr) {\n    arr = arr.map(name => `.${name}`).join('|')\n    return new RegExp(`(${arr})$`)\n}\n\nconst filenameReg = checkFileName(['jpg', 'png', 'txt'])\n\nconst filename1 = 'sunshine.jpg'\nconsole.log(filenameReg.test(filename1)) // true\nconst filename2 = 'sunshine.png'\nconsole.log(filenameReg.test(filename2)) // true\nconst filename3 = 'sunshine.txt'\nconsole.log(filenameReg.test(filename3)) // true\nconst filename4 = 'sunshine.md'\nconsole.log(filenameReg.test(filename4)) // false\n```\n\n21、匹配img和src\n------------\n\n```js\nconst imgReg = /<img.*?src=[\\\"|\\']?(.*?)[\\\"|\\']?\\s.*?>/ig\n\nconst htmlStr = '<div></div><img src=\"sunshine.png\" /><img src=\"sunshine111.png\" />'\n\nconsole.log(imgReg.exec(htmlStr))\n    // [\n    //   '<img src=\"sunshine.png\" />',\n    //   'sunshine.png',\n    //   index: 11,\n    //   input: '<div></div><img src=\"sunshine.png\" /><img src=\"sunshine111.png\" />',\n    //   groups: undefined\n// ]\nconsole.log(imgReg.exec(htmlStr))\n    // [\n    //   '<img src=\"sunshine111.png\" />',\n    //   'sunshine111.png',\n    //   index: 37,\n    //   input: '<div></div><img src=\"sunshine.png\" /><img src=\"sunshine111.png\" />',\n    //   groups: undefined\n// ]\n```\n\n22、匹配html中的注释\n-------------\n\n```js\nconst noteReg = /<!--(.*?)-->/g\n\nconst htmlStr = '<!--一个div标签--> <div></div> <!--一个div标签--> <div></div>'\n\nconsole.log(noteReg.exec(htmlStr))\n    // [\n    //   '<!--一个div标签-->',\n    //   '一个div标签',\n    //   index: 0,\n    //   input: '<!--一个div标签--> <div></div> <!--一个div标签--> <div></div>',\n    //   groups: undefined\n// ]\nconsole.log(noteReg.exec(htmlStr))\n    // [\n    //   '<!--一个div标签-->',\n    //   '一个div标签',\n    //   index: 27,\n    //   input: '<!--一个div标签--> <div></div> <!--一个div标签--> <div></div>',\n    //   groups: undefined\n// ]\n```\n\n23、匹配html中的style\n----------------\n\n```js\nconst styleReg = /style=\"[^=>]*\"([(\\s+\\w+=)|>])/g\n\nconst htmlStr = '<div style=\"background:#000;\"><span style=\"color:#fff\"></span></div>'\n\nconsole.log(styleReg.exec(htmlStr))\n    // [\n    //   'style=\"background:#000;\">',\n    //   '>',\n    //   index: 5,\n    //   input: '<div style=\"background:#000;\"><span style=\"color:#fff\"></span></div>',\n    //   groups: undefined\n// ]\nconsole.log(styleReg.exec(htmlStr))\n    // [\n    //   'style=\"color:#fff\">',\n    //   '>',\n    //   index: 36,\n    //   input: '<div style=\"background:#000;\"><span style=\"color:#fff\"></span></div>',\n    //   groups: undefined\n// ]\n```\n\n24、匹配html中的颜色\n-------------\n\n```js\nconst colorReg = /#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})/g\n\nconst htmlStr = '<div style=\"background:#000;\"><span style=\"color:#fff\"></span></div>'\n\nconsole.log(colorReg.exec(htmlStr))\n    // [\n    //   '#000',\n    //   '000',\n    //   index: 23,\n    //   input: '<div style=\"background:#000;\"><span style=\"color:#fff\"></span></div>',\n    //   groups: undefined\n// ]\nconsole.log(colorReg.exec(htmlStr))\n    // [\n    //   '#fff',\n    //   'fff',\n    //   index: 49,\n    //   input: '<div style=\"background:#000;\"><span style=\"color:#fff\"></span></div>',\n    //   groups: undefined\n// ]\n```\n\n25、匹配htmlTag（html标签）\n--------------------\n\n```js\nconst endReg = /<(\"[^\"]*\"|'[^']*'|[^'\">])*>/g\n\nconst htmlStr = '<div style=\"background:#000;\"><span style=\"color:#fff\"></span></div><h1></h1>'\n\nconsole.log(endReg.exec(htmlStr))\nconsole.log(endReg.exec(htmlStr))\nconsole.log(endReg.exec(htmlStr))\nconsole.log(endReg.exec(htmlStr))\nconsole.log(endReg.exec(htmlStr))\nconsole.log(endReg.exec(htmlStr))\n```\n\n结语\n--\n\n如果你觉得此文对你有一丁点帮助，点个赞，鼓励一下林三心哈哈。\n\n**如果你想一起学习前端或者摸鱼，那你可以加我，加入我的摸鱼学习群，点击这里** ---> [摸鱼沸点](https://juejin.cn/pin/7035153948126216206 \"https://juejin.cn/pin/7035153948126216206\")\n\n**如果你是有其他目的的，别加我，我不想跟你交朋友，我只想简简单单学习前端，不想搞一些有的没的！！！**",
	"selfDefined": "likes:1300,comments:82,collects:2500,likes:42936"
}