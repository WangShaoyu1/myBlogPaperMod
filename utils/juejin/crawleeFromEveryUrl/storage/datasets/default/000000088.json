{
	"title": "【面经】分享频率超级高的26道CSS面试题",
	"author": "Sunshine_Lin",
	"publishTime": "2023-02-15",
	"readTime": "阅读6分钟",
	"tags": "[\"前端\",\"CSS中文技术社区\",\"前端开发社区\",\"前端技术交流\",\"前端框架教程\",\"JavaScript 学习资源\",\"CSS 技巧与最佳实践\",\"HTML5 最新动态\",\"前端工程师职业发展\",\"开源前端项目\",\"前端技术趋势\"]",
	"description": "前言 大家好，我是林三心，用最通俗易懂的话讲最难的知识点是我的座右铭，基础是进阶的前提是我的初心。 CSS 1、选择器权重 !important：最高权重 内联样式：1000 id",
	"article": "前言\n--\n\n大家好，我是林三心，**用最通俗易懂的话讲最难的知识点**是我的座右铭，**基础是进阶的前提**是我的初心。\n\n![](/images/jueJin/8ecd8f450757421.png)\n\nCSS\n---\n\n### 1、选择器权重\n\n*   \\*\\*!important：\\*\\*最高权重\n*   \\*\\*内联样式：\\*\\*1000\n*   \\*\\*id选择器：\\*\\*100\n*   \\*\\*类选择器：\\*\\*10\n*   \\*\\*属性选择器：\\*\\*10\n*   \\*\\*伪类选择器：\\*\\*10\n*   \\*\\*标签选择器：\\*\\*1\n*   \\*\\*伪元素选择器：\\*\\*1\n*   \\*\\*相邻兄弟选择器：\\*\\*0\n*   \\*\\*子选择器：\\*\\*0\n*   \\*\\*后代选择器：\\*\\*0\n*   \\*\\*通配符选择器：\\*\\*0\n\n### 2、可继承和不可继承样式\n\n#### 不可继承\n\n*   display\n*   width、height、margin、padding、border\n*   background、background-color\n*   position、top、right、left、bottom\n\n#### 可继承\n\n*   **font-size、font-weight、font-family**\n*   **line-height、text-align、color**\n*   **visibility**\n*   **cursor**\n\n### block和inline的区别？\n\n*   \\*\\*block：\\*\\*独占一行，可设置宽高、margin、padding\n*   \\*\\*inline：\\*\\*不独占一行，不可设置宽高，可设置水平margin、padding但不能设置垂直方向margin、padding\n\n### 3、隐藏元素的方式\n\n*   **display：none** 直接消失\n*   **visibility：hidden** 不可见，但占着位置\n*   **opacity：0** 透明不可见，但占着位置\n*   **position：absolute** 绝对定位并移出可见范围\n*   **z-index：-999** 将层级设置在底部，让他不可见\n\n### 4、link和@import区别\n\n*   link可以加载css、rss；@import只能加载css\n*   link在页面载入时同时加载；@import在页面载入后再加载\n*   link无兼容问题；@import是新语法，低版本浏览器不兼容\n*   link标签可被js操作dom去除；@import不行\n\n### 5、transition和animation的区别\n\n*   \\*\\*transition：\\*\\*过度样式，需要被动触发\n*   \\*\\*animation：\\*\\*动画样式，不需要被动触发，可以自动触发，可结合@keyframe进行多个关键帧的动画\n\n### 6、伪元素和伪类\n\n*   \\*\\*伪元素：\\*\\*顾名思义，假的元素，只会显示其内容，但是并不会在dom树中找到他\n\n```js\np::before {content:\"林三心\";}\np::after {content:\"林三心\";}\np::first-line {background:red;}\np::first-letter {font-size:30px;}\n```\n\n*   \\*\\*伪类：\\*\\*将一些效果加到节点上，例如鼠标点击，悬浮等\n\n```js\na:hover {color: #FF00FF}\np:first-child {color: red}\n```\n\n### 7、盒模型\n\n*   \\*\\*标准盒模型：\\*\\*width、height的计算范围只包含content\n*   \\*\\*IE盒模型：\\*\\*width、height的计算范围包含content、padding、border\n\n通过`box-sizing`进行设置\n\n*   **box-sizing: content-box**标准盒模型（默认）\n*   **box-sizing: border-box**IE盒模型（怪异盒模型）\n\n### 8、CSS3新样式\n\n*   \\*\\*:not(.cc)：\\*\\*新增的选择器，标识所有class不是“cc”的节点\n*   \\*\\*border-radius：\\*\\*边框圆角\n*   \\*\\*box-shadow：\\*\\*阴影\n*   \\*\\*text-shadow：\\*\\*文字阴影\n*   \\*\\*text-decoration：\\*\\*文字样式渲染\n*   \\*\\*gradient：\\*\\*线性渐变\n*   \\*\\*transform：\\*\\*可设置变形、放大缩小、旋转、定位\n*   \\*\\*flex：\\*\\*flex布局\n\n### 9、CSS提升性能方式\n\n*   1、css代码压缩\n*   2、link代替@import\n*   3、避免多层选择器\n*   4、动画CPU加速\n\n### 10、为何使用less、sass\n\n他们是css预处理器，使用他们的变量、继承、运算、函数等功能，大大提高样式编写效率，大多数打包工具最后都会将他们解析为原始css样式代码\n\n### 11、postCss是啥\n\n后置css，将解析后的css样式代码进行处理，提高其在各个浏览器的兼容性，常用做法是为每个浏览器样式添加特有前缀\n\n### 12、单行、多行溢出省略号\n\n*   单行\n\n```css\noverflow: hidden;\ntext-overflow: ellipsis;\nwhite-space: nowrap;\n```\n\n*   多行\n\n```css\noverflow: hidden;\ntext-overflow: ellipsis;\ndisplay: -webkit-box;\n-webkit-box-orient: vertical;\n-webkit-line-clamp: 3;\n```\n\n### 13、自适应布局方式\n\n*   \\*\\*媒体查询@media：\\*\\*通过监听不同的窗口宽度，展示不同的效果\n*   \\*\\*rem：\\*\\*监听不同窗口宽度，为根节点设置对应font-size，并进而使所有使用到rem的样式得到变化（rem的“r”就是“root”）\n\n### 14、CSS工程化\n\n*   **CSS实现模块化**\n*   **CSS预处理器**\n*   **CSS的postCSS**\n*   **CSS代码压缩**\n\n### 15、CSS常见单位\n\n*   \\*\\*px：\\*\\*固定像素，无自适应\n*   \\*\\*em：\\*\\*根据父元素的font-size决定大小\n*   \\*\\*rem：\\*\\*根据根元素的font-size决定大小\n\n### 16、flex：1代表什么？\n\nflex: 1 1 auto\n\n分别是flex-grow、flex-shrink、flex-basis\n\n### 17、两栏布局\n\n两栏布局指的是，左边固定右边自适应\n\n*   **float浮动**\n\n```css\n    .outer {\n    height: 100px;\n}\n    .left {\n    float: left;\n    width: 200px;\n    background: tomato;\n}\n    .right {\n    margin-left: 200px;\n    width: auto;\n    background: gold;\n}\n```\n\n*   **flex布局**\n\n```css\n    .outer {\n    display: flex;\n    height: 100px;\n}\n    .left {\n    width: 200px;\n    background: tomato;\n}\n    .right {\n    flex: 1;\n    background: gold;\n}\n```\n\n### 18、三栏布局\n\n三栏布局指的是左右固定，中间自适应\n\n直接用flex布局\n\n```css\n    .outer {\n    display: flex;\n    height: 100px;\n}\n​\n    .left {\n    width: 100px;\n    background: tomato;\n}\n​\n    .right {\n    width: 100px;\n    background: gold;\n}\n​\n    .center {\n    flex: 1;\n    background: lightgreen;\n}\n```\n\n### 19、双飞翼（圣杯）布局\n\n直接用flex布局\n\n```css\n    .outer {\n    display: flex;\n    height: 100px;\n}\n​\n    .left {\n    width: 100px;\n    background: tomato;\n}\n​\n    .right {\n    width: 100px;\n    background: gold;\n}\n​\n    .center {\n    flex: 1;\n    background: lightgreen;\n}\n```\n\n### 20、水平垂直居中实现？\n\n*   **绝对定位+transform**\n\n```css\n    .parent {\n    position: relative;\n}\n    .child {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%,-50%);\n}\n```\n\n*   **flex布局**\n\n```css\n    .parent {\n    display: flex;\n    justify-content:center;\n    align-items:center;\n}\n```\n\n### 21、清除浮动方式\n\n*   \\*\\*给父元素定义高度：\\*\\*不建议，会导致其他布局问题\n*   **末尾空div并设置clear：both**不建议，增加无用dom节点\n*   **父元素设置overflow：hidden**不建议，会导致部分内容被隐藏\n*   **使用伪元素after+clear:both**强烈推荐\n\n### 22、对于BFC的理解？\n\n`BFC(块级格式上下文)`，你可以理解为一个有自己的布局规则的容器，其内部的布局不受外部影响\n\n#### 创建BFC的条件\n\n*   根元素：body\n*   元素设置浮动：float\n*   元素设置绝对定位：position为absolute、fixed\n*   display为：inline-block、table-cell、table-caption、flex等\n*   overflow为：hidden、auto、scroll\n\n### BFC容器特点\n\n*   垂直方向上，自上而下排列\n*   BFC中两个相邻容器的margin会重叠\n*   计算BFC高度时，会把浮动元素也计算（清除浮动方式之一）\n*   BFC容器不会和浮动容器发生重叠\n*   BFC容器内部元素不会影响外部元素\n*   每个元素左margin与容器的左border相接触\n\n### 23、实现一个三角形？\n\n宽度设置0，四个border中，透明掉三个，剩一个显示，就是三角形了\n\n```css\n    div {\n    width: 0;\n    height: 0;\n    border: 100px solid transparent;\n    border-bottom-color: red;\n}\n```\n\n### 24、实现扇形\n\n跟三角形差不多，只不过多设置一个`border-radius`\n\n```css\n    div{\n    border: 100px solid transparent;\n    width: 0;\n    heigt: 0;\n    border-radius: 100px;\n    border-top-color: red;\n}\n```\n\n### 25、如何显示小于12px的文字？\n\n使用`transform: scale()`进行缩小\n\n```css\n    span {\n    font-size: 12px;\n    -webkit-transform: scale(0.8);\n    display: block;\n}\n```\n\n### 26、为什么css选择器是自右往左解析？\n\n链接：[blog.csdn.net/jinboker/ar…](https://link.juejin.cn?target=https%3A%2F%2Fblog.csdn.net%2Fjinboker%2Farticle%2Fdetails%2F52126021 \"https://blog.csdn.net/jinboker/article/details/52126021\")\n\n参考资料\n----\n\n*   [juejin.cn/post/714971…](https://juejin.cn/post/7149716216167268366 \"https://juejin.cn/post/7149716216167268366\")\n*   [blog.csdn.net/jinboker/ar…](https://link.juejin.cn?target=https%3A%2F%2Fblog.csdn.net%2Fjinboker%2Farticle%2Fdetails%2F52126021 \"https://blog.csdn.net/jinboker/article/details/52126021\")\n\n结语\n--\n\n我是林三心，一个热心的前端菜鸟程序员。如果你上进，喜欢前端，想学习前端，那咱们可以交朋友，一起摸鱼哈哈，摸鱼群，点这个，有5000多名前端小伙伴在等着一起学习哦 --> [摸鱼沸点](https://juejin.cn/pin/7035153948126216206 \"https://juejin.cn/pin/7035153948126216206\")\n\n![image.png](/images/jueJin/fc3f3d434b7d489.png)",
	"selfDefined": "likes:45,comments:0,collects:87,likes:3289"
}