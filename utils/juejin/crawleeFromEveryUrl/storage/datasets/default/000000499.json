{
	"title": "Hutool中那些常用的工具类和方法",
	"author": "MacroZheng",
	"publishTime": "2019-09-04",
	"readTime": "阅读4分钟",
	"tags": "[\"Java中文技术社区\",\"前端开发社区\",\"前端技术交流\",\"前端框架教程\",\"JavaScript 学习资源\",\"CSS 技巧与最佳实践\",\"HTML5 最新动态\",\"前端工程师职业发展\",\"开源前端项目\",\"前端技术趋势\"]",
	"description": "Hutool是一个Java工具包，它帮助我们简化每一行代码，避免重复造轮子。如果你有需要用到某些工具方法的时候，不妨在Hutool里面找找，可能就有。本文将对Hutool中的常用工具类和方法进行介绍。 类型转换工具类，用于各种类型数据的转换。 日期时间工具类，定义了一些常用的日…",
	"article": "> SpringBoot实战电商项目mall（20k+star）地址：[github.com/macrozheng/…](https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fmacrozheng%2Fmall \"https://github.com/macrozheng/mall\")\n\n摘要\n--\n\nHutool是一个Java工具包，它帮助我们简化每一行代码，避免重复造轮子。如果你有需要用到某些工具方法的时候，不妨在Hutool里面找找，可能就有。本文将对Hutool中的常用工具类和方法进行介绍。\n\n安装\n--\n\nmaven项目在pom.xml添加以下依赖即可：\n\n```\n<dependency>\n<groupId>cn.hutool</groupId>\n<artifactId>hutool-all</artifactId>\n<version>4.6.3</version>\n</dependency>\n```\n\n常用工具类\n-----\n\n### Convert\n\n类型转换工具类，用于各种类型数据的转换。\n\n```\n//转换为字符串\nint a = 1;\nString aStr = Convert.toStr(a);\n//转换为指定类型数组\nString[] b = {\"1\", \"2\", \"3\", \"4\"};\nInteger[] bArr = Convert.toIntArray(b);\n//转换为日期对象\nString dateStr = \"2017-05-06\";\nDate date = Convert.toDate(dateStr);\n//转换为列表\nString[] strArr = {\"a\", \"b\", \"c\", \"d\"};\nList<String> strList = Convert.toList(String.class, strArr);\n```\n\n### DateUtil\n\n日期时间工具类，定义了一些常用的日期时间操作方法。\n\n```\n//Date、long、Calendar之间的相互转换\n//当前时间\nDate date = DateUtil.date();\n//Calendar转Date\ndate = DateUtil.date(Calendar.getInstance());\n//时间戳转Date\ndate = DateUtil.date(System.currentTimeMillis());\n//自动识别格式转换\nString dateStr = \"2017-03-01\";\ndate = DateUtil.parse(dateStr);\n//自定义格式化转换\ndate = DateUtil.parse(dateStr, \"yyyy-MM-dd\");\n//格式化输出日期\nString format = DateUtil.format(date, \"yyyy-MM-dd\");\n//获得年的部分\nint year = DateUtil.year(date);\n//获得月份，从0开始计数\nint month = DateUtil.month(date);\n//获取某天的开始、结束时间\nDate beginOfDay = DateUtil.beginOfDay(date);\nDate endOfDay = DateUtil.endOfDay(date);\n//计算偏移后的日期时间\nDate newDate = DateUtil.offset(date, DateField.DAY_OF_MONTH, 2);\n//计算日期时间之间的偏移量\nlong betweenDay = DateUtil.between(date, newDate, DateUnit.DAY);\n```\n\n### StrUtil\n\n字符串工具类，定义了一些常用的字符串操作方法。\n\n```\n//判断是否为空字符串\nString str = \"test\";\nStrUtil.isEmpty(str);\nStrUtil.isNotEmpty(str);\n//去除字符串的前后缀\nStrUtil.removeSuffix(\"a.jpg\", \".jpg\");\nStrUtil.removePrefix(\"a.jpg\", \"a.\");\n//格式化字符串\nString template = \"这只是个占位符:{}\";\nString str2 = StrUtil.format(template, \"我是占位符\");\nLOGGER.info(\"/strUtil format:{}\", str2);\n```\n\n### ClassPathResource\n\n获取classPath下的文件，在Tomcat等容器下，classPath一般是WEB-INF/classes。\n\n```\n//获取定义在src/main/resources文件夹中的配置文件\nClassPathResource resource = new ClassPathResource(\"generator.properties\");\nProperties properties = new Properties();\nproperties.load(resource.getStream());\nLOGGER.info(\"/classPath:{}\", properties);\n```\n\n### ReflectUtil\n\nJava反射工具类，可用于反射获取类的方法及创建对象。\n\n```\n//获取某个类的所有方法\nMethod[] methods = ReflectUtil.getMethods(PmsBrand.class);\n//获取某个类的指定方法\nMethod method = ReflectUtil.getMethod(PmsBrand.class, \"getId\");\n//使用反射来创建对象\nPmsBrand pmsBrand = ReflectUtil.newInstance(PmsBrand.class);\n//反射执行对象的方法\nReflectUtil.invoke(pmsBrand, \"setId\", 1);\n```\n\n### NumberUtil\n\n数字处理工具类，可用于各种类型数字的加减乘除操作及判断类型。\n\n```\ndouble n1 = 1.234;\ndouble n2 = 1.234;\ndouble result;\n//对float、double、BigDecimal做加减乘除操作\nresult = NumberUtil.add(n1, n2);\nresult = NumberUtil.sub(n1, n2);\nresult = NumberUtil.mul(n1, n2);\nresult = NumberUtil.div(n1, n2);\n//保留两位小数\nBigDecimal roundNum = NumberUtil.round(n1, 2);\nString n3 = \"1.234\";\n//判断是否为数字、整数、浮点数\nNumberUtil.isNumber(n3);\nNumberUtil.isInteger(n3);\nNumberUtil.isDouble(n3);\n```\n\n### BeanUtil\n\nJavaBean的工具类，可用于Map与JavaBean对象的互相转换以及对象属性的拷贝。\n\n```\nPmsBrand brand = new PmsBrand();\nbrand.setId(1L);\nbrand.setName(\"小米\");\nbrand.setShowStatus(0);\n//Bean转Map\nMap<String, Object> map = BeanUtil.beanToMap(brand);\nLOGGER.info(\"beanUtil bean to map:{}\", map);\n//Map转Bean\nPmsBrand mapBrand = BeanUtil.mapToBean(map, PmsBrand.class, false);\nLOGGER.info(\"beanUtil map to bean:{}\", mapBrand);\n//Bean属性拷贝\nPmsBrand copyBrand = new PmsBrand();\nBeanUtil.copyProperties(brand, copyBrand);\nLOGGER.info(\"beanUtil copy properties:{}\", copyBrand);\n```\n\n### CollUtil\n\n集合操作的工具类，定义了一些常用的集合操作。\n\n```\n//数组转换为列表\nString[] array = new String[]{\"a\", \"b\", \"c\", \"d\", \"e\"};\nList<String> list = CollUtil.newArrayList(array);\n//join：数组转字符串时添加连接符号\nString joinStr = CollUtil.join(list, \",\");\nLOGGER.info(\"collUtil join:{}\", joinStr);\n//将以连接符号分隔的字符串再转换为列表\nList<String> splitList = StrUtil.split(joinStr, ',');\nLOGGER.info(\"collUtil split:{}\", splitList);\n//创建新的Map、Set、List\nHashMap<Object, Object> newMap = CollUtil.newHashMap();\nHashSet<Object> newHashSet = CollUtil.newHashSet();\nArrayList<Object> newList = CollUtil.newArrayList();\n//判断列表是否为空\nCollUtil.isEmpty(list);\n```\n\n### MapUtil\n\nMap操作工具类，可用于创建Map对象及判断Map是否为空。\n\n```\n//将多个键值对加入到Map中\n    Map<Object, Object> map = MapUtil.of(new String[][]{\n    {\"key1\", \"value1\"},\n    {\"key2\", \"value2\"},\n{\"key3\", \"value3\"}\n});\n//判断Map是否为空\nMapUtil.isEmpty(map);\nMapUtil.isNotEmpty(map);\n```\n\n### AnnotationUtil\n\n注解工具类，可用于获取注解与注解中指定的值。\n\n```\n//获取指定类、方法、字段、构造器上的注解列表\nAnnotation[] annotationList = AnnotationUtil.getAnnotations(HutoolController.class, false);\nLOGGER.info(\"annotationUtil annotations:{}\", annotationList);\n//获取指定类型注解\nApi api = AnnotationUtil.getAnnotation(HutoolController.class, Api.class);\nLOGGER.info(\"annotationUtil api value:{}\", api.description());\n//获取指定类型注解的值\nObject annotationValue = AnnotationUtil.getAnnotationValue(HutoolController.class, RequestMapping.class);\n```\n\n### SecureUtil\n\n加密解密工具类，可用于MD5加密。\n\n```\n//MD5加密\nString str = \"123456\";\nString md5Str = SecureUtil.md5(str);\nLOGGER.info(\"secureUtil md5:{}\", md5Str);\n```\n\n### CaptchaUtil\n\n验证码工具类，可用于生成图形验证码。\n\n```\n//生成验证码图片\nLineCaptcha lineCaptcha = CaptchaUtil.createLineCaptcha(200, 100);\n    try {\n    request.getSession().setAttribute(\"CAPTCHA_KEY\", lineCaptcha.getCode());\n    response.setContentType(\"image/png\");//告诉浏览器输出内容为图片\n    response.setHeader(\"Pragma\", \"No-cache\");//禁止浏览器缓存\n    response.setHeader(\"Cache-Control\", \"no-cache\");\n    response.setDateHeader(\"Expire\", 0);\n    lineCaptcha.write(response.getOutputStream());\n        } catch (IOException e) {\n        e.printStackTrace();\n    }\n```\n\n### 其他工具类\n\nHutool中的工具类很多，可以参考：[www.hutool.cn/](https://link.juejin.cn?target=https%3A%2F%2Fwww.hutool.cn%2F \"https://www.hutool.cn/\")\n\n项目源码地址\n------\n\n[github.com/macrozheng/…](https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fmacrozheng%2Fmall-learning%2Ftree%2Fmaster%2Fmall-tiny-hutool \"https://github.com/macrozheng/mall-learning/tree/master/mall-tiny-hutool\")\n\n公众号\n---\n\n[mall项目](https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fmacrozheng%2Fmall \"https://github.com/macrozheng/mall\")全套学习教程连载中，**关注公众号**第一时间获取。\n\n![公众号图片](/images/jueJin/16cf245f5d5652b.png)",
	"selfDefined": "likes:66,comments:0,collects:117,likes:11221"
}