{
	"title": "Gitlab上手指南（四）｜从gitlab上clone项目的两种正确姿势以及常用的git可视化工具介绍",
	"author": "白哥学前端",
	"publishTime": "2023-01-28",
	"readTime": "阅读3分钟",
	"tags": "[\"GitHub\",\"GitLab\"]",
	"description": "上一节我们已经创建了一个项目，本节课我就把这个项目clone到本地，然后实操一下常用git命令gitcloneclone的方式有下面两种，一种是SSH，一种是HTTPS，两种克隆方式的主要区别在",
	"article": "上一节我们已经创建了一个项目，本节课我就把这个项目clone到本地，然后实操一下常用git命令\n\ngit clone\n---------\n\n`clone`的方式有下面两种，一种是`SSH`，一种是`HTTPS`，两种克隆方式的主要区别在于：\n\n*   HTTPS只需要复制链接，然后到git Bash输入clone命令即可将项目克隆到本地，但是每次fetch和push代码都需要输入账号和密码；而使用SSH，默认每次通信无需输入账号密码，但需要在克隆之前先配置和添加好SSH key，添加SSH key的前提是，你必须是这个项目的拥有者.\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/48e6a1fcb88549b78aaf65ecf0a6ce6a~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp)\n\n你可以选择直接下载这个代码仓库，下载以后是个压缩包，不会携带`.git`文件。\n\n现在让我们先来clone一下我们的项目\n\n使用下面的命令就可以直接`clone`,\n\nbash\n\n 代码解读\n\n复制代码\n\n`git clone git@gitlab.com:fe-test1/git-demo.git`\n\n首次clone的时候会让你输入用户名和密码.，如果你不知道自己的密码是多少了，可以`Edit profiles->password`当中修改。下图展示即位`clone`成功。\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/16146c0d88e04c02be31e253f6e9e6f7~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp)\n\n现在我们来提交一条信息测试一下我们的是否能推送到远程仓库.\n\n打开项目，在`README.md`文件中随便修改点信息，然后执行\n\nsql\n\n 代码解读\n\n复制代码\n\n`# 添加代码到暂存区域 .添加所有文件 git add .  # 提交commit信息 \"feat\" commit规范，后面章节会介绍 git commit -m \"feat: 第一次提交代码\"`\n\n使用`git status`查看一下还有没有未提交的代码，提示我们该push了\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8cda7b88f698444db2f53c3a5068671f~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp)\n\n执行`git push`推送代码到远程\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/86a5ea5a96e849da9f1732392d61974a~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp)\n\n显示push成功，代码被push到了`main`分支。那我们去面板当中去查看一下，是不是刚才我们提交的内容：\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7f972502191043fa9fa34cd5ef4712b9~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp)\n\n可以看到我们刚才修改的信息和提交的commit信息。\n\nOK，走到这一步，说明你在公司第一步已经走稳了。曾经听过很多次因为某些自称大佬的程序员连这个东西都搞不定而被质疑的，因为这一步很多刚入门的程序员真的是不会啊！！！\n\ngit remote\n----------\n\n如果是我们在本地创建的项目如何与远程仓库建立连接呢？答案是利用`git remote`\n\n同样的，首先还是得在远程建立一个仓库`local-test`，然后在本地建立一个文件夹`local-test`,然后添加一个`READMD.md`文件，随便添加一些信息。\n\n在文件夹的根目录下执行下面的命令：\n\ncsharp\n\n 代码解读\n\n复制代码\n\n`# 初始化仓库 git init # 添加暂存区 git add . # 提交 git commit -m \"feat: 建立与远程仓库的连接\" # 添加远程源信息 git remote add origin git@gitlab.com:fe-test1/local-test.git # push代码到origin/main分支 git push -u origin main`\n\n代码可以成功推送到远程仓库即为成功。\n\n总结：一般如果是已有代码仓库，我们往往使用第一种方式比较多一些，如果是创建一个新仓库和新项目，我们会使用第二种方式。\n\nvscode\n------\n\nvscode自带git管理工具，当我们修改了某些东西，就可以很清晰的看到修改了哪些文件和内容，\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/63fb2458c2e14331a5208a1d45cf52aa~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp)\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/66acafbe2fc34c19b391763b268d8e4d~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp)在左侧有很多操作快捷方式，暂存提交push等操作。\n\n安装了`gitlens`插件就可以查看别人的提交记录，尤其是合并冲突的时候更加方便快捷。\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1bf37c9f533146de84fb86eeaea8fe21~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp)\n\ngitkraken\n---------\n\n强力推荐这个工具，可以方便的在这个工具上面建立一个远程仓库，或者clone远程仓库，管理本地仓库等等。如果没法科学上网的同学可能push代码半天没发push上去，使用了这个工具你根本无需担心网络问题，可以pull和push大文件，而且很快。\n\n> 不过，只能在mac上使用😭\n\n下地址：[www.gitkraken.com/](https://link.juejin.cn?target=https%3A%2F%2Fwww.gitkraken.com%2F \"https://www.gitkraken.com/\")\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2ea6ac26c708423dad875a4f437f7ae7~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp?)"
}