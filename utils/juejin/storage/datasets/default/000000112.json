{
	"title": "继续遥遥领先？华为全新编程语言【仓颉】，前端学习它有多简单？",
	"author": "程序员Sunday",
	"publishTime": "2024-06-23",
	"readTime": "阅读6分钟",
	"tags": "[\"前端\",\"HarmonyOS\"]",
	"description": "2024年6月21日下午，在华为开发者大会中向全球开发者介绍了华为自研编程语言【“仓颉”】，算是补全了鸿蒙生态中的“最后一环”。",
	"article": "Hello，大家好，我是 Sunday。\n\n2024年6月21日下午，在华为开发者大会中向全球开发者介绍了华为自研编程语言 **“仓颉”**，算是补全了鸿蒙生态中的 “最后一环”。\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b2f88bb98bad44578c4e3ece8ecd53ea~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=951&h=493&s=394107&e=png&b=111714)\n\n根据 [仓颉编程语言白皮书](https://link.juejin.cn?target=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Fdoc%2Fopenharmony-cangjie%2Fcj-wp-abstract \"https://developer.huawei.com/consumer/cn/doc/openharmony-cangjie/cj-wp-abstract\") 描述：仓颉编程语言是一款面向全场景应用开发的现代编程语言，通过现代语言特性的集成、全方位的编译优化和运行时实现、以及开箱即用的IDE工具链支持，为开发者打造友好开发体验和卓越程序性能。特别是在物联网（IoT）、人工智能（AI）和分布式系统方面。\n\n一堆让人看不懂得行业术语（黑话）。不过既然是鸿蒙生态，那么对我们这些开发者而言仓颉的核心场景还是用来去完成 **鸿蒙系统开发的**。\n\n那么今天，咱们先不聊所谓的鸿蒙生态，仅以前端开发者的身份来看看仓颉与现有前端开发语言的差异！\n\n仓颉编程语言的特性\n---------\n\n根据白皮书所述，仓颉的特性主要由 4 个，分别是：\n\n1.  **学习门槛低**：仓颉是一门多范式编程语言，支持函数式、命令式和面向对象等多种范式，包括值类型、类和接口、泛型、代数数据类型、模式匹配、以及高阶函数等特性。此外，仓颉还支持类型推断（`类似 TS`），能够减轻开发者类型标注的负担；通过一系列简明高效的语法，能够减少冗余书写、提升开发效率；语言内置的各种语法糖和宏（macro）的能力，支持开发者基于仓颉快速开发领域专用语言（DSL），构建领域抽象。\n2.  **安全**：通过静态类型系统和自动内存管理，确保程序的类型安全和null safety等内存安全；同时，仓颉还提供各种运行时检查，包括数组下标越界检查、类型转换检查、数值计算溢出检查、以及字符串编码合法性检查等，能够及时发现程序运行中的错误；此外，还通过代码扫描工具、混淆工具以及消毒器，进一步提供跨语言互操作安全和代码资产保护等支持。\n3.  **支持并发**：仓颉语言实现了轻量化用户态线程和并发对象库，让高效并发变得轻松。对开发者来说，用户态线程的使用和传统的系统线程的使用方式保持一致，没有带来额外负担；而从运行态视角看，线程的管理由运行时完成，不依赖操作系统的线程管理，因此线程的创建、调度和销毁等操作更加高效，且资源占用比系统线程更少。为了避免数据竞争，仓颉语言提供了并发对象库，并发对象的方法是线程安全的，因此在多线程中调用这些方法和串行编程没有区别，应用逻辑的开发者无需额外关心并发管理。对于一些核心库，仓颉还提供了无锁或者细粒度锁的算法实现，能够进一步减少线程的阻塞，提升并发度。\n4.  **性能更强**：仓颉语言通过值类型、多层级静态分析优化和超轻量运行时，在计算机语言基准测试Benchmarks Game上，相比业界同类语言取得了较为明显的性能优势。以下是对比数据\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9d7dd34204f7431c9f7c88b32988a15d~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=602&h=136&s=10216&e=png&b=fefefe)\n\n看起来好像很厉害的样子，不愧是“遥遥领先”。\n\n不过以上内容在其他很多编程语言的发布中均有类似描述。所以实际体验如何，还需要等待实际开发者进行长时间的真实开发之后，才能得出具体结论。\n\n仓颉开发实际体验\n--------\n\n其实在仓颉之前，鸿蒙生态之中一直是通过 `ArkTS` 进行应用开发：\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/81f96097f944484c9f208319cac29af9~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=2488&h=896&s=1992835&e=png&a=1&b=5178c5)\n\n`ArkTS` 语法与 `TS` 非常类似。所以也有很多同学说 **前端学习鸿蒙 so easy！**\n\n那么这次所谓的 **“全新开发，没有借鉴” 的仓颉** 又是什么样的语法表现呢？\n\n咱们一起来看看！\n\n目前仓颉已经公布了开发文档：\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a61ff64b0f60474a85fe6849fd31a2fa~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=802&h=1214&s=107177&e=png&a=1&b=fefefe)\n\n文档中很详细的描述了 仓颉语法 的日常应用。\n\n### 01：声明变量\n\n在仓颉中，声明变量有三种方式，分别是 `var、let、const`\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c66f27b905b2416bbae71ba3748da3ed~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=1754&h=862&s=163115&e=png&a=1&b=ffffff)\n\n对于这三个关键字，前端的同学应该非常熟悉了。这里就不去多说了。\n\n### 02：函数\n\n在仓颉中声明函数，需要使用 `func` 关键字，前端的同学可以理解为 `function` 的缩写\n\njs\n\n 代码解读\n\n复制代码\n\n`func add(a: Int64, b: Int64): Int64 {     return a + b }`\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7cf4d281f93e48ab988a2dad9f8a2e4f~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=1728&h=876&s=197581&e=png&a=1&b=fefefe)\n\n在这个代码中涉及到 `Int64` 的数据类型，那么仓颉中都有什么数据类型呢？\n\n### 03：数据类型\n\n仓颉的数据类型，大致也可以被分为三类：\n\n1.  **简单类型**：整数类型（有符号整数Int8、Int16、Int64...。无符号整数UInt8、UInt16、UInt32...）、浮点类型（Float...）、布尔类型（Bool）、字符类型（Rune）、字符串类型（String）\n2.  **复杂类型**：元组类型（Tuple 不可变）、数组类型（Array<泛型>）、区间类型（Range）\n3.  **特殊类型**：Nothing（break、continue、return 和 throw 表达式）\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d14db4607d404aa4ae23e9168d582467~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=1788&h=1042&s=234679&e=png&a=1&b=ffffff)\n\n### 04：枚举\n\n熟悉 TS 的同学应该并不陌生。所谓枚举（`enum`）指的是：通过列举一个类型的所有可能取值来定义此类型的方式。\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cde0380f1fe54ad38eb569674ba0a57c~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=1756&h=862&s=166304&e=png&a=1&b=fefefe)\n\n### 05：类和接口\n\n仓颉中原生提供了类和接口的概念。熟悉 `TS` 的同学看到下面的代码应该会非常亲切了：\n\n![类（支持继承）](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b2366130eae740029b496bcca0438da9~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=1752&h=928&s=291168&e=png&a=1&b=fdfdfd)\n\n![接口](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e8a9aa980e5d486581ee7192939e5896~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=1762&h=1046&s=360416&e=png&a=1&b=fcfcfc)\n\n### 06：异常类型\n\n仓颉提供了`Exception`和`Error`两个类型，用于描述程序运行时的异常行为\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7a0af6473ad44e7692226bf695d5b7ba~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=1710&h=810&s=437561&e=png&a=1&b=fafafa)\n\n### 07：并发处理\n\n并发的概念，很多同学可能会比较陌生。因为 `js` 天生是单线程的，所以并不支持并发处理。\n\n但是仓颉是支持并发，并且支持线程模型的\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/872b7edbcd6c4c60960b1532450dde73~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=1768&h=988&s=182944&e=png&a=1&b=ffffff)\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3cc179d96b534c6b8e8e03f71702552a~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=1782&h=1012&s=548395&e=png&a=1&b=f8f8f8)\n\n### 08：跨语言通讯\n\n如果有做过 `webview` 渲染 `H5` 应用的同学，那么必然使用过 `JSBirdge` 的概念。了解这个概念的同学对跨语音通讯应该并不陌生。\n\n对于仓颉来说，默认也支持跨语言通讯的方式\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4a1a2d3f96664241b6ffd32525320e80~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=1752&h=960&s=375987&e=png&a=1&b=f8f8f8)\n\n### 09：宏\n\n\"宏\" 很多同学可能会比较陌生。所谓的\"宏\"指的是：**一种用于文本替换和代码生成的预处理器指令或工具。它可以在代码编译之前进行文本替换或生成新的代码片段**\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5f262c41ece14b5baf87bea96841d94a~tplv-k3u1fbpfcp-jj-mark:3024:0:0:0:q75.awebp#?w=1770&h=1092&s=431445&e=png&a=1&b=fafafa)\n\n总结\n--\n\n根据以上描述，我们可以发现：仓颉和现有 `TS || JS` 中有比较多的类似概念。所以，目前的前端开发者，如果想要上手使用仓颉的话，学习成本并不会很高\n\n> **[前端训练营：1v1私教，终身辅导计划，帮你拿到满意的 `offer`。](https://link.juejin.cn?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkxNjUxMDg4Ng%3D%3D%26mid%3D2247492977%26idx%3D1%26sn%3Ddcc0d797efdcdbb21ac50e183f5960c4%26chksm%3Dc14c64b8f63bedaebfa149533984870ee9e8d9eeb8f493af39030a6571399682a2ec171f8b08%26token%3D292319748%26lang%3Dzh_CN%23rd \"https://mp.weixin.qq.com/s?__biz=MzkxNjUxMDg4Ng==&mid=2247492977&idx=1&sn=dcc0d797efdcdbb21ac50e183f5960c4&chksm=c14c64b8f63bedaebfa149533984870ee9e8d9eeb8f493af39030a6571399682a2ec171f8b08&token=292319748&lang=zh_CN#rd\")** 已帮助数百位同学拿到了中大厂 `offer`"
}